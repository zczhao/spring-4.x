<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE hibernate-configuration PUBLIC
        "-//Hibernate/Hibernate Configuration DTD 3.0//EN"
        "http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd">
<hibernate-configuration>
    <session-factory>
        <!-- 配置Hibernate的基本属性 -->
        <!-- 1、数据源需配置到IOC容器中，所以此处不再需要配置数据源 -->
        <!-- 2、关联的.hbm.xml也在IOC容器配置SessionFactory实例时再进行配置-->
        <!-- 3、配置Hibernate的基本属性：方言、SQL显示及格式化、生成数据表的策略以及二级缓存 -->

        <!-- hibernate使用的数据库方言 -->
        <property name="hibernate.dialect">org.hibernate.dialect.MySQL55Dialect</property>
        <!-- 执行操作时是否在控制台打印SQL -->
        <property name="hibernate.show_sql">true</property>
        <!-- 是否对SQL进行格式化 -->
        <property name="hibernate.format_sql">true</property>
        <!-- 指定自动生成数据表的策略 -->
        <!--
            hbm2ddl.auto: create|update|create-drop|validate
            create:会根据 .hbm.xml 文件来生成数据表,但是每次运行都会删除上一次表,重新生成表,哪怕两次没有任何改变
            create-drop:会根据  .hbm.xml 文件生成表,但是SessionFactory一关,表就会自动删除
            update:最常用的属性值,会根据.hbm.xml文件生成表,但若.hbm.xml文件和数据库中对应的数据表的结构不同,hibernate将会更新表结构,但不会删除已有的行和列
            validate:会和数据库中的表进行比较,若.hbm.xml文件中的列在数据表中不存在,则会抛出异常
        -->
        <property name="hibernate.hbm2ddl.auto">update</property>

        <!-- 配置Hibernate二级缓存相关的属性 -->
    </session-factory>
</hibernate-configuration>