[INFO] 2018-11-21 11:35:21 INFO org.springframework.test.context.support.AbstractTestContextBootstrapper.getDefaultTestExecutionListenerClassNames() (AbstractTestContextBootstrapper.java:248): Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
[INFO] 2018-11-21 11:35:21 INFO org.springframework.test.context.support.AbstractTestContextBootstrapper.getTestExecutionListeners() (AbstractTestContextBootstrapper.java:174): Using TestExecutionListeners: [org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@1b604f19, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@7823a2f9, org.springframework.test.context.support.DirtiesContextTestExecutionListener@4cc0edeb, org.springframework.test.context.transaction.TransactionalTestExecutionListener@457e2f02, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@5c7fa833]
[INFO] 2018-11-21 11:35:21 INFO org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions() (XmlBeanDefinitionReader.java:317): Loading XML bean definitions from class path resource [applicationContext.xml]
[INFO] 2018-11-21 11:35:21 INFO org.springframework.context.support.AbstractApplicationContext.prepareRefresh() (AbstractApplicationContext.java:583): Refreshing org.springframework.context.support.GenericApplicationContext@56ef9176: startup date [Wed Nov 21 11:35:21 CST 2018]; root of context hierarchy
[INFO] 2018-11-21 11:35:21 INFO com.mchange.v2.log.MLog$1.run() (MLog.java:124): MLog clients using log4j logging.
[INFO] 2018-11-21 11:35:26 INFO com.mchange.v2.c3p0.C3P0Registry.banner() (C3P0Registry.java:248): Initializing c3p0-0.9.5.2 [built 08-December-2015 22:06:04 -0800; debug? true; trace: 10]
[INFO] 2018-11-21 11:35:27 INFO org.hibernate.Version.logVersion() (Version.java:46): HHH000412: Hibernate Core {5.3.7.Final}
[INFO] 2018-11-21 11:35:27 INFO org.hibernate.cfg.Environment.<clinit>() (Environment.java:213): HHH000206: hibernate.properties not found
[INFO] 2018-11-21 11:35:27 INFO org.hibernate.annotations.common.reflection.java.JavaReflectionManager.<clinit>() (JavaReflectionManager.java:49): HCANN000001: Hibernate Commons Annotations {5.0.4.Final}
[DEBUG] 2018-11-21 11:35:27 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration boolean -> org.hibernate.type.BooleanType@58326051
[DEBUG] 2018-11-21 11:35:27 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration boolean -> org.hibernate.type.BooleanType@58326051
[DEBUG] 2018-11-21 11:35:27 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@58326051
[DEBUG] 2018-11-21 11:35:27 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@764faa6
[DEBUG] 2018-11-21 11:35:27 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration true_false -> org.hibernate.type.TrueFalseType@5a755cc1
[DEBUG] 2018-11-21 11:35:27 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration yes_no -> org.hibernate.type.YesNoType@484094a5
[DEBUG] 2018-11-21 11:35:27 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration byte -> org.hibernate.type.ByteType@e57b96d
[DEBUG] 2018-11-21 11:35:27 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration byte -> org.hibernate.type.ByteType@e57b96d
[DEBUG] 2018-11-21 11:35:27 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@e57b96d
[DEBUG] 2018-11-21 11:35:27 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration character -> org.hibernate.type.CharacterType@545b995e
[DEBUG] 2018-11-21 11:35:27 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration char -> org.hibernate.type.CharacterType@545b995e
[DEBUG] 2018-11-21 11:35:27 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@545b995e
[DEBUG] 2018-11-21 11:35:27 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration short -> org.hibernate.type.ShortType@29526c05
[DEBUG] 2018-11-21 11:35:27 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration short -> org.hibernate.type.ShortType@29526c05
[DEBUG] 2018-11-21 11:35:27 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.lang.Short -> org.hibernate.type.ShortType@29526c05
[DEBUG] 2018-11-21 11:35:27 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration integer -> org.hibernate.type.IntegerType@58be6e8
[DEBUG] 2018-11-21 11:35:27 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration int -> org.hibernate.type.IntegerType@58be6e8
[DEBUG] 2018-11-21 11:35:27 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@58be6e8
[DEBUG] 2018-11-21 11:35:27 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration long -> org.hibernate.type.LongType@2bd08376
[DEBUG] 2018-11-21 11:35:27 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration long -> org.hibernate.type.LongType@2bd08376
[DEBUG] 2018-11-21 11:35:27 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.lang.Long -> org.hibernate.type.LongType@2bd08376
[DEBUG] 2018-11-21 11:35:27 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration float -> org.hibernate.type.FloatType@42b02722
[DEBUG] 2018-11-21 11:35:27 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration float -> org.hibernate.type.FloatType@42b02722
[DEBUG] 2018-11-21 11:35:27 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.lang.Float -> org.hibernate.type.FloatType@42b02722
[DEBUG] 2018-11-21 11:35:27 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration double -> org.hibernate.type.DoubleType@5ce8d869
[DEBUG] 2018-11-21 11:35:27 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration double -> org.hibernate.type.DoubleType@5ce8d869
[DEBUG] 2018-11-21 11:35:27 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@5ce8d869
[DEBUG] 2018-11-21 11:35:27 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@7a1234bf
[DEBUG] 2018-11-21 11:35:27 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@7a1234bf
[DEBUG] 2018-11-21 11:35:27 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration big_integer -> org.hibernate.type.BigIntegerType@6bffbc6d
[DEBUG] 2018-11-21 11:35:27 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@6bffbc6d
[DEBUG] 2018-11-21 11:35:27 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration string -> org.hibernate.type.StringType@39a2bb97
[DEBUG] 2018-11-21 11:35:27 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.lang.String -> org.hibernate.type.StringType@39a2bb97
[DEBUG] 2018-11-21 11:35:27 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration nstring -> org.hibernate.type.StringNVarcharType@4331d187
[DEBUG] 2018-11-21 11:35:27 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@1608bcbd
[DEBUG] 2018-11-21 11:35:27 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration url -> org.hibernate.type.UrlType@4426bff1
[DEBUG] 2018-11-21 11:35:27 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.net.URL -> org.hibernate.type.UrlType@4426bff1
[DEBUG] 2018-11-21 11:35:27 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration Duration -> org.hibernate.type.DurationType@336f1079
[DEBUG] 2018-11-21 11:35:27 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.time.Duration -> org.hibernate.type.DurationType@336f1079
[DEBUG] 2018-11-21 11:35:27 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration Instant -> org.hibernate.type.InstantType@6eb2384f
[DEBUG] 2018-11-21 11:35:27 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.time.Instant -> org.hibernate.type.InstantType@6eb2384f
[DEBUG] 2018-11-21 11:35:27 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@12f9af83
[DEBUG] 2018-11-21 11:35:27 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@12f9af83
[DEBUG] 2018-11-21 11:35:27 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration LocalDate -> org.hibernate.type.LocalDateType@10cf09e8
[DEBUG] 2018-11-21 11:35:27 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@10cf09e8
[DEBUG] 2018-11-21 11:35:27 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@6bca7e0d
[DEBUG] 2018-11-21 11:35:27 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@6bca7e0d
[DEBUG] 2018-11-21 11:35:27 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@19835e64
[DEBUG] 2018-11-21 11:35:27 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@19835e64
[DEBUG] 2018-11-21 11:35:27 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@33308786
[DEBUG] 2018-11-21 11:35:27 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@33308786
[DEBUG] 2018-11-21 11:35:27 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@5e4bd84a
[DEBUG] 2018-11-21 11:35:27 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@5e4bd84a
[DEBUG] 2018-11-21 11:35:27 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration date -> org.hibernate.type.DateType@4ce1d6d0
[DEBUG] 2018-11-21 11:35:27 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.sql.Date -> org.hibernate.type.DateType@4ce1d6d0
[DEBUG] 2018-11-21 11:35:27 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration time -> org.hibernate.type.TimeType@71812481
[DEBUG] 2018-11-21 11:35:27 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.sql.Time -> org.hibernate.type.TimeType@71812481
[DEBUG] 2018-11-21 11:35:27 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration timestamp -> org.hibernate.type.TimestampType@6155d082
[DEBUG] 2018-11-21 11:35:27 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@6155d082
[DEBUG] 2018-11-21 11:35:27 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.util.Date -> org.hibernate.type.TimestampType@6155d082
[DEBUG] 2018-11-21 11:35:27 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@2ea6e30c
[DEBUG] 2018-11-21 11:35:27 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration calendar -> org.hibernate.type.CalendarType@7803bfd
[DEBUG] 2018-11-21 11:35:27 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@7803bfd
[DEBUG] 2018-11-21 11:35:27 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@7803bfd
[DEBUG] 2018-11-21 11:35:27 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@62ef27a8
[DEBUG] 2018-11-21 11:35:27 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration locale -> org.hibernate.type.LocaleType@25aca718
[DEBUG] 2018-11-21 11:35:27 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@25aca718
[DEBUG] 2018-11-21 11:35:27 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration currency -> org.hibernate.type.CurrencyType@79179359
[DEBUG] 2018-11-21 11:35:27 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@79179359
[DEBUG] 2018-11-21 11:35:27 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration timezone -> org.hibernate.type.TimeZoneType@4eb386df
[DEBUG] 2018-11-21 11:35:27 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@4eb386df
[DEBUG] 2018-11-21 11:35:27 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration class -> org.hibernate.type.ClassType@5a18cd76
[DEBUG] 2018-11-21 11:35:27 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.lang.Class -> org.hibernate.type.ClassType@5a18cd76
[DEBUG] 2018-11-21 11:35:27 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@6995bf68
[DEBUG] 2018-11-21 11:35:27 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@6995bf68
[DEBUG] 2018-11-21 11:35:27 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@3568f9d2
[DEBUG] 2018-11-21 11:35:27 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration binary -> org.hibernate.type.BinaryType@4b1d6571
[DEBUG] 2018-11-21 11:35:27 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration byte[] -> org.hibernate.type.BinaryType@4b1d6571
[DEBUG] 2018-11-21 11:35:27 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration [B -> org.hibernate.type.BinaryType@4b1d6571
[DEBUG] 2018-11-21 11:35:27 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@6e950bcf
[DEBUG] 2018-11-21 11:35:27 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@6e950bcf
[DEBUG] 2018-11-21 11:35:27 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@6e950bcf
[DEBUG] 2018-11-21 11:35:27 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration row_version -> org.hibernate.type.RowVersionType@5a709816
[DEBUG] 2018-11-21 11:35:27 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration image -> org.hibernate.type.ImageType@53dbe163
[DEBUG] 2018-11-21 11:35:27 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration characters -> org.hibernate.type.CharArrayType@6d1ef78d
[DEBUG] 2018-11-21 11:35:27 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration char[] -> org.hibernate.type.CharArrayType@6d1ef78d
[DEBUG] 2018-11-21 11:35:27 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration [C -> org.hibernate.type.CharArrayType@6d1ef78d
[DEBUG] 2018-11-21 11:35:27 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@176b3f44
[DEBUG] 2018-11-21 11:35:27 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@176b3f44
[DEBUG] 2018-11-21 11:35:27 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@176b3f44
[DEBUG] 2018-11-21 11:35:27 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration text -> org.hibernate.type.TextType@5d12a356
[DEBUG] 2018-11-21 11:35:27 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration ntext -> org.hibernate.type.NTextType@797cf65c
[DEBUG] 2018-11-21 11:35:27 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration blob -> org.hibernate.type.BlobType@1941a8ff
[DEBUG] 2018-11-21 11:35:27 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@1941a8ff
[DEBUG] 2018-11-21 11:35:27 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@38831718
[DEBUG] 2018-11-21 11:35:27 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration clob -> org.hibernate.type.ClobType@512535ff
[DEBUG] 2018-11-21 11:35:27 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@512535ff
[DEBUG] 2018-11-21 11:35:27 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration nclob -> org.hibernate.type.NClobType@7241a47d
[DEBUG] 2018-11-21 11:35:27 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@7241a47d
[DEBUG] 2018-11-21 11:35:27 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@5dcd8c7a
[DEBUG] 2018-11-21 11:35:27 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@253d9f73
[DEBUG] 2018-11-21 11:35:27 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration serializable -> org.hibernate.type.SerializableType@a22cb6a
[DEBUG] 2018-11-21 11:35:27 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration object -> org.hibernate.type.ObjectType@5674e1f2
[DEBUG] 2018-11-21 11:35:27 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@5674e1f2
[DEBUG] 2018-11-21 11:35:27 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@32f232a5
[DEBUG] 2018-11-21 11:35:27 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@43f82e78
[DEBUG] 2018-11-21 11:35:27 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@e54303
[DEBUG] 2018-11-21 11:35:27 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@e8df99a
[DEBUG] 2018-11-21 11:35:27 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@2dc995f4
[DEBUG] 2018-11-21 11:35:27 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@2f40e5db
[DEBUG] 2018-11-21 11:35:27 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@517566b
[DEBUG] 2018-11-21 11:35:27 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@64b73e7a
[INFO] 2018-11-21 11:35:27 INFO com.mchange.v2.c3p0.impl.AbstractPoolBackedDataSource.getPoolManager() (AbstractPoolBackedDataSource.java:527): Initializing c3p0 pool... com.mchange.v2.c3p0.ComboPooledDataSource [ acquireIncrement -> 3, acquireRetryAttempts -> 30, acquireRetryDelay -> 1000, autoCommitOnClose -> false, automaticTestTable -> null, breakAfterAcquireFailure -> false, checkoutTimeout -> 0, connectionCustomizerClassName -> null, connectionTesterClassName -> com.mchange.v2.c3p0.impl.DefaultConnectionTester, contextClassLoaderSource -> caller, dataSourceName -> 2rxcez9zeis16s1p0nff|c267ef4, debugUnreturnedConnectionStackTraces -> false, description -> null, driverClass -> com.mysql.jdbc.Driver, extensions -> {}, factoryClassLocation -> null, forceIgnoreUnresolvedTransactions -> false, forceSynchronousCheckins -> false, forceUseNamedDriverClass -> false, identityToken -> 2rxcez9zeis16s1p0nff|c267ef4, idleConnectionTestPeriod -> 0, initialPoolSize -> 5, jdbcUrl -> jdbc:mysql://10.10.10.141/test1, maxAdministrativeTaskTime -> 0, maxConnectionAge -> 0, maxIdleTime -> 0, maxIdleTimeExcessConnections -> 0, maxPoolSize -> 10, maxStatements -> 0, maxStatementsPerConnection -> 0, minPoolSize -> 3, numHelperThreads -> 3, preferredTestQuery -> null, privilegeSpawnedThreads -> false, properties -> {user=******, password=******}, propertyCycle -> 0, statementCacheNumDeferredCloseThreads -> 0, testConnectionOnCheckin -> false, testConnectionOnCheckout -> false, unreturnedConnectionTimeout -> 0, userOverrides -> {}, usesTraditionalReflectiveProxies -> false ]
[INFO] 2018-11-21 11:35:27 INFO org.hibernate.dialect.Dialect.<init>() (Dialect.java:157): HHH000400: Using dialect: org.hibernate.dialect.MySQL55Dialect
[DEBUG] 2018-11-21 11:35:27 DEBUG org.hibernate.type.spi.TypeConfiguration.scope() (TypeConfiguration.java:142): Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@68b6f0d6] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@4044fb95]
[DEBUG] 2018-11-21 11:35:27 DEBUG org.hibernate.type.spi.TypeConfiguration.scope() (TypeConfiguration.java:147): Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@68b6f0d6] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@6e9319f]
[INFO] 2018-11-21 11:35:27 INFO org.hibernate.tool.schema.internal.SchemaCreatorImpl.applyImportSources() (SchemaCreatorImpl.java:489): HHH000476: Executing import script 'org.hibernate.tool.schema.internal.exec.ScriptSourceInputNonExistentImpl@9cd25ff'
[TRACE] 2018-11-21 11:35:28 TRACE org.hibernate.type.spi.TypeConfiguration.sessionFactoryCreated() (TypeConfiguration.java:195): Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@6e9319f] for TypeConfiguration
[INFO] 2018-11-21 11:35:28 INFO org.springframework.context.support.AbstractApplicationContext.doClose() (AbstractApplicationContext.java:984): Closing org.springframework.context.support.GenericApplicationContext@56ef9176: startup date [Wed Nov 21 11:35:21 CST 2018]; root of context hierarchy
[TRACE] 2018-11-21 11:35:28 TRACE org.hibernate.type.spi.TypeConfiguration.sessionFactoryClosed() (TypeConfiguration.java:201): Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@6e9319f] for TypeConfiguration
[DEBUG] 2018-11-21 11:35:28 DEBUG org.hibernate.type.spi.TypeConfiguration$Scope.unsetSessionFactory() (TypeConfiguration.java:312): Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@6fb30637] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@6e9319f]
[INFO] 2018-11-21 11:39:34 INFO org.springframework.test.context.support.AbstractTestContextBootstrapper.getDefaultTestExecutionListenerClassNames() (AbstractTestContextBootstrapper.java:248): Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
[INFO] 2018-11-21 11:39:34 INFO org.springframework.test.context.support.AbstractTestContextBootstrapper.getTestExecutionListeners() (AbstractTestContextBootstrapper.java:174): Using TestExecutionListeners: [org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@1b604f19, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@7823a2f9, org.springframework.test.context.support.DirtiesContextTestExecutionListener@4cc0edeb, org.springframework.test.context.transaction.TransactionalTestExecutionListener@457e2f02, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@5c7fa833]
[INFO] 2018-11-21 11:39:35 INFO org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions() (XmlBeanDefinitionReader.java:317): Loading XML bean definitions from class path resource [applicationContext.xml]
[INFO] 2018-11-21 11:39:35 INFO org.springframework.context.support.AbstractApplicationContext.prepareRefresh() (AbstractApplicationContext.java:583): Refreshing org.springframework.context.support.GenericApplicationContext@56ef9176: startup date [Wed Nov 21 11:39:35 CST 2018]; root of context hierarchy
[INFO] 2018-11-21 11:39:35 INFO com.mchange.v2.log.MLog$1.run() (MLog.java:124): MLog clients using log4j logging.
[INFO] 2018-11-21 11:39:40 INFO com.mchange.v2.c3p0.C3P0Registry.banner() (C3P0Registry.java:248): Initializing c3p0-0.9.5.2 [built 08-December-2015 22:06:04 -0800; debug? true; trace: 10]
[INFO] 2018-11-21 11:39:40 INFO org.hibernate.Version.logVersion() (Version.java:46): HHH000412: Hibernate Core {5.3.7.Final}
[INFO] 2018-11-21 11:39:40 INFO org.hibernate.cfg.Environment.<clinit>() (Environment.java:213): HHH000206: hibernate.properties not found
[INFO] 2018-11-21 11:39:41 INFO org.hibernate.annotations.common.reflection.java.JavaReflectionManager.<clinit>() (JavaReflectionManager.java:49): HCANN000001: Hibernate Commons Annotations {5.0.4.Final}
[DEBUG] 2018-11-21 11:39:41 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration boolean -> org.hibernate.type.BooleanType@58326051
[DEBUG] 2018-11-21 11:39:41 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration boolean -> org.hibernate.type.BooleanType@58326051
[DEBUG] 2018-11-21 11:39:41 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@58326051
[DEBUG] 2018-11-21 11:39:41 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@764faa6
[DEBUG] 2018-11-21 11:39:41 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration true_false -> org.hibernate.type.TrueFalseType@5a755cc1
[DEBUG] 2018-11-21 11:39:41 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration yes_no -> org.hibernate.type.YesNoType@484094a5
[DEBUG] 2018-11-21 11:39:41 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration byte -> org.hibernate.type.ByteType@e57b96d
[DEBUG] 2018-11-21 11:39:41 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration byte -> org.hibernate.type.ByteType@e57b96d
[DEBUG] 2018-11-21 11:39:41 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@e57b96d
[DEBUG] 2018-11-21 11:39:41 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration character -> org.hibernate.type.CharacterType@545b995e
[DEBUG] 2018-11-21 11:39:41 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration char -> org.hibernate.type.CharacterType@545b995e
[DEBUG] 2018-11-21 11:39:41 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@545b995e
[DEBUG] 2018-11-21 11:39:41 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration short -> org.hibernate.type.ShortType@29526c05
[DEBUG] 2018-11-21 11:39:41 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration short -> org.hibernate.type.ShortType@29526c05
[DEBUG] 2018-11-21 11:39:41 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.lang.Short -> org.hibernate.type.ShortType@29526c05
[DEBUG] 2018-11-21 11:39:41 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration integer -> org.hibernate.type.IntegerType@58be6e8
[DEBUG] 2018-11-21 11:39:41 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration int -> org.hibernate.type.IntegerType@58be6e8
[DEBUG] 2018-11-21 11:39:41 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@58be6e8
[DEBUG] 2018-11-21 11:39:41 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration long -> org.hibernate.type.LongType@2bd08376
[DEBUG] 2018-11-21 11:39:41 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration long -> org.hibernate.type.LongType@2bd08376
[DEBUG] 2018-11-21 11:39:41 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.lang.Long -> org.hibernate.type.LongType@2bd08376
[DEBUG] 2018-11-21 11:39:41 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration float -> org.hibernate.type.FloatType@42b02722
[DEBUG] 2018-11-21 11:39:41 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration float -> org.hibernate.type.FloatType@42b02722
[DEBUG] 2018-11-21 11:39:41 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.lang.Float -> org.hibernate.type.FloatType@42b02722
[DEBUG] 2018-11-21 11:39:41 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration double -> org.hibernate.type.DoubleType@5ce8d869
[DEBUG] 2018-11-21 11:39:41 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration double -> org.hibernate.type.DoubleType@5ce8d869
[DEBUG] 2018-11-21 11:39:41 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@5ce8d869
[DEBUG] 2018-11-21 11:39:41 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@7a1234bf
[DEBUG] 2018-11-21 11:39:41 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@7a1234bf
[DEBUG] 2018-11-21 11:39:41 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration big_integer -> org.hibernate.type.BigIntegerType@6bffbc6d
[DEBUG] 2018-11-21 11:39:41 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@6bffbc6d
[DEBUG] 2018-11-21 11:39:41 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration string -> org.hibernate.type.StringType@39a2bb97
[DEBUG] 2018-11-21 11:39:41 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.lang.String -> org.hibernate.type.StringType@39a2bb97
[DEBUG] 2018-11-21 11:39:41 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration nstring -> org.hibernate.type.StringNVarcharType@4331d187
[DEBUG] 2018-11-21 11:39:41 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@1608bcbd
[DEBUG] 2018-11-21 11:39:41 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration url -> org.hibernate.type.UrlType@4426bff1
[DEBUG] 2018-11-21 11:39:41 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.net.URL -> org.hibernate.type.UrlType@4426bff1
[DEBUG] 2018-11-21 11:39:41 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration Duration -> org.hibernate.type.DurationType@336f1079
[DEBUG] 2018-11-21 11:39:41 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.time.Duration -> org.hibernate.type.DurationType@336f1079
[DEBUG] 2018-11-21 11:39:41 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration Instant -> org.hibernate.type.InstantType@6eb2384f
[DEBUG] 2018-11-21 11:39:41 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.time.Instant -> org.hibernate.type.InstantType@6eb2384f
[DEBUG] 2018-11-21 11:39:41 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@12f9af83
[DEBUG] 2018-11-21 11:39:41 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@12f9af83
[DEBUG] 2018-11-21 11:39:41 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration LocalDate -> org.hibernate.type.LocalDateType@10cf09e8
[DEBUG] 2018-11-21 11:39:41 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@10cf09e8
[DEBUG] 2018-11-21 11:39:41 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@6bca7e0d
[DEBUG] 2018-11-21 11:39:41 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@6bca7e0d
[DEBUG] 2018-11-21 11:39:41 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@19835e64
[DEBUG] 2018-11-21 11:39:41 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@19835e64
[DEBUG] 2018-11-21 11:39:41 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@33308786
[DEBUG] 2018-11-21 11:39:41 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@33308786
[DEBUG] 2018-11-21 11:39:41 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@5e4bd84a
[DEBUG] 2018-11-21 11:39:41 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@5e4bd84a
[DEBUG] 2018-11-21 11:39:41 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration date -> org.hibernate.type.DateType@4ce1d6d0
[DEBUG] 2018-11-21 11:39:41 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.sql.Date -> org.hibernate.type.DateType@4ce1d6d0
[DEBUG] 2018-11-21 11:39:41 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration time -> org.hibernate.type.TimeType@71812481
[DEBUG] 2018-11-21 11:39:41 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.sql.Time -> org.hibernate.type.TimeType@71812481
[DEBUG] 2018-11-21 11:39:41 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration timestamp -> org.hibernate.type.TimestampType@6155d082
[DEBUG] 2018-11-21 11:39:41 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@6155d082
[DEBUG] 2018-11-21 11:39:41 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.util.Date -> org.hibernate.type.TimestampType@6155d082
[DEBUG] 2018-11-21 11:39:41 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@2ea6e30c
[DEBUG] 2018-11-21 11:39:41 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration calendar -> org.hibernate.type.CalendarType@7803bfd
[DEBUG] 2018-11-21 11:39:41 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@7803bfd
[DEBUG] 2018-11-21 11:39:41 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@7803bfd
[DEBUG] 2018-11-21 11:39:41 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@62ef27a8
[DEBUG] 2018-11-21 11:39:41 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration locale -> org.hibernate.type.LocaleType@25aca718
[DEBUG] 2018-11-21 11:39:41 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@25aca718
[DEBUG] 2018-11-21 11:39:41 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration currency -> org.hibernate.type.CurrencyType@79179359
[DEBUG] 2018-11-21 11:39:41 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@79179359
[DEBUG] 2018-11-21 11:39:41 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration timezone -> org.hibernate.type.TimeZoneType@4eb386df
[DEBUG] 2018-11-21 11:39:41 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@4eb386df
[DEBUG] 2018-11-21 11:39:41 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration class -> org.hibernate.type.ClassType@5a18cd76
[DEBUG] 2018-11-21 11:39:41 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.lang.Class -> org.hibernate.type.ClassType@5a18cd76
[DEBUG] 2018-11-21 11:39:41 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@6995bf68
[DEBUG] 2018-11-21 11:39:41 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@6995bf68
[DEBUG] 2018-11-21 11:39:41 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@3568f9d2
[DEBUG] 2018-11-21 11:39:41 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration binary -> org.hibernate.type.BinaryType@4b1d6571
[DEBUG] 2018-11-21 11:39:41 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration byte[] -> org.hibernate.type.BinaryType@4b1d6571
[DEBUG] 2018-11-21 11:39:41 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration [B -> org.hibernate.type.BinaryType@4b1d6571
[DEBUG] 2018-11-21 11:39:41 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@6e950bcf
[DEBUG] 2018-11-21 11:39:41 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@6e950bcf
[DEBUG] 2018-11-21 11:39:41 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@6e950bcf
[DEBUG] 2018-11-21 11:39:41 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration row_version -> org.hibernate.type.RowVersionType@5a709816
[DEBUG] 2018-11-21 11:39:41 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration image -> org.hibernate.type.ImageType@53dbe163
[DEBUG] 2018-11-21 11:39:41 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration characters -> org.hibernate.type.CharArrayType@6d1ef78d
[DEBUG] 2018-11-21 11:39:41 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration char[] -> org.hibernate.type.CharArrayType@6d1ef78d
[DEBUG] 2018-11-21 11:39:41 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration [C -> org.hibernate.type.CharArrayType@6d1ef78d
[DEBUG] 2018-11-21 11:39:41 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@176b3f44
[DEBUG] 2018-11-21 11:39:41 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@176b3f44
[DEBUG] 2018-11-21 11:39:41 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@176b3f44
[DEBUG] 2018-11-21 11:39:41 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration text -> org.hibernate.type.TextType@5d12a356
[DEBUG] 2018-11-21 11:39:41 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration ntext -> org.hibernate.type.NTextType@797cf65c
[DEBUG] 2018-11-21 11:39:41 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration blob -> org.hibernate.type.BlobType@1941a8ff
[DEBUG] 2018-11-21 11:39:41 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@1941a8ff
[DEBUG] 2018-11-21 11:39:41 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@38831718
[DEBUG] 2018-11-21 11:39:41 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration clob -> org.hibernate.type.ClobType@512535ff
[DEBUG] 2018-11-21 11:39:41 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@512535ff
[DEBUG] 2018-11-21 11:39:41 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration nclob -> org.hibernate.type.NClobType@7241a47d
[DEBUG] 2018-11-21 11:39:41 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@7241a47d
[DEBUG] 2018-11-21 11:39:41 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@5dcd8c7a
[DEBUG] 2018-11-21 11:39:41 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@253d9f73
[DEBUG] 2018-11-21 11:39:41 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration serializable -> org.hibernate.type.SerializableType@a22cb6a
[DEBUG] 2018-11-21 11:39:41 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration object -> org.hibernate.type.ObjectType@5674e1f2
[DEBUG] 2018-11-21 11:39:41 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@5674e1f2
[DEBUG] 2018-11-21 11:39:41 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@32f232a5
[DEBUG] 2018-11-21 11:39:41 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@43f82e78
[DEBUG] 2018-11-21 11:39:41 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@e54303
[DEBUG] 2018-11-21 11:39:41 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@e8df99a
[DEBUG] 2018-11-21 11:39:41 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@2dc995f4
[DEBUG] 2018-11-21 11:39:41 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@2f40e5db
[DEBUG] 2018-11-21 11:39:41 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@517566b
[DEBUG] 2018-11-21 11:39:41 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@64b73e7a
[INFO] 2018-11-21 11:39:41 INFO com.mchange.v2.c3p0.impl.AbstractPoolBackedDataSource.getPoolManager() (AbstractPoolBackedDataSource.java:527): Initializing c3p0 pool... com.mchange.v2.c3p0.ComboPooledDataSource [ acquireIncrement -> 3, acquireRetryAttempts -> 30, acquireRetryDelay -> 1000, autoCommitOnClose -> false, automaticTestTable -> null, breakAfterAcquireFailure -> false, checkoutTimeout -> 0, connectionCustomizerClassName -> null, connectionTesterClassName -> com.mchange.v2.c3p0.impl.DefaultConnectionTester, contextClassLoaderSource -> caller, dataSourceName -> 2rxcez9zeixgzb106786p|c267ef4, debugUnreturnedConnectionStackTraces -> false, description -> null, driverClass -> com.mysql.jdbc.Driver, extensions -> {}, factoryClassLocation -> null, forceIgnoreUnresolvedTransactions -> false, forceSynchronousCheckins -> false, forceUseNamedDriverClass -> false, identityToken -> 2rxcez9zeixgzb106786p|c267ef4, idleConnectionTestPeriod -> 0, initialPoolSize -> 5, jdbcUrl -> jdbc:mysql://10.10.10.141/test1, maxAdministrativeTaskTime -> 0, maxConnectionAge -> 0, maxIdleTime -> 0, maxIdleTimeExcessConnections -> 0, maxPoolSize -> 10, maxStatements -> 0, maxStatementsPerConnection -> 0, minPoolSize -> 3, numHelperThreads -> 3, preferredTestQuery -> null, privilegeSpawnedThreads -> false, properties -> {user=******, password=******}, propertyCycle -> 0, statementCacheNumDeferredCloseThreads -> 0, testConnectionOnCheckin -> false, testConnectionOnCheckout -> false, unreturnedConnectionTimeout -> 0, userOverrides -> {}, usesTraditionalReflectiveProxies -> false ]
[INFO] 2018-11-21 11:39:41 INFO org.hibernate.dialect.Dialect.<init>() (Dialect.java:157): HHH000400: Using dialect: org.hibernate.dialect.MySQL55Dialect
[DEBUG] 2018-11-21 11:39:41 DEBUG org.hibernate.type.spi.TypeConfiguration.scope() (TypeConfiguration.java:142): Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@68b6f0d6] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@4044fb95]
[DEBUG] 2018-11-21 11:39:41 DEBUG org.hibernate.type.spi.TypeConfiguration.scope() (TypeConfiguration.java:147): Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@68b6f0d6] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@6e9319f]
[INFO] 2018-11-21 11:39:41 INFO org.hibernate.tool.schema.internal.SchemaCreatorImpl.applyImportSources() (SchemaCreatorImpl.java:489): HHH000476: Executing import script 'org.hibernate.tool.schema.internal.exec.ScriptSourceInputNonExistentImpl@9cd25ff'
[TRACE] 2018-11-21 11:39:41 TRACE org.hibernate.type.spi.TypeConfiguration.sessionFactoryCreated() (TypeConfiguration.java:195): Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@6e9319f] for TypeConfiguration
[INFO] 2018-11-21 11:39:41 INFO org.springframework.context.support.AbstractApplicationContext.doClose() (AbstractApplicationContext.java:984): Closing org.springframework.context.support.GenericApplicationContext@56ef9176: startup date [Wed Nov 21 11:39:35 CST 2018]; root of context hierarchy
[TRACE] 2018-11-21 11:39:41 TRACE org.hibernate.type.spi.TypeConfiguration.sessionFactoryClosed() (TypeConfiguration.java:201): Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@6e9319f] for TypeConfiguration
[DEBUG] 2018-11-21 11:39:41 DEBUG org.hibernate.type.spi.TypeConfiguration$Scope.unsetSessionFactory() (TypeConfiguration.java:312): Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@583b5e15] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@6e9319f]
[INFO] 2018-11-21 11:40:20 INFO org.springframework.test.context.support.AbstractTestContextBootstrapper.getDefaultTestExecutionListenerClassNames() (AbstractTestContextBootstrapper.java:248): Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
[INFO] 2018-11-21 11:40:20 INFO org.springframework.test.context.support.AbstractTestContextBootstrapper.getTestExecutionListeners() (AbstractTestContextBootstrapper.java:174): Using TestExecutionListeners: [org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@1b604f19, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@7823a2f9, org.springframework.test.context.support.DirtiesContextTestExecutionListener@4cc0edeb, org.springframework.test.context.transaction.TransactionalTestExecutionListener@457e2f02, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@5c7fa833]
[INFO] 2018-11-21 11:40:20 INFO org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions() (XmlBeanDefinitionReader.java:317): Loading XML bean definitions from class path resource [applicationContext.xml]
[INFO] 2018-11-21 11:40:21 INFO org.springframework.context.support.AbstractApplicationContext.prepareRefresh() (AbstractApplicationContext.java:583): Refreshing org.springframework.context.support.GenericApplicationContext@56ef9176: startup date [Wed Nov 21 11:40:21 CST 2018]; root of context hierarchy
[INFO] 2018-11-21 11:40:21 INFO com.mchange.v2.log.MLog$1.run() (MLog.java:124): MLog clients using log4j logging.
[INFO] 2018-11-21 11:40:26 INFO com.mchange.v2.c3p0.C3P0Registry.banner() (C3P0Registry.java:248): Initializing c3p0-0.9.5.2 [built 08-December-2015 22:06:04 -0800; debug? true; trace: 10]
[INFO] 2018-11-21 11:40:26 INFO org.hibernate.Version.logVersion() (Version.java:46): HHH000412: Hibernate Core {5.3.7.Final}
[INFO] 2018-11-21 11:40:26 INFO org.hibernate.cfg.Environment.<clinit>() (Environment.java:213): HHH000206: hibernate.properties not found
[WARN] 2018-11-21 11:40:26 WARN org.springframework.context.support.AbstractApplicationContext.refresh() (AbstractApplicationContext.java:551): Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sessionFactory' defined in class path resource [applicationContext.xml]: Invocation of init method failed; nested exception is java.io.FileNotFoundException: class path resource [zzc/spring/hibernate/entities/Account.hbm.xml] cannot be opened because it does not exist
[ERROR] 2018-11-21 11:40:26 ERROR org.springframework.test.context.TestContextManager.prepareTestInstance() (TestContextManager.java:234): Caught exception while allowing TestExecutionListener [org.springframework.test.context.support.DependencyInjectionTestExecutionListener@7823a2f9] to prepare test instance [zzc.spring.hibernate.SpringHibernateTests@59d4cd39]
java.lang.IllegalStateException: Failed to load ApplicationContext
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:124)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:83)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.injectDependencies(DependencyInjectionTestExecutionListener.java:117)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:83)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:230)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:228)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:287)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:289)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:247)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:94)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:191)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137)
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68)
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47)
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242)
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70)
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sessionFactory' defined in class path resource [applicationContext.xml]: Invocation of init method failed; nested exception is java.io.FileNotFoundException: class path resource [zzc/spring/hibernate/entities/Account.hbm.xml] cannot be opened because it does not exist
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1631)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:553)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:481)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:312)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:308)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:742)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:867)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:543)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:128)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:60)
	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.delegateLoading(AbstractDelegatingSmartContextLoader.java:281)
	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.loadContext(AbstractDelegatingSmartContextLoader.java:249)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:98)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:116)
	... 24 more
Caused by: java.io.FileNotFoundException: class path resource [zzc/spring/hibernate/entities/Account.hbm.xml] cannot be opened because it does not exist
	at org.springframework.core.io.ClassPathResource.getInputStream(ClassPathResource.java:172)
	at org.springframework.orm.hibernate4.LocalSessionFactoryBean.afterPropertiesSet(LocalSessionFactoryBean.java:363)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1689)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1627)
	... 39 more
[INFO] 2018-11-21 11:41:27 INFO org.springframework.test.context.support.AbstractTestContextBootstrapper.getDefaultTestExecutionListenerClassNames() (AbstractTestContextBootstrapper.java:248): Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
[INFO] 2018-11-21 11:41:27 INFO org.springframework.test.context.support.AbstractTestContextBootstrapper.getTestExecutionListeners() (AbstractTestContextBootstrapper.java:174): Using TestExecutionListeners: [org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@1b604f19, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@7823a2f9, org.springframework.test.context.support.DirtiesContextTestExecutionListener@4cc0edeb, org.springframework.test.context.transaction.TransactionalTestExecutionListener@457e2f02, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@5c7fa833]
[INFO] 2018-11-21 11:41:27 INFO org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions() (XmlBeanDefinitionReader.java:317): Loading XML bean definitions from class path resource [applicationContext.xml]
[INFO] 2018-11-21 11:41:28 INFO org.springframework.context.support.AbstractApplicationContext.prepareRefresh() (AbstractApplicationContext.java:583): Refreshing org.springframework.context.support.GenericApplicationContext@56ef9176: startup date [Wed Nov 21 11:41:28 CST 2018]; root of context hierarchy
[INFO] 2018-11-21 11:41:28 INFO com.mchange.v2.log.MLog$1.run() (MLog.java:124): MLog clients using log4j logging.
[INFO] 2018-11-21 11:41:33 INFO com.mchange.v2.c3p0.C3P0Registry.banner() (C3P0Registry.java:248): Initializing c3p0-0.9.5.2 [built 08-December-2015 22:06:04 -0800; debug? true; trace: 10]
[INFO] 2018-11-21 11:41:33 INFO org.hibernate.Version.logVersion() (Version.java:46): HHH000412: Hibernate Core {5.3.7.Final}
[INFO] 2018-11-21 11:41:33 INFO org.hibernate.cfg.Environment.<clinit>() (Environment.java:213): HHH000206: hibernate.properties not found
[WARN] 2018-11-21 11:41:33 WARN org.springframework.context.support.AbstractApplicationContext.refresh() (AbstractApplicationContext.java:551): Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sessionFactory' defined in class path resource [applicationContext.xml]: Invocation of init method failed; nested exception is java.io.FileNotFoundException: class path resource [zzc/spring/hibernate/entities/Account.hbm.xml] cannot be opened because it does not exist
[ERROR] 2018-11-21 11:41:33 ERROR org.springframework.test.context.TestContextManager.prepareTestInstance() (TestContextManager.java:234): Caught exception while allowing TestExecutionListener [org.springframework.test.context.support.DependencyInjectionTestExecutionListener@7823a2f9] to prepare test instance [zzc.spring.hibernate.SpringHibernateTests@59d4cd39]
java.lang.IllegalStateException: Failed to load ApplicationContext
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:124)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:83)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.injectDependencies(DependencyInjectionTestExecutionListener.java:117)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:83)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:230)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:228)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:287)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:289)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:247)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:94)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:191)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137)
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68)
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47)
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242)
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70)
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sessionFactory' defined in class path resource [applicationContext.xml]: Invocation of init method failed; nested exception is java.io.FileNotFoundException: class path resource [zzc/spring/hibernate/entities/Account.hbm.xml] cannot be opened because it does not exist
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1631)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:553)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:481)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:312)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:308)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:742)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:867)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:543)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:128)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:60)
	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.delegateLoading(AbstractDelegatingSmartContextLoader.java:281)
	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.loadContext(AbstractDelegatingSmartContextLoader.java:249)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:98)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:116)
	... 24 more
Caused by: java.io.FileNotFoundException: class path resource [zzc/spring/hibernate/entities/Account.hbm.xml] cannot be opened because it does not exist
	at org.springframework.core.io.ClassPathResource.getInputStream(ClassPathResource.java:172)
	at org.springframework.orm.hibernate4.LocalSessionFactoryBean.afterPropertiesSet(LocalSessionFactoryBean.java:363)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1689)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1627)
	... 39 more
[INFO] 2018-11-21 11:42:13 INFO org.springframework.test.context.support.AbstractTestContextBootstrapper.getDefaultTestExecutionListenerClassNames() (AbstractTestContextBootstrapper.java:248): Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
[INFO] 2018-11-21 11:42:13 INFO org.springframework.test.context.support.AbstractTestContextBootstrapper.getTestExecutionListeners() (AbstractTestContextBootstrapper.java:174): Using TestExecutionListeners: [org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@1b604f19, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@7823a2f9, org.springframework.test.context.support.DirtiesContextTestExecutionListener@4cc0edeb, org.springframework.test.context.transaction.TransactionalTestExecutionListener@457e2f02, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@5c7fa833]
[INFO] 2018-11-21 11:42:13 INFO org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions() (XmlBeanDefinitionReader.java:317): Loading XML bean definitions from class path resource [applicationContext.xml]
[INFO] 2018-11-21 11:42:14 INFO org.springframework.context.support.AbstractApplicationContext.prepareRefresh() (AbstractApplicationContext.java:583): Refreshing org.springframework.context.support.GenericApplicationContext@56ef9176: startup date [Wed Nov 21 11:42:14 CST 2018]; root of context hierarchy
[INFO] 2018-11-21 11:42:14 INFO com.mchange.v2.log.MLog$1.run() (MLog.java:124): MLog clients using log4j logging.
[INFO] 2018-11-21 11:42:19 INFO com.mchange.v2.c3p0.C3P0Registry.banner() (C3P0Registry.java:248): Initializing c3p0-0.9.5.2 [built 08-December-2015 22:06:04 -0800; debug? true; trace: 10]
[INFO] 2018-11-21 11:42:19 INFO org.hibernate.Version.logVersion() (Version.java:46): HHH000412: Hibernate Core {5.3.7.Final}
[INFO] 2018-11-21 11:42:19 INFO org.hibernate.cfg.Environment.<clinit>() (Environment.java:213): HHH000206: hibernate.properties not found
[WARN] 2018-11-21 11:42:19 WARN org.springframework.context.support.AbstractApplicationContext.refresh() (AbstractApplicationContext.java:551): Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sessionFactory' defined in class path resource [applicationContext.xml]: Invocation of init method failed; nested exception is java.io.FileNotFoundException: class path resource [classpath:/zzc/spring/hibernate/entities/Account.hbm.xml] cannot be opened because it does not exist
[ERROR] 2018-11-21 11:42:19 ERROR org.springframework.test.context.TestContextManager.prepareTestInstance() (TestContextManager.java:234): Caught exception while allowing TestExecutionListener [org.springframework.test.context.support.DependencyInjectionTestExecutionListener@7823a2f9] to prepare test instance [zzc.spring.hibernate.SpringHibernateTests@59d4cd39]
java.lang.IllegalStateException: Failed to load ApplicationContext
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:124)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:83)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.injectDependencies(DependencyInjectionTestExecutionListener.java:117)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:83)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:230)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:228)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:287)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:289)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:247)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:94)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:191)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137)
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68)
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47)
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242)
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70)
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sessionFactory' defined in class path resource [applicationContext.xml]: Invocation of init method failed; nested exception is java.io.FileNotFoundException: class path resource [classpath:/zzc/spring/hibernate/entities/Account.hbm.xml] cannot be opened because it does not exist
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1631)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:553)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:481)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:312)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:308)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:742)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:867)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:543)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:128)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:60)
	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.delegateLoading(AbstractDelegatingSmartContextLoader.java:281)
	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.loadContext(AbstractDelegatingSmartContextLoader.java:249)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:98)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:116)
	... 24 more
Caused by: java.io.FileNotFoundException: class path resource [classpath:/zzc/spring/hibernate/entities/Account.hbm.xml] cannot be opened because it does not exist
	at org.springframework.core.io.ClassPathResource.getInputStream(ClassPathResource.java:172)
	at org.springframework.orm.hibernate4.LocalSessionFactoryBean.afterPropertiesSet(LocalSessionFactoryBean.java:356)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1689)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1627)
	... 39 more
[INFO] 2018-11-21 11:42:28 INFO org.springframework.test.context.support.AbstractTestContextBootstrapper.getDefaultTestExecutionListenerClassNames() (AbstractTestContextBootstrapper.java:248): Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
[INFO] 2018-11-21 11:42:28 INFO org.springframework.test.context.support.AbstractTestContextBootstrapper.getTestExecutionListeners() (AbstractTestContextBootstrapper.java:174): Using TestExecutionListeners: [org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@1b604f19, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@7823a2f9, org.springframework.test.context.support.DirtiesContextTestExecutionListener@4cc0edeb, org.springframework.test.context.transaction.TransactionalTestExecutionListener@457e2f02, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@5c7fa833]
[INFO] 2018-11-21 11:42:28 INFO org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions() (XmlBeanDefinitionReader.java:317): Loading XML bean definitions from class path resource [applicationContext.xml]
[INFO] 2018-11-21 11:42:28 INFO org.springframework.context.support.AbstractApplicationContext.prepareRefresh() (AbstractApplicationContext.java:583): Refreshing org.springframework.context.support.GenericApplicationContext@56ef9176: startup date [Wed Nov 21 11:42:28 CST 2018]; root of context hierarchy
[INFO] 2018-11-21 11:42:28 INFO com.mchange.v2.log.MLog$1.run() (MLog.java:124): MLog clients using log4j logging.
[INFO] 2018-11-21 11:42:34 INFO com.mchange.v2.c3p0.C3P0Registry.banner() (C3P0Registry.java:248): Initializing c3p0-0.9.5.2 [built 08-December-2015 22:06:04 -0800; debug? true; trace: 10]
[INFO] 2018-11-21 11:42:34 INFO org.hibernate.Version.logVersion() (Version.java:46): HHH000412: Hibernate Core {5.3.7.Final}
[INFO] 2018-11-21 11:42:34 INFO org.hibernate.cfg.Environment.<clinit>() (Environment.java:213): HHH000206: hibernate.properties not found
[WARN] 2018-11-21 11:42:34 WARN org.springframework.context.support.AbstractApplicationContext.refresh() (AbstractApplicationContext.java:551): Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sessionFactory' defined in class path resource [applicationContext.xml]: Invocation of init method failed; nested exception is java.io.FileNotFoundException: class path resource [classpath:zzc/spring/hibernate/entities/Account.hbm.xml] cannot be opened because it does not exist
[ERROR] 2018-11-21 11:42:34 ERROR org.springframework.test.context.TestContextManager.prepareTestInstance() (TestContextManager.java:234): Caught exception while allowing TestExecutionListener [org.springframework.test.context.support.DependencyInjectionTestExecutionListener@7823a2f9] to prepare test instance [zzc.spring.hibernate.SpringHibernateTests@59d4cd39]
java.lang.IllegalStateException: Failed to load ApplicationContext
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:124)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:83)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.injectDependencies(DependencyInjectionTestExecutionListener.java:117)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:83)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:230)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:228)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:287)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:289)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:247)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:94)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:191)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137)
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68)
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47)
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242)
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70)
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sessionFactory' defined in class path resource [applicationContext.xml]: Invocation of init method failed; nested exception is java.io.FileNotFoundException: class path resource [classpath:zzc/spring/hibernate/entities/Account.hbm.xml] cannot be opened because it does not exist
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1631)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:553)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:481)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:312)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:308)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:742)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:867)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:543)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:128)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:60)
	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.delegateLoading(AbstractDelegatingSmartContextLoader.java:281)
	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.loadContext(AbstractDelegatingSmartContextLoader.java:249)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:98)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:116)
	... 24 more
Caused by: java.io.FileNotFoundException: class path resource [classpath:zzc/spring/hibernate/entities/Account.hbm.xml] cannot be opened because it does not exist
	at org.springframework.core.io.ClassPathResource.getInputStream(ClassPathResource.java:172)
	at org.springframework.orm.hibernate4.LocalSessionFactoryBean.afterPropertiesSet(LocalSessionFactoryBean.java:356)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1689)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1627)
	... 39 more
[INFO] 2018-11-21 11:42:45 INFO org.springframework.test.context.support.AbstractTestContextBootstrapper.getDefaultTestExecutionListenerClassNames() (AbstractTestContextBootstrapper.java:248): Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
[INFO] 2018-11-21 11:42:45 INFO org.springframework.test.context.support.AbstractTestContextBootstrapper.getTestExecutionListeners() (AbstractTestContextBootstrapper.java:174): Using TestExecutionListeners: [org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@1b604f19, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@7823a2f9, org.springframework.test.context.support.DirtiesContextTestExecutionListener@4cc0edeb, org.springframework.test.context.transaction.TransactionalTestExecutionListener@457e2f02, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@5c7fa833]
[INFO] 2018-11-21 11:42:45 INFO org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions() (XmlBeanDefinitionReader.java:317): Loading XML bean definitions from class path resource [applicationContext.xml]
[INFO] 2018-11-21 11:42:45 INFO org.springframework.context.support.AbstractApplicationContext.prepareRefresh() (AbstractApplicationContext.java:583): Refreshing org.springframework.context.support.GenericApplicationContext@56ef9176: startup date [Wed Nov 21 11:42:45 CST 2018]; root of context hierarchy
[INFO] 2018-11-21 11:42:45 INFO com.mchange.v2.log.MLog$1.run() (MLog.java:124): MLog clients using log4j logging.
[INFO] 2018-11-21 11:42:50 INFO com.mchange.v2.c3p0.C3P0Registry.banner() (C3P0Registry.java:248): Initializing c3p0-0.9.5.2 [built 08-December-2015 22:06:04 -0800; debug? true; trace: 10]
[INFO] 2018-11-21 11:42:51 INFO org.hibernate.Version.logVersion() (Version.java:46): HHH000412: Hibernate Core {5.3.7.Final}
[INFO] 2018-11-21 11:42:51 INFO org.hibernate.cfg.Environment.<clinit>() (Environment.java:213): HHH000206: hibernate.properties not found
[WARN] 2018-11-21 11:42:51 WARN org.springframework.context.support.AbstractApplicationContext.refresh() (AbstractApplicationContext.java:551): Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sessionFactory' defined in class path resource [applicationContext.xml]: Invocation of init method failed; nested exception is java.io.FileNotFoundException: class path resource [zzc/spring/hibernate/entities/Account.hbm.xml] cannot be opened because it does not exist
[ERROR] 2018-11-21 11:42:51 ERROR org.springframework.test.context.TestContextManager.prepareTestInstance() (TestContextManager.java:234): Caught exception while allowing TestExecutionListener [org.springframework.test.context.support.DependencyInjectionTestExecutionListener@7823a2f9] to prepare test instance [zzc.spring.hibernate.SpringHibernateTests@59d4cd39]
java.lang.IllegalStateException: Failed to load ApplicationContext
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:124)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:83)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.injectDependencies(DependencyInjectionTestExecutionListener.java:117)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:83)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:230)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:228)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:287)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:289)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:247)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:94)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:191)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137)
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68)
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47)
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242)
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70)
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sessionFactory' defined in class path resource [applicationContext.xml]: Invocation of init method failed; nested exception is java.io.FileNotFoundException: class path resource [zzc/spring/hibernate/entities/Account.hbm.xml] cannot be opened because it does not exist
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1631)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:553)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:481)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:312)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:308)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:742)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:867)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:543)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:128)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:60)
	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.delegateLoading(AbstractDelegatingSmartContextLoader.java:281)
	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.loadContext(AbstractDelegatingSmartContextLoader.java:249)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:98)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:116)
	... 24 more
Caused by: java.io.FileNotFoundException: class path resource [zzc/spring/hibernate/entities/Account.hbm.xml] cannot be opened because it does not exist
	at org.springframework.core.io.ClassPathResource.getInputStream(ClassPathResource.java:172)
	at org.springframework.orm.hibernate4.LocalSessionFactoryBean.afterPropertiesSet(LocalSessionFactoryBean.java:363)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1689)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1627)
	... 39 more
[INFO] 2018-11-21 11:43:15 INFO org.springframework.test.context.support.AbstractTestContextBootstrapper.getDefaultTestExecutionListenerClassNames() (AbstractTestContextBootstrapper.java:248): Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
[INFO] 2018-11-21 11:43:15 INFO org.springframework.test.context.support.AbstractTestContextBootstrapper.getTestExecutionListeners() (AbstractTestContextBootstrapper.java:174): Using TestExecutionListeners: [org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@1b604f19, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@7823a2f9, org.springframework.test.context.support.DirtiesContextTestExecutionListener@4cc0edeb, org.springframework.test.context.transaction.TransactionalTestExecutionListener@457e2f02, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@5c7fa833]
[INFO] 2018-11-21 11:43:15 INFO org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions() (XmlBeanDefinitionReader.java:317): Loading XML bean definitions from class path resource [applicationContext.xml]
[INFO] 2018-11-21 11:43:15 INFO org.springframework.context.support.AbstractApplicationContext.prepareRefresh() (AbstractApplicationContext.java:583): Refreshing org.springframework.context.support.GenericApplicationContext@56ef9176: startup date [Wed Nov 21 11:43:15 CST 2018]; root of context hierarchy
[INFO] 2018-11-21 11:43:16 INFO com.mchange.v2.log.MLog$1.run() (MLog.java:124): MLog clients using log4j logging.
[INFO] 2018-11-21 11:43:21 INFO com.mchange.v2.c3p0.C3P0Registry.banner() (C3P0Registry.java:248): Initializing c3p0-0.9.5.2 [built 08-December-2015 22:06:04 -0800; debug? true; trace: 10]
[INFO] 2018-11-21 11:43:21 INFO org.hibernate.Version.logVersion() (Version.java:46): HHH000412: Hibernate Core {5.3.7.Final}
[INFO] 2018-11-21 11:43:21 INFO org.hibernate.cfg.Environment.<clinit>() (Environment.java:213): HHH000206: hibernate.properties not found
[INFO] 2018-11-21 11:43:21 INFO org.hibernate.annotations.common.reflection.java.JavaReflectionManager.<clinit>() (JavaReflectionManager.java:49): HCANN000001: Hibernate Commons Annotations {5.0.4.Final}
[DEBUG] 2018-11-21 11:43:21 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration boolean -> org.hibernate.type.BooleanType@58326051
[DEBUG] 2018-11-21 11:43:21 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration boolean -> org.hibernate.type.BooleanType@58326051
[DEBUG] 2018-11-21 11:43:21 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@58326051
[DEBUG] 2018-11-21 11:43:21 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@764faa6
[DEBUG] 2018-11-21 11:43:21 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration true_false -> org.hibernate.type.TrueFalseType@5a755cc1
[DEBUG] 2018-11-21 11:43:21 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration yes_no -> org.hibernate.type.YesNoType@484094a5
[DEBUG] 2018-11-21 11:43:21 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration byte -> org.hibernate.type.ByteType@e57b96d
[DEBUG] 2018-11-21 11:43:21 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration byte -> org.hibernate.type.ByteType@e57b96d
[DEBUG] 2018-11-21 11:43:21 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@e57b96d
[DEBUG] 2018-11-21 11:43:21 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration character -> org.hibernate.type.CharacterType@545b995e
[DEBUG] 2018-11-21 11:43:21 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration char -> org.hibernate.type.CharacterType@545b995e
[DEBUG] 2018-11-21 11:43:21 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@545b995e
[DEBUG] 2018-11-21 11:43:21 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration short -> org.hibernate.type.ShortType@29526c05
[DEBUG] 2018-11-21 11:43:21 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration short -> org.hibernate.type.ShortType@29526c05
[DEBUG] 2018-11-21 11:43:21 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.lang.Short -> org.hibernate.type.ShortType@29526c05
[DEBUG] 2018-11-21 11:43:21 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration integer -> org.hibernate.type.IntegerType@58be6e8
[DEBUG] 2018-11-21 11:43:21 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration int -> org.hibernate.type.IntegerType@58be6e8
[DEBUG] 2018-11-21 11:43:21 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@58be6e8
[DEBUG] 2018-11-21 11:43:21 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration long -> org.hibernate.type.LongType@2bd08376
[DEBUG] 2018-11-21 11:43:21 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration long -> org.hibernate.type.LongType@2bd08376
[DEBUG] 2018-11-21 11:43:21 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.lang.Long -> org.hibernate.type.LongType@2bd08376
[DEBUG] 2018-11-21 11:43:21 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration float -> org.hibernate.type.FloatType@42b02722
[DEBUG] 2018-11-21 11:43:21 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration float -> org.hibernate.type.FloatType@42b02722
[DEBUG] 2018-11-21 11:43:21 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.lang.Float -> org.hibernate.type.FloatType@42b02722
[DEBUG] 2018-11-21 11:43:21 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration double -> org.hibernate.type.DoubleType@5ce8d869
[DEBUG] 2018-11-21 11:43:21 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration double -> org.hibernate.type.DoubleType@5ce8d869
[DEBUG] 2018-11-21 11:43:21 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@5ce8d869
[DEBUG] 2018-11-21 11:43:21 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@7a1234bf
[DEBUG] 2018-11-21 11:43:21 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@7a1234bf
[DEBUG] 2018-11-21 11:43:21 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration big_integer -> org.hibernate.type.BigIntegerType@6bffbc6d
[DEBUG] 2018-11-21 11:43:21 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@6bffbc6d
[DEBUG] 2018-11-21 11:43:21 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration string -> org.hibernate.type.StringType@39a2bb97
[DEBUG] 2018-11-21 11:43:21 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.lang.String -> org.hibernate.type.StringType@39a2bb97
[DEBUG] 2018-11-21 11:43:21 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration nstring -> org.hibernate.type.StringNVarcharType@4331d187
[DEBUG] 2018-11-21 11:43:21 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@1608bcbd
[DEBUG] 2018-11-21 11:43:21 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration url -> org.hibernate.type.UrlType@4426bff1
[DEBUG] 2018-11-21 11:43:21 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.net.URL -> org.hibernate.type.UrlType@4426bff1
[DEBUG] 2018-11-21 11:43:21 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration Duration -> org.hibernate.type.DurationType@336f1079
[DEBUG] 2018-11-21 11:43:21 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.time.Duration -> org.hibernate.type.DurationType@336f1079
[DEBUG] 2018-11-21 11:43:21 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration Instant -> org.hibernate.type.InstantType@6eb2384f
[DEBUG] 2018-11-21 11:43:21 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.time.Instant -> org.hibernate.type.InstantType@6eb2384f
[DEBUG] 2018-11-21 11:43:21 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@12f9af83
[DEBUG] 2018-11-21 11:43:21 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@12f9af83
[DEBUG] 2018-11-21 11:43:21 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration LocalDate -> org.hibernate.type.LocalDateType@10cf09e8
[DEBUG] 2018-11-21 11:43:21 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@10cf09e8
[DEBUG] 2018-11-21 11:43:21 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@6bca7e0d
[DEBUG] 2018-11-21 11:43:21 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@6bca7e0d
[DEBUG] 2018-11-21 11:43:21 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@19835e64
[DEBUG] 2018-11-21 11:43:21 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@19835e64
[DEBUG] 2018-11-21 11:43:21 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@33308786
[DEBUG] 2018-11-21 11:43:21 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@33308786
[DEBUG] 2018-11-21 11:43:21 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@5e4bd84a
[DEBUG] 2018-11-21 11:43:21 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@5e4bd84a
[DEBUG] 2018-11-21 11:43:21 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration date -> org.hibernate.type.DateType@4ce1d6d0
[DEBUG] 2018-11-21 11:43:21 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.sql.Date -> org.hibernate.type.DateType@4ce1d6d0
[DEBUG] 2018-11-21 11:43:21 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration time -> org.hibernate.type.TimeType@71812481
[DEBUG] 2018-11-21 11:43:21 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.sql.Time -> org.hibernate.type.TimeType@71812481
[DEBUG] 2018-11-21 11:43:21 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration timestamp -> org.hibernate.type.TimestampType@6155d082
[DEBUG] 2018-11-21 11:43:21 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@6155d082
[DEBUG] 2018-11-21 11:43:21 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.util.Date -> org.hibernate.type.TimestampType@6155d082
[DEBUG] 2018-11-21 11:43:21 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@2ea6e30c
[DEBUG] 2018-11-21 11:43:21 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration calendar -> org.hibernate.type.CalendarType@7803bfd
[DEBUG] 2018-11-21 11:43:21 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@7803bfd
[DEBUG] 2018-11-21 11:43:21 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@7803bfd
[DEBUG] 2018-11-21 11:43:21 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@62ef27a8
[DEBUG] 2018-11-21 11:43:21 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration locale -> org.hibernate.type.LocaleType@25aca718
[DEBUG] 2018-11-21 11:43:21 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@25aca718
[DEBUG] 2018-11-21 11:43:21 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration currency -> org.hibernate.type.CurrencyType@79179359
[DEBUG] 2018-11-21 11:43:21 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@79179359
[DEBUG] 2018-11-21 11:43:21 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration timezone -> org.hibernate.type.TimeZoneType@4eb386df
[DEBUG] 2018-11-21 11:43:21 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@4eb386df
[DEBUG] 2018-11-21 11:43:21 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration class -> org.hibernate.type.ClassType@5a18cd76
[DEBUG] 2018-11-21 11:43:21 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.lang.Class -> org.hibernate.type.ClassType@5a18cd76
[DEBUG] 2018-11-21 11:43:21 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@6995bf68
[DEBUG] 2018-11-21 11:43:21 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@6995bf68
[DEBUG] 2018-11-21 11:43:21 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@3568f9d2
[DEBUG] 2018-11-21 11:43:21 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration binary -> org.hibernate.type.BinaryType@4b1d6571
[DEBUG] 2018-11-21 11:43:21 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration byte[] -> org.hibernate.type.BinaryType@4b1d6571
[DEBUG] 2018-11-21 11:43:21 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration [B -> org.hibernate.type.BinaryType@4b1d6571
[DEBUG] 2018-11-21 11:43:21 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@6e950bcf
[DEBUG] 2018-11-21 11:43:21 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@6e950bcf
[DEBUG] 2018-11-21 11:43:21 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@6e950bcf
[DEBUG] 2018-11-21 11:43:21 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration row_version -> org.hibernate.type.RowVersionType@5a709816
[DEBUG] 2018-11-21 11:43:21 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration image -> org.hibernate.type.ImageType@53dbe163
[DEBUG] 2018-11-21 11:43:21 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration characters -> org.hibernate.type.CharArrayType@6d1ef78d
[DEBUG] 2018-11-21 11:43:21 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration char[] -> org.hibernate.type.CharArrayType@6d1ef78d
[DEBUG] 2018-11-21 11:43:21 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration [C -> org.hibernate.type.CharArrayType@6d1ef78d
[DEBUG] 2018-11-21 11:43:21 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@176b3f44
[DEBUG] 2018-11-21 11:43:21 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@176b3f44
[DEBUG] 2018-11-21 11:43:21 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@176b3f44
[DEBUG] 2018-11-21 11:43:21 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration text -> org.hibernate.type.TextType@5d12a356
[DEBUG] 2018-11-21 11:43:21 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration ntext -> org.hibernate.type.NTextType@797cf65c
[DEBUG] 2018-11-21 11:43:21 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration blob -> org.hibernate.type.BlobType@1941a8ff
[DEBUG] 2018-11-21 11:43:21 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@1941a8ff
[DEBUG] 2018-11-21 11:43:21 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@38831718
[DEBUG] 2018-11-21 11:43:21 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration clob -> org.hibernate.type.ClobType@512535ff
[DEBUG] 2018-11-21 11:43:21 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@512535ff
[DEBUG] 2018-11-21 11:43:21 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration nclob -> org.hibernate.type.NClobType@7241a47d
[DEBUG] 2018-11-21 11:43:21 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@7241a47d
[DEBUG] 2018-11-21 11:43:21 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@5dcd8c7a
[DEBUG] 2018-11-21 11:43:21 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@253d9f73
[DEBUG] 2018-11-21 11:43:21 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration serializable -> org.hibernate.type.SerializableType@a22cb6a
[DEBUG] 2018-11-21 11:43:21 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration object -> org.hibernate.type.ObjectType@5674e1f2
[DEBUG] 2018-11-21 11:43:21 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@5674e1f2
[DEBUG] 2018-11-21 11:43:21 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@32f232a5
[DEBUG] 2018-11-21 11:43:21 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@43f82e78
[DEBUG] 2018-11-21 11:43:21 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@e54303
[DEBUG] 2018-11-21 11:43:21 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@e8df99a
[DEBUG] 2018-11-21 11:43:21 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@2dc995f4
[DEBUG] 2018-11-21 11:43:21 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@2f40e5db
[DEBUG] 2018-11-21 11:43:21 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@517566b
[DEBUG] 2018-11-21 11:43:21 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@64b73e7a
[INFO] 2018-11-21 11:43:21 INFO com.mchange.v2.c3p0.impl.AbstractPoolBackedDataSource.getPoolManager() (AbstractPoolBackedDataSource.java:527): Initializing c3p0 pool... com.mchange.v2.c3p0.ComboPooledDataSource [ acquireIncrement -> 3, acquireRetryAttempts -> 30, acquireRetryDelay -> 1000, autoCommitOnClose -> false, automaticTestTable -> null, breakAfterAcquireFailure -> false, checkoutTimeout -> 0, connectionCustomizerClassName -> null, connectionTesterClassName -> com.mchange.v2.c3p0.impl.DefaultConnectionTester, contextClassLoaderSource -> caller, dataSourceName -> 2rxcez9zej27bo1tm62ow|c267ef4, debugUnreturnedConnectionStackTraces -> false, description -> null, driverClass -> com.mysql.jdbc.Driver, extensions -> {}, factoryClassLocation -> null, forceIgnoreUnresolvedTransactions -> false, forceSynchronousCheckins -> false, forceUseNamedDriverClass -> false, identityToken -> 2rxcez9zej27bo1tm62ow|c267ef4, idleConnectionTestPeriod -> 0, initialPoolSize -> 5, jdbcUrl -> jdbc:mysql://10.10.10.141/test1, maxAdministrativeTaskTime -> 0, maxConnectionAge -> 0, maxIdleTime -> 0, maxIdleTimeExcessConnections -> 0, maxPoolSize -> 10, maxStatements -> 0, maxStatementsPerConnection -> 0, minPoolSize -> 3, numHelperThreads -> 3, preferredTestQuery -> null, privilegeSpawnedThreads -> false, properties -> {user=******, password=******}, propertyCycle -> 0, statementCacheNumDeferredCloseThreads -> 0, testConnectionOnCheckin -> false, testConnectionOnCheckout -> false, unreturnedConnectionTimeout -> 0, userOverrides -> {}, usesTraditionalReflectiveProxies -> false ]
[INFO] 2018-11-21 11:43:22 INFO org.hibernate.dialect.Dialect.<init>() (Dialect.java:157): HHH000400: Using dialect: org.hibernate.dialect.MySQL55Dialect
[DEBUG] 2018-11-21 11:43:22 DEBUG org.hibernate.type.spi.TypeConfiguration.scope() (TypeConfiguration.java:142): Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@68b6f0d6] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@4044fb95]
[DEBUG] 2018-11-21 11:43:22 DEBUG org.hibernate.type.spi.TypeConfiguration.scope() (TypeConfiguration.java:147): Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@68b6f0d6] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@6e9319f]
[INFO] 2018-11-21 11:43:22 INFO org.hibernate.tool.schema.internal.SchemaCreatorImpl.applyImportSources() (SchemaCreatorImpl.java:489): HHH000476: Executing import script 'org.hibernate.tool.schema.internal.exec.ScriptSourceInputNonExistentImpl@9cd25ff'
[TRACE] 2018-11-21 11:43:22 TRACE org.hibernate.type.spi.TypeConfiguration.sessionFactoryCreated() (TypeConfiguration.java:195): Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@6e9319f] for TypeConfiguration
[INFO] 2018-11-21 11:43:22 INFO org.springframework.context.support.AbstractApplicationContext.doClose() (AbstractApplicationContext.java:984): Closing org.springframework.context.support.GenericApplicationContext@56ef9176: startup date [Wed Nov 21 11:43:15 CST 2018]; root of context hierarchy
[TRACE] 2018-11-21 11:43:22 TRACE org.hibernate.type.spi.TypeConfiguration.sessionFactoryClosed() (TypeConfiguration.java:201): Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@6e9319f] for TypeConfiguration
[DEBUG] 2018-11-21 11:43:22 DEBUG org.hibernate.type.spi.TypeConfiguration$Scope.unsetSessionFactory() (TypeConfiguration.java:312): Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@6eeff625] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@6e9319f]
[INFO] 2018-11-21 11:44:06 INFO org.springframework.test.context.support.AbstractTestContextBootstrapper.getDefaultTestExecutionListenerClassNames() (AbstractTestContextBootstrapper.java:248): Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
[INFO] 2018-11-21 11:44:06 INFO org.springframework.test.context.support.AbstractTestContextBootstrapper.getTestExecutionListeners() (AbstractTestContextBootstrapper.java:174): Using TestExecutionListeners: [org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@8bd1b6a, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@18be83e4, org.springframework.test.context.support.DirtiesContextTestExecutionListener@cb5822, org.springframework.test.context.transaction.TransactionalTestExecutionListener@4b9e13df, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@2b98378d]
[INFO] 2018-11-21 11:44:07 INFO org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions() (XmlBeanDefinitionReader.java:317): Loading XML bean definitions from class path resource [applicationContext.xml]
[INFO] 2018-11-21 11:44:07 INFO org.springframework.context.support.AbstractApplicationContext.prepareRefresh() (AbstractApplicationContext.java:583): Refreshing org.springframework.context.support.GenericApplicationContext@6adede5: startup date [Wed Nov 21 11:44:07 CST 2018]; root of context hierarchy
[INFO] 2018-11-21 11:44:07 INFO com.mchange.v2.log.MLog$1.run() (MLog.java:124): MLog clients using log4j logging.
[INFO] 2018-11-21 11:44:12 INFO com.mchange.v2.c3p0.C3P0Registry.banner() (C3P0Registry.java:248): Initializing c3p0-0.9.5.2 [built 08-December-2015 22:06:04 -0800; debug? true; trace: 10]
[INFO] 2018-11-21 11:44:12 INFO org.hibernate.Version.logVersion() (Version.java:46): HHH000412: Hibernate Core {5.3.7.Final}
[INFO] 2018-11-21 11:44:12 INFO org.hibernate.cfg.Environment.<clinit>() (Environment.java:213): HHH000206: hibernate.properties not found
[INFO] 2018-11-21 11:44:13 INFO org.hibernate.annotations.common.reflection.java.JavaReflectionManager.<clinit>() (JavaReflectionManager.java:49): HCANN000001: Hibernate Commons Annotations {5.0.4.Final}
[DEBUG] 2018-11-21 11:44:13 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration boolean -> org.hibernate.type.BooleanType@32c4e8b2
[DEBUG] 2018-11-21 11:44:13 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration boolean -> org.hibernate.type.BooleanType@32c4e8b2
[DEBUG] 2018-11-21 11:44:13 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@32c4e8b2
[DEBUG] 2018-11-21 11:44:13 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@4c1f22f3
[DEBUG] 2018-11-21 11:44:13 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration true_false -> org.hibernate.type.TrueFalseType@7ae42ce3
[DEBUG] 2018-11-21 11:44:13 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration yes_no -> org.hibernate.type.YesNoType@38234a38
[DEBUG] 2018-11-21 11:44:13 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration byte -> org.hibernate.type.ByteType@32c726ee
[DEBUG] 2018-11-21 11:44:13 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration byte -> org.hibernate.type.ByteType@32c726ee
[DEBUG] 2018-11-21 11:44:13 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@32c726ee
[DEBUG] 2018-11-21 11:44:13 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration character -> org.hibernate.type.CharacterType@76a2ddf3
[DEBUG] 2018-11-21 11:44:13 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration char -> org.hibernate.type.CharacterType@76a2ddf3
[DEBUG] 2018-11-21 11:44:13 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@76a2ddf3
[DEBUG] 2018-11-21 11:44:13 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration short -> org.hibernate.type.ShortType@2ef14fe
[DEBUG] 2018-11-21 11:44:13 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration short -> org.hibernate.type.ShortType@2ef14fe
[DEBUG] 2018-11-21 11:44:13 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.lang.Short -> org.hibernate.type.ShortType@2ef14fe
[DEBUG] 2018-11-21 11:44:13 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration integer -> org.hibernate.type.IntegerType@7331196b
[DEBUG] 2018-11-21 11:44:13 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration int -> org.hibernate.type.IntegerType@7331196b
[DEBUG] 2018-11-21 11:44:13 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@7331196b
[DEBUG] 2018-11-21 11:44:13 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration long -> org.hibernate.type.LongType@e70f13a
[DEBUG] 2018-11-21 11:44:13 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration long -> org.hibernate.type.LongType@e70f13a
[DEBUG] 2018-11-21 11:44:13 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.lang.Long -> org.hibernate.type.LongType@e70f13a
[DEBUG] 2018-11-21 11:44:13 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration float -> org.hibernate.type.FloatType@d62fe5b
[DEBUG] 2018-11-21 11:44:13 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration float -> org.hibernate.type.FloatType@d62fe5b
[DEBUG] 2018-11-21 11:44:13 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.lang.Float -> org.hibernate.type.FloatType@d62fe5b
[DEBUG] 2018-11-21 11:44:13 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration double -> org.hibernate.type.DoubleType@27eedb64
[DEBUG] 2018-11-21 11:44:13 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration double -> org.hibernate.type.DoubleType@27eedb64
[DEBUG] 2018-11-21 11:44:13 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@27eedb64
[DEBUG] 2018-11-21 11:44:13 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@2f62ea70
[DEBUG] 2018-11-21 11:44:13 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@2f62ea70
[DEBUG] 2018-11-21 11:44:13 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration big_integer -> org.hibernate.type.BigIntegerType@1b84f475
[DEBUG] 2018-11-21 11:44:13 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@1b84f475
[DEBUG] 2018-11-21 11:44:13 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration string -> org.hibernate.type.StringType@3ad2e17
[DEBUG] 2018-11-21 11:44:13 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.lang.String -> org.hibernate.type.StringType@3ad2e17
[DEBUG] 2018-11-21 11:44:13 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration nstring -> org.hibernate.type.StringNVarcharType@6f63b475
[DEBUG] 2018-11-21 11:44:13 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@5bf8fa12
[DEBUG] 2018-11-21 11:44:13 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration url -> org.hibernate.type.UrlType@3c7c886c
[DEBUG] 2018-11-21 11:44:13 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.net.URL -> org.hibernate.type.UrlType@3c7c886c
[DEBUG] 2018-11-21 11:44:13 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration Duration -> org.hibernate.type.DurationType@2f16c6b3
[DEBUG] 2018-11-21 11:44:13 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.time.Duration -> org.hibernate.type.DurationType@2f16c6b3
[DEBUG] 2018-11-21 11:44:13 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration Instant -> org.hibernate.type.InstantType@3c9c0d96
[DEBUG] 2018-11-21 11:44:13 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.time.Instant -> org.hibernate.type.InstantType@3c9c0d96
[DEBUG] 2018-11-21 11:44:13 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@19b93fa8
[DEBUG] 2018-11-21 11:44:13 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@19b93fa8
[DEBUG] 2018-11-21 11:44:13 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration LocalDate -> org.hibernate.type.LocalDateType@1921ad94
[DEBUG] 2018-11-21 11:44:13 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@1921ad94
[DEBUG] 2018-11-21 11:44:13 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@2631f68c
[DEBUG] 2018-11-21 11:44:13 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@2631f68c
[DEBUG] 2018-11-21 11:44:13 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@68b32e3e
[DEBUG] 2018-11-21 11:44:13 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@68b32e3e
[DEBUG] 2018-11-21 11:44:13 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@4f9a2c08
[DEBUG] 2018-11-21 11:44:13 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@4f9a2c08
[DEBUG] 2018-11-21 11:44:13 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@648c94da
[DEBUG] 2018-11-21 11:44:13 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@648c94da
[DEBUG] 2018-11-21 11:44:13 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration date -> org.hibernate.type.DateType@24111ef1
[DEBUG] 2018-11-21 11:44:13 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.sql.Date -> org.hibernate.type.DateType@24111ef1
[DEBUG] 2018-11-21 11:44:13 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration time -> org.hibernate.type.TimeType@16ce702d
[DEBUG] 2018-11-21 11:44:13 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.sql.Time -> org.hibernate.type.TimeType@16ce702d
[DEBUG] 2018-11-21 11:44:13 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration timestamp -> org.hibernate.type.TimestampType@3a5ecce3
[DEBUG] 2018-11-21 11:44:13 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@3a5ecce3
[DEBUG] 2018-11-21 11:44:13 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.util.Date -> org.hibernate.type.TimestampType@3a5ecce3
[DEBUG] 2018-11-21 11:44:13 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@6138e79a
[DEBUG] 2018-11-21 11:44:13 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration calendar -> org.hibernate.type.CalendarType@42bc14c1
[DEBUG] 2018-11-21 11:44:13 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@42bc14c1
[DEBUG] 2018-11-21 11:44:13 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@42bc14c1
[DEBUG] 2018-11-21 11:44:13 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@6436a7db
[DEBUG] 2018-11-21 11:44:13 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration locale -> org.hibernate.type.LocaleType@16fdec90
[DEBUG] 2018-11-21 11:44:13 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@16fdec90
[DEBUG] 2018-11-21 11:44:13 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration currency -> org.hibernate.type.CurrencyType@dbd8e44
[DEBUG] 2018-11-21 11:44:13 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@dbd8e44
[DEBUG] 2018-11-21 11:44:13 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration timezone -> org.hibernate.type.TimeZoneType@79517588
[DEBUG] 2018-11-21 11:44:13 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@79517588
[DEBUG] 2018-11-21 11:44:13 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration class -> org.hibernate.type.ClassType@3da30852
[DEBUG] 2018-11-21 11:44:13 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.lang.Class -> org.hibernate.type.ClassType@3da30852
[DEBUG] 2018-11-21 11:44:13 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@5143c662
[DEBUG] 2018-11-21 11:44:13 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@5143c662
[DEBUG] 2018-11-21 11:44:13 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@71c27ee8
[DEBUG] 2018-11-21 11:44:13 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration binary -> org.hibernate.type.BinaryType@1b835480
[DEBUG] 2018-11-21 11:44:13 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration byte[] -> org.hibernate.type.BinaryType@1b835480
[DEBUG] 2018-11-21 11:44:13 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration [B -> org.hibernate.type.BinaryType@1b835480
[DEBUG] 2018-11-21 11:44:13 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@16414e40
[DEBUG] 2018-11-21 11:44:13 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@16414e40
[DEBUG] 2018-11-21 11:44:13 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@16414e40
[DEBUG] 2018-11-21 11:44:13 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration row_version -> org.hibernate.type.RowVersionType@78383390
[DEBUG] 2018-11-21 11:44:13 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration image -> org.hibernate.type.ImageType@db57326
[DEBUG] 2018-11-21 11:44:13 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration characters -> org.hibernate.type.CharArrayType@1a6c1270
[DEBUG] 2018-11-21 11:44:13 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration char[] -> org.hibernate.type.CharArrayType@1a6c1270
[DEBUG] 2018-11-21 11:44:13 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration [C -> org.hibernate.type.CharArrayType@1a6c1270
[DEBUG] 2018-11-21 11:44:13 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@6ee6f53
[DEBUG] 2018-11-21 11:44:13 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@6ee6f53
[DEBUG] 2018-11-21 11:44:13 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@6ee6f53
[DEBUG] 2018-11-21 11:44:13 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration text -> org.hibernate.type.TextType@134d26af
[DEBUG] 2018-11-21 11:44:13 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration ntext -> org.hibernate.type.NTextType@31bcf236
[DEBUG] 2018-11-21 11:44:13 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration blob -> org.hibernate.type.BlobType@22d7b4f8
[DEBUG] 2018-11-21 11:44:13 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@22d7b4f8
[DEBUG] 2018-11-21 11:44:13 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@2c1156a7
[DEBUG] 2018-11-21 11:44:13 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration clob -> org.hibernate.type.ClobType@71529963
[DEBUG] 2018-11-21 11:44:13 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@71529963
[DEBUG] 2018-11-21 11:44:13 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration nclob -> org.hibernate.type.NClobType@70f59913
[DEBUG] 2018-11-21 11:44:13 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@70f59913
[DEBUG] 2018-11-21 11:44:13 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@2250b9f2
[DEBUG] 2018-11-21 11:44:13 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@142269f2
[DEBUG] 2018-11-21 11:44:13 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration serializable -> org.hibernate.type.SerializableType@5dd1c9f2
[DEBUG] 2018-11-21 11:44:13 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration object -> org.hibernate.type.ObjectType@79c7532f
[DEBUG] 2018-11-21 11:44:13 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@79c7532f
[DEBUG] 2018-11-21 11:44:13 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@43f82e78
[DEBUG] 2018-11-21 11:44:13 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@e54303
[DEBUG] 2018-11-21 11:44:13 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@e8df99a
[DEBUG] 2018-11-21 11:44:13 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@2dc995f4
[DEBUG] 2018-11-21 11:44:13 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@2f40e5db
[DEBUG] 2018-11-21 11:44:13 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@517566b
[DEBUG] 2018-11-21 11:44:13 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@64b73e7a
[DEBUG] 2018-11-21 11:44:13 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@530712d
[INFO] 2018-11-21 11:44:13 INFO com.mchange.v2.c3p0.impl.AbstractPoolBackedDataSource.getPoolManager() (AbstractPoolBackedDataSource.java:527): Initializing c3p0 pool... com.mchange.v2.c3p0.ComboPooledDataSource [ acquireIncrement -> 3, acquireRetryAttempts -> 30, acquireRetryDelay -> 1000, autoCommitOnClose -> false, automaticTestTable -> null, breakAfterAcquireFailure -> false, checkoutTimeout -> 0, connectionCustomizerClassName -> null, connectionTesterClassName -> com.mchange.v2.c3p0.impl.DefaultConnectionTester, contextClassLoaderSource -> caller, dataSourceName -> 2rxcez9zej3auicb1rrf|5e82df6a, debugUnreturnedConnectionStackTraces -> false, description -> null, driverClass -> com.mysql.jdbc.Driver, extensions -> {}, factoryClassLocation -> null, forceIgnoreUnresolvedTransactions -> false, forceSynchronousCheckins -> false, forceUseNamedDriverClass -> false, identityToken -> 2rxcez9zej3auicb1rrf|5e82df6a, idleConnectionTestPeriod -> 0, initialPoolSize -> 5, jdbcUrl -> jdbc:mysql://10.10.10.141/test1, maxAdministrativeTaskTime -> 0, maxConnectionAge -> 0, maxIdleTime -> 0, maxIdleTimeExcessConnections -> 0, maxPoolSize -> 10, maxStatements -> 0, maxStatementsPerConnection -> 0, minPoolSize -> 3, numHelperThreads -> 3, preferredTestQuery -> null, privilegeSpawnedThreads -> false, properties -> {user=******, password=******}, propertyCycle -> 0, statementCacheNumDeferredCloseThreads -> 0, testConnectionOnCheckin -> false, testConnectionOnCheckout -> false, unreturnedConnectionTimeout -> 0, userOverrides -> {}, usesTraditionalReflectiveProxies -> false ]
[INFO] 2018-11-21 11:44:13 INFO org.hibernate.dialect.Dialect.<init>() (Dialect.java:157): HHH000400: Using dialect: org.hibernate.dialect.MySQL55Dialect
[DEBUG] 2018-11-21 11:44:13 DEBUG org.hibernate.type.spi.TypeConfiguration.scope() (TypeConfiguration.java:142): Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@4044fb95] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@aa549e5]
[DEBUG] 2018-11-21 11:44:13 DEBUG org.hibernate.type.spi.TypeConfiguration.scope() (TypeConfiguration.java:147): Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@4044fb95] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@72e34f77]
[INFO] 2018-11-21 11:44:13 INFO org.hibernate.tool.schema.internal.SchemaCreatorImpl.applyImportSources() (SchemaCreatorImpl.java:489): HHH000476: Executing import script 'org.hibernate.tool.schema.internal.exec.ScriptSourceInputNonExistentImpl@27e0f2f5'
[TRACE] 2018-11-21 11:44:13 TRACE org.hibernate.type.spi.TypeConfiguration.sessionFactoryCreated() (TypeConfiguration.java:195): Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@72e34f77] for TypeConfiguration
[INFO] 2018-11-21 11:44:13 INFO org.springframework.context.support.AbstractApplicationContext.doClose() (AbstractApplicationContext.java:984): Closing org.springframework.context.support.GenericApplicationContext@6adede5: startup date [Wed Nov 21 11:44:07 CST 2018]; root of context hierarchy
[TRACE] 2018-11-21 11:44:13 TRACE org.hibernate.type.spi.TypeConfiguration.sessionFactoryClosed() (TypeConfiguration.java:201): Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@72e34f77] for TypeConfiguration
[DEBUG] 2018-11-21 11:44:13 DEBUG org.hibernate.type.spi.TypeConfiguration$Scope.unsetSessionFactory() (TypeConfiguration.java:312): Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@74fdef1a] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@72e34f77]
[INFO] 2018-11-21 11:48:20 INFO org.springframework.test.context.support.AbstractTestContextBootstrapper.getDefaultTestExecutionListenerClassNames() (AbstractTestContextBootstrapper.java:248): Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
[INFO] 2018-11-21 11:48:20 INFO org.springframework.test.context.support.AbstractTestContextBootstrapper.getTestExecutionListeners() (AbstractTestContextBootstrapper.java:174): Using TestExecutionListeners: [org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@8bd1b6a, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@18be83e4, org.springframework.test.context.support.DirtiesContextTestExecutionListener@cb5822, org.springframework.test.context.transaction.TransactionalTestExecutionListener@4b9e13df, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@2b98378d]
[INFO] 2018-11-21 11:48:20 INFO org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions() (XmlBeanDefinitionReader.java:317): Loading XML bean definitions from class path resource [applicationContext.xml]
[INFO] 2018-11-21 11:48:20 INFO org.springframework.context.support.AbstractApplicationContext.prepareRefresh() (AbstractApplicationContext.java:583): Refreshing org.springframework.context.support.GenericApplicationContext@6adede5: startup date [Wed Nov 21 11:48:20 CST 2018]; root of context hierarchy
[INFO] 2018-11-21 11:48:20 INFO com.mchange.v2.log.MLog$1.run() (MLog.java:124): MLog clients using log4j logging.
[INFO] 2018-11-21 11:48:26 INFO com.mchange.v2.c3p0.C3P0Registry.banner() (C3P0Registry.java:248): Initializing c3p0-0.9.5.2 [built 08-December-2015 22:06:04 -0800; debug? true; trace: 10]
[INFO] 2018-11-21 11:48:26 INFO org.hibernate.Version.logVersion() (Version.java:46): HHH000412: Hibernate Core {5.3.7.Final}
[INFO] 2018-11-21 11:48:26 INFO org.hibernate.cfg.Environment.<clinit>() (Environment.java:213): HHH000206: hibernate.properties not found
[INFO] 2018-11-21 11:48:26 INFO org.hibernate.annotations.common.reflection.java.JavaReflectionManager.<clinit>() (JavaReflectionManager.java:49): HCANN000001: Hibernate Commons Annotations {5.0.4.Final}
[DEBUG] 2018-11-21 11:48:26 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration boolean -> org.hibernate.type.BooleanType@32c4e8b2
[DEBUG] 2018-11-21 11:48:26 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration boolean -> org.hibernate.type.BooleanType@32c4e8b2
[DEBUG] 2018-11-21 11:48:26 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@32c4e8b2
[DEBUG] 2018-11-21 11:48:26 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@4c1f22f3
[DEBUG] 2018-11-21 11:48:26 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration true_false -> org.hibernate.type.TrueFalseType@7ae42ce3
[DEBUG] 2018-11-21 11:48:26 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration yes_no -> org.hibernate.type.YesNoType@38234a38
[DEBUG] 2018-11-21 11:48:26 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration byte -> org.hibernate.type.ByteType@32c726ee
[DEBUG] 2018-11-21 11:48:26 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration byte -> org.hibernate.type.ByteType@32c726ee
[DEBUG] 2018-11-21 11:48:26 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@32c726ee
[DEBUG] 2018-11-21 11:48:26 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration character -> org.hibernate.type.CharacterType@76a2ddf3
[DEBUG] 2018-11-21 11:48:26 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration char -> org.hibernate.type.CharacterType@76a2ddf3
[DEBUG] 2018-11-21 11:48:26 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@76a2ddf3
[DEBUG] 2018-11-21 11:48:26 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration short -> org.hibernate.type.ShortType@2ef14fe
[DEBUG] 2018-11-21 11:48:26 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration short -> org.hibernate.type.ShortType@2ef14fe
[DEBUG] 2018-11-21 11:48:26 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.lang.Short -> org.hibernate.type.ShortType@2ef14fe
[DEBUG] 2018-11-21 11:48:26 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration integer -> org.hibernate.type.IntegerType@7331196b
[DEBUG] 2018-11-21 11:48:26 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration int -> org.hibernate.type.IntegerType@7331196b
[DEBUG] 2018-11-21 11:48:26 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@7331196b
[DEBUG] 2018-11-21 11:48:26 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration long -> org.hibernate.type.LongType@e70f13a
[DEBUG] 2018-11-21 11:48:26 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration long -> org.hibernate.type.LongType@e70f13a
[DEBUG] 2018-11-21 11:48:26 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.lang.Long -> org.hibernate.type.LongType@e70f13a
[DEBUG] 2018-11-21 11:48:26 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration float -> org.hibernate.type.FloatType@d62fe5b
[DEBUG] 2018-11-21 11:48:26 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration float -> org.hibernate.type.FloatType@d62fe5b
[DEBUG] 2018-11-21 11:48:26 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.lang.Float -> org.hibernate.type.FloatType@d62fe5b
[DEBUG] 2018-11-21 11:48:26 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration double -> org.hibernate.type.DoubleType@27eedb64
[DEBUG] 2018-11-21 11:48:26 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration double -> org.hibernate.type.DoubleType@27eedb64
[DEBUG] 2018-11-21 11:48:26 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@27eedb64
[DEBUG] 2018-11-21 11:48:26 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@2f62ea70
[DEBUG] 2018-11-21 11:48:26 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@2f62ea70
[DEBUG] 2018-11-21 11:48:26 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration big_integer -> org.hibernate.type.BigIntegerType@1b84f475
[DEBUG] 2018-11-21 11:48:26 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@1b84f475
[DEBUG] 2018-11-21 11:48:26 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration string -> org.hibernate.type.StringType@3ad2e17
[DEBUG] 2018-11-21 11:48:26 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.lang.String -> org.hibernate.type.StringType@3ad2e17
[DEBUG] 2018-11-21 11:48:26 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration nstring -> org.hibernate.type.StringNVarcharType@6f63b475
[DEBUG] 2018-11-21 11:48:26 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@5bf8fa12
[DEBUG] 2018-11-21 11:48:26 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration url -> org.hibernate.type.UrlType@3c7c886c
[DEBUG] 2018-11-21 11:48:26 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.net.URL -> org.hibernate.type.UrlType@3c7c886c
[DEBUG] 2018-11-21 11:48:26 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration Duration -> org.hibernate.type.DurationType@2f16c6b3
[DEBUG] 2018-11-21 11:48:26 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.time.Duration -> org.hibernate.type.DurationType@2f16c6b3
[DEBUG] 2018-11-21 11:48:26 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration Instant -> org.hibernate.type.InstantType@3c9c0d96
[DEBUG] 2018-11-21 11:48:26 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.time.Instant -> org.hibernate.type.InstantType@3c9c0d96
[DEBUG] 2018-11-21 11:48:26 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@19b93fa8
[DEBUG] 2018-11-21 11:48:26 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@19b93fa8
[DEBUG] 2018-11-21 11:48:26 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration LocalDate -> org.hibernate.type.LocalDateType@1921ad94
[DEBUG] 2018-11-21 11:48:26 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@1921ad94
[DEBUG] 2018-11-21 11:48:26 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@2631f68c
[DEBUG] 2018-11-21 11:48:26 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@2631f68c
[DEBUG] 2018-11-21 11:48:26 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@68b32e3e
[DEBUG] 2018-11-21 11:48:26 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@68b32e3e
[DEBUG] 2018-11-21 11:48:26 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@4f9a2c08
[DEBUG] 2018-11-21 11:48:26 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@4f9a2c08
[DEBUG] 2018-11-21 11:48:26 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@648c94da
[DEBUG] 2018-11-21 11:48:26 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@648c94da
[DEBUG] 2018-11-21 11:48:26 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration date -> org.hibernate.type.DateType@24111ef1
[DEBUG] 2018-11-21 11:48:26 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.sql.Date -> org.hibernate.type.DateType@24111ef1
[DEBUG] 2018-11-21 11:48:26 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration time -> org.hibernate.type.TimeType@16ce702d
[DEBUG] 2018-11-21 11:48:26 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.sql.Time -> org.hibernate.type.TimeType@16ce702d
[DEBUG] 2018-11-21 11:48:26 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration timestamp -> org.hibernate.type.TimestampType@3a5ecce3
[DEBUG] 2018-11-21 11:48:26 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@3a5ecce3
[DEBUG] 2018-11-21 11:48:26 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.util.Date -> org.hibernate.type.TimestampType@3a5ecce3
[DEBUG] 2018-11-21 11:48:26 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@6138e79a
[DEBUG] 2018-11-21 11:48:26 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration calendar -> org.hibernate.type.CalendarType@42bc14c1
[DEBUG] 2018-11-21 11:48:26 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@42bc14c1
[DEBUG] 2018-11-21 11:48:26 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@42bc14c1
[DEBUG] 2018-11-21 11:48:26 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@6436a7db
[DEBUG] 2018-11-21 11:48:26 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration locale -> org.hibernate.type.LocaleType@16fdec90
[DEBUG] 2018-11-21 11:48:26 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@16fdec90
[DEBUG] 2018-11-21 11:48:26 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration currency -> org.hibernate.type.CurrencyType@dbd8e44
[DEBUG] 2018-11-21 11:48:26 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@dbd8e44
[DEBUG] 2018-11-21 11:48:26 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration timezone -> org.hibernate.type.TimeZoneType@79517588
[DEBUG] 2018-11-21 11:48:26 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@79517588
[DEBUG] 2018-11-21 11:48:26 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration class -> org.hibernate.type.ClassType@3da30852
[DEBUG] 2018-11-21 11:48:26 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.lang.Class -> org.hibernate.type.ClassType@3da30852
[DEBUG] 2018-11-21 11:48:26 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@5143c662
[DEBUG] 2018-11-21 11:48:26 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@5143c662
[DEBUG] 2018-11-21 11:48:26 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@71c27ee8
[DEBUG] 2018-11-21 11:48:26 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration binary -> org.hibernate.type.BinaryType@1b835480
[DEBUG] 2018-11-21 11:48:26 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration byte[] -> org.hibernate.type.BinaryType@1b835480
[DEBUG] 2018-11-21 11:48:26 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration [B -> org.hibernate.type.BinaryType@1b835480
[DEBUG] 2018-11-21 11:48:26 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@16414e40
[DEBUG] 2018-11-21 11:48:26 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@16414e40
[DEBUG] 2018-11-21 11:48:26 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@16414e40
[DEBUG] 2018-11-21 11:48:26 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration row_version -> org.hibernate.type.RowVersionType@78383390
[DEBUG] 2018-11-21 11:48:26 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration image -> org.hibernate.type.ImageType@db57326
[DEBUG] 2018-11-21 11:48:26 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration characters -> org.hibernate.type.CharArrayType@1a6c1270
[DEBUG] 2018-11-21 11:48:26 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration char[] -> org.hibernate.type.CharArrayType@1a6c1270
[DEBUG] 2018-11-21 11:48:26 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration [C -> org.hibernate.type.CharArrayType@1a6c1270
[DEBUG] 2018-11-21 11:48:26 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@6ee6f53
[DEBUG] 2018-11-21 11:48:26 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@6ee6f53
[DEBUG] 2018-11-21 11:48:26 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@6ee6f53
[DEBUG] 2018-11-21 11:48:26 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration text -> org.hibernate.type.TextType@134d26af
[DEBUG] 2018-11-21 11:48:26 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration ntext -> org.hibernate.type.NTextType@31bcf236
[DEBUG] 2018-11-21 11:48:26 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration blob -> org.hibernate.type.BlobType@22d7b4f8
[DEBUG] 2018-11-21 11:48:26 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@22d7b4f8
[DEBUG] 2018-11-21 11:48:26 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@2c1156a7
[DEBUG] 2018-11-21 11:48:26 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration clob -> org.hibernate.type.ClobType@71529963
[DEBUG] 2018-11-21 11:48:26 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@71529963
[DEBUG] 2018-11-21 11:48:26 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration nclob -> org.hibernate.type.NClobType@70f59913
[DEBUG] 2018-11-21 11:48:26 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@70f59913
[DEBUG] 2018-11-21 11:48:26 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@2250b9f2
[DEBUG] 2018-11-21 11:48:26 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@142269f2
[DEBUG] 2018-11-21 11:48:26 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration serializable -> org.hibernate.type.SerializableType@5dd1c9f2
[DEBUG] 2018-11-21 11:48:26 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration object -> org.hibernate.type.ObjectType@79c7532f
[DEBUG] 2018-11-21 11:48:26 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@79c7532f
[DEBUG] 2018-11-21 11:48:26 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@43f82e78
[DEBUG] 2018-11-21 11:48:26 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@e54303
[DEBUG] 2018-11-21 11:48:26 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@e8df99a
[DEBUG] 2018-11-21 11:48:26 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@2dc995f4
[DEBUG] 2018-11-21 11:48:26 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@2f40e5db
[DEBUG] 2018-11-21 11:48:26 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@517566b
[DEBUG] 2018-11-21 11:48:26 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@64b73e7a
[DEBUG] 2018-11-21 11:48:26 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@530712d
[INFO] 2018-11-21 11:48:26 INFO com.mchange.v2.c3p0.impl.AbstractPoolBackedDataSource.getPoolManager() (AbstractPoolBackedDataSource.java:527): Initializing c3p0 pool... com.mchange.v2.c3p0.ComboPooledDataSource [ acquireIncrement -> 3, acquireRetryAttempts -> 30, acquireRetryDelay -> 1000, autoCommitOnClose -> false, automaticTestTable -> null, breakAfterAcquireFailure -> false, checkoutTimeout -> 0, connectionCustomizerClassName -> null, connectionTesterClassName -> com.mchange.v2.c3p0.impl.DefaultConnectionTester, contextClassLoaderSource -> caller, dataSourceName -> 2rxcez9zej8qhbetsyr|5e82df6a, debugUnreturnedConnectionStackTraces -> false, description -> null, driverClass -> com.mysql.jdbc.Driver, extensions -> {}, factoryClassLocation -> null, forceIgnoreUnresolvedTransactions -> false, forceSynchronousCheckins -> false, forceUseNamedDriverClass -> false, identityToken -> 2rxcez9zej8qhbetsyr|5e82df6a, idleConnectionTestPeriod -> 0, initialPoolSize -> 5, jdbcUrl -> jdbc:mysql://10.10.10.141/test1, maxAdministrativeTaskTime -> 0, maxConnectionAge -> 0, maxIdleTime -> 0, maxIdleTimeExcessConnections -> 0, maxPoolSize -> 10, maxStatements -> 0, maxStatementsPerConnection -> 0, minPoolSize -> 3, numHelperThreads -> 3, preferredTestQuery -> null, privilegeSpawnedThreads -> false, properties -> {user=******, password=******}, propertyCycle -> 0, statementCacheNumDeferredCloseThreads -> 0, testConnectionOnCheckin -> false, testConnectionOnCheckout -> false, unreturnedConnectionTimeout -> 0, userOverrides -> {}, usesTraditionalReflectiveProxies -> false ]
[INFO] 2018-11-21 11:48:27 INFO org.hibernate.dialect.Dialect.<init>() (Dialect.java:157): HHH000400: Using dialect: org.hibernate.dialect.MySQL55Dialect
[DEBUG] 2018-11-21 11:48:27 DEBUG org.hibernate.type.spi.TypeConfiguration.scope() (TypeConfiguration.java:142): Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@4044fb95] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@aa549e5]
[DEBUG] 2018-11-21 11:48:27 DEBUG org.hibernate.type.spi.TypeConfiguration.scope() (TypeConfiguration.java:147): Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@4044fb95] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@72e34f77]
[INFO] 2018-11-21 11:48:27 INFO org.hibernate.tool.schema.internal.SchemaCreatorImpl.applyImportSources() (SchemaCreatorImpl.java:489): HHH000476: Executing import script 'org.hibernate.tool.schema.internal.exec.ScriptSourceInputNonExistentImpl@27e0f2f5'
[TRACE] 2018-11-21 11:48:27 TRACE org.hibernate.type.spi.TypeConfiguration.sessionFactoryCreated() (TypeConfiguration.java:195): Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@72e34f77] for TypeConfiguration
[INFO] 2018-11-21 11:48:27 INFO org.springframework.context.support.AbstractApplicationContext.doClose() (AbstractApplicationContext.java:984): Closing org.springframework.context.support.GenericApplicationContext@6adede5: startup date [Wed Nov 21 11:48:20 CST 2018]; root of context hierarchy
[TRACE] 2018-11-21 11:48:27 TRACE org.hibernate.type.spi.TypeConfiguration.sessionFactoryClosed() (TypeConfiguration.java:201): Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@72e34f77] for TypeConfiguration
[DEBUG] 2018-11-21 11:48:27 DEBUG org.hibernate.type.spi.TypeConfiguration$Scope.unsetSessionFactory() (TypeConfiguration.java:312): Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@527953ac] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@72e34f77]
[INFO] 2018-11-21 11:49:06 INFO org.springframework.test.context.support.AbstractTestContextBootstrapper.getDefaultTestExecutionListenerClassNames() (AbstractTestContextBootstrapper.java:248): Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
[INFO] 2018-11-21 11:49:06 INFO org.springframework.test.context.support.AbstractTestContextBootstrapper.getTestExecutionListeners() (AbstractTestContextBootstrapper.java:174): Using TestExecutionListeners: [org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@8bd1b6a, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@18be83e4, org.springframework.test.context.support.DirtiesContextTestExecutionListener@cb5822, org.springframework.test.context.transaction.TransactionalTestExecutionListener@4b9e13df, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@2b98378d]
[INFO] 2018-11-21 11:49:06 INFO org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions() (XmlBeanDefinitionReader.java:317): Loading XML bean definitions from class path resource [applicationContext.xml]
[INFO] 2018-11-21 11:49:06 INFO org.springframework.context.support.AbstractApplicationContext.prepareRefresh() (AbstractApplicationContext.java:583): Refreshing org.springframework.context.support.GenericApplicationContext@6adede5: startup date [Wed Nov 21 11:49:06 CST 2018]; root of context hierarchy
[INFO] 2018-11-21 11:49:06 INFO com.mchange.v2.log.MLog$1.run() (MLog.java:124): MLog clients using log4j logging.
[INFO] 2018-11-21 11:49:11 INFO com.mchange.v2.c3p0.C3P0Registry.banner() (C3P0Registry.java:248): Initializing c3p0-0.9.5.2 [built 08-December-2015 22:06:04 -0800; debug? true; trace: 10]
[INFO] 2018-11-21 11:49:12 INFO org.hibernate.Version.logVersion() (Version.java:46): HHH000412: Hibernate Core {5.3.7.Final}
[INFO] 2018-11-21 11:49:12 INFO org.hibernate.cfg.Environment.<clinit>() (Environment.java:213): HHH000206: hibernate.properties not found
[INFO] 2018-11-21 11:49:12 INFO org.hibernate.annotations.common.reflection.java.JavaReflectionManager.<clinit>() (JavaReflectionManager.java:49): HCANN000001: Hibernate Commons Annotations {5.0.4.Final}
[DEBUG] 2018-11-21 11:49:12 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration boolean -> org.hibernate.type.BooleanType@764faa6
[DEBUG] 2018-11-21 11:49:12 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration boolean -> org.hibernate.type.BooleanType@764faa6
[DEBUG] 2018-11-21 11:49:12 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@764faa6
[DEBUG] 2018-11-21 11:49:12 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@5a755cc1
[DEBUG] 2018-11-21 11:49:12 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration true_false -> org.hibernate.type.TrueFalseType@484094a5
[DEBUG] 2018-11-21 11:49:12 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration yes_no -> org.hibernate.type.YesNoType@602e0143
[DEBUG] 2018-11-21 11:49:12 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration byte -> org.hibernate.type.ByteType@34c01041
[DEBUG] 2018-11-21 11:49:12 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration byte -> org.hibernate.type.ByteType@34c01041
[DEBUG] 2018-11-21 11:49:12 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@34c01041
[DEBUG] 2018-11-21 11:49:12 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration character -> org.hibernate.type.CharacterType@41e68d87
[DEBUG] 2018-11-21 11:49:12 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration char -> org.hibernate.type.CharacterType@41e68d87
[DEBUG] 2018-11-21 11:49:12 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@41e68d87
[DEBUG] 2018-11-21 11:49:12 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration short -> org.hibernate.type.ShortType@45312be2
[DEBUG] 2018-11-21 11:49:12 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration short -> org.hibernate.type.ShortType@45312be2
[DEBUG] 2018-11-21 11:49:12 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.lang.Short -> org.hibernate.type.ShortType@45312be2
[DEBUG] 2018-11-21 11:49:12 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration integer -> org.hibernate.type.IntegerType@ab7395e
[DEBUG] 2018-11-21 11:49:12 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration int -> org.hibernate.type.IntegerType@ab7395e
[DEBUG] 2018-11-21 11:49:12 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@ab7395e
[DEBUG] 2018-11-21 11:49:12 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration long -> org.hibernate.type.LongType@64a40280
[DEBUG] 2018-11-21 11:49:12 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration long -> org.hibernate.type.LongType@64a40280
[DEBUG] 2018-11-21 11:49:12 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.lang.Long -> org.hibernate.type.LongType@64a40280
[DEBUG] 2018-11-21 11:49:12 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration float -> org.hibernate.type.FloatType@528c868
[DEBUG] 2018-11-21 11:49:12 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration float -> org.hibernate.type.FloatType@528c868
[DEBUG] 2018-11-21 11:49:12 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.lang.Float -> org.hibernate.type.FloatType@528c868
[DEBUG] 2018-11-21 11:49:12 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration double -> org.hibernate.type.DoubleType@31c7528f
[DEBUG] 2018-11-21 11:49:12 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration double -> org.hibernate.type.DoubleType@31c7528f
[DEBUG] 2018-11-21 11:49:12 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@31c7528f
[DEBUG] 2018-11-21 11:49:12 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@38aa816f
[DEBUG] 2018-11-21 11:49:12 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@38aa816f
[DEBUG] 2018-11-21 11:49:12 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration big_integer -> org.hibernate.type.BigIntegerType@13330ac6
[DEBUG] 2018-11-21 11:49:12 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@13330ac6
[DEBUG] 2018-11-21 11:49:12 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration string -> org.hibernate.type.StringType@4331d187
[DEBUG] 2018-11-21 11:49:12 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.lang.String -> org.hibernate.type.StringType@4331d187
[DEBUG] 2018-11-21 11:49:12 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration nstring -> org.hibernate.type.StringNVarcharType@1608bcbd
[DEBUG] 2018-11-21 11:49:12 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@b2c5e07
[DEBUG] 2018-11-21 11:49:12 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration url -> org.hibernate.type.UrlType@1a20270e
[DEBUG] 2018-11-21 11:49:12 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.net.URL -> org.hibernate.type.UrlType@1a20270e
[DEBUG] 2018-11-21 11:49:12 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration Duration -> org.hibernate.type.DurationType@19e4fcac
[DEBUG] 2018-11-21 11:49:12 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.time.Duration -> org.hibernate.type.DurationType@19e4fcac
[DEBUG] 2018-11-21 11:49:12 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration Instant -> org.hibernate.type.InstantType@31dadd46
[DEBUG] 2018-11-21 11:49:12 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.time.Instant -> org.hibernate.type.InstantType@31dadd46
[DEBUG] 2018-11-21 11:49:12 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@1f010bf0
[DEBUG] 2018-11-21 11:49:12 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@1f010bf0
[DEBUG] 2018-11-21 11:49:12 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration LocalDate -> org.hibernate.type.LocalDateType@177bea38
[DEBUG] 2018-11-21 11:49:12 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@177bea38
[DEBUG] 2018-11-21 11:49:12 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@8ad6665
[DEBUG] 2018-11-21 11:49:12 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@8ad6665
[DEBUG] 2018-11-21 11:49:12 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@41709512
[DEBUG] 2018-11-21 11:49:12 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@41709512
[DEBUG] 2018-11-21 11:49:12 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@5443d039
[DEBUG] 2018-11-21 11:49:12 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@5443d039
[DEBUG] 2018-11-21 11:49:12 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@53de625d
[DEBUG] 2018-11-21 11:49:12 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@53de625d
[DEBUG] 2018-11-21 11:49:12 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration date -> org.hibernate.type.DateType@1fde5d22
[DEBUG] 2018-11-21 11:49:12 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.sql.Date -> org.hibernate.type.DateType@1fde5d22
[DEBUG] 2018-11-21 11:49:12 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration time -> org.hibernate.type.TimeType@7ca20101
[DEBUG] 2018-11-21 11:49:12 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.sql.Time -> org.hibernate.type.TimeType@7ca20101
[DEBUG] 2018-11-21 11:49:12 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration timestamp -> org.hibernate.type.TimestampType@2ea6e30c
[DEBUG] 2018-11-21 11:49:12 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@2ea6e30c
[DEBUG] 2018-11-21 11:49:12 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.util.Date -> org.hibernate.type.TimestampType@2ea6e30c
[DEBUG] 2018-11-21 11:49:12 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@388526fb
[DEBUG] 2018-11-21 11:49:12 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration calendar -> org.hibernate.type.CalendarType@62ef27a8
[DEBUG] 2018-11-21 11:49:12 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@62ef27a8
[DEBUG] 2018-11-21 11:49:12 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@62ef27a8
[DEBUG] 2018-11-21 11:49:12 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@6f3c660a
[DEBUG] 2018-11-21 11:49:12 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration locale -> org.hibernate.type.LocaleType@40238dd0
[DEBUG] 2018-11-21 11:49:12 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@40238dd0
[DEBUG] 2018-11-21 11:49:12 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration currency -> org.hibernate.type.CurrencyType@6a55299e
[DEBUG] 2018-11-21 11:49:12 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@6a55299e
[DEBUG] 2018-11-21 11:49:12 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration timezone -> org.hibernate.type.TimeZoneType@7ac0e420
[DEBUG] 2018-11-21 11:49:12 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@7ac0e420
[DEBUG] 2018-11-21 11:49:12 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration class -> org.hibernate.type.ClassType@503ecb24
[DEBUG] 2018-11-21 11:49:12 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.lang.Class -> org.hibernate.type.ClassType@503ecb24
[DEBUG] 2018-11-21 11:49:12 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@3568f9d2
[DEBUG] 2018-11-21 11:49:12 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@3568f9d2
[DEBUG] 2018-11-21 11:49:12 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@5b1ebf56
[DEBUG] 2018-11-21 11:49:12 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration binary -> org.hibernate.type.BinaryType@4f25b795
[DEBUG] 2018-11-21 11:49:12 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration byte[] -> org.hibernate.type.BinaryType@4f25b795
[DEBUG] 2018-11-21 11:49:12 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration [B -> org.hibernate.type.BinaryType@4f25b795
[DEBUG] 2018-11-21 11:49:12 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@525575
[DEBUG] 2018-11-21 11:49:12 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@525575
[DEBUG] 2018-11-21 11:49:12 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@525575
[DEBUG] 2018-11-21 11:49:12 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration row_version -> org.hibernate.type.RowVersionType@53dbe163
[DEBUG] 2018-11-21 11:49:12 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration image -> org.hibernate.type.ImageType@4748a0f9
[DEBUG] 2018-11-21 11:49:12 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration characters -> org.hibernate.type.CharArrayType@77d67cf3
[DEBUG] 2018-11-21 11:49:12 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration char[] -> org.hibernate.type.CharArrayType@77d67cf3
[DEBUG] 2018-11-21 11:49:12 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration [C -> org.hibernate.type.CharArrayType@77d67cf3
[DEBUG] 2018-11-21 11:49:12 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@5d12a356
[DEBUG] 2018-11-21 11:49:12 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@5d12a356
[DEBUG] 2018-11-21 11:49:12 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@5d12a356
[DEBUG] 2018-11-21 11:49:12 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration text -> org.hibernate.type.TextType@797cf65c
[DEBUG] 2018-11-21 11:49:12 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration ntext -> org.hibernate.type.NTextType@4fad9bb2
[DEBUG] 2018-11-21 11:49:12 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration blob -> org.hibernate.type.BlobType@38831718
[DEBUG] 2018-11-21 11:49:12 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@38831718
[DEBUG] 2018-11-21 11:49:12 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@4982cc36
[DEBUG] 2018-11-21 11:49:12 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration clob -> org.hibernate.type.ClobType@22295ec4
[DEBUG] 2018-11-21 11:49:12 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@22295ec4
[DEBUG] 2018-11-21 11:49:12 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration nclob -> org.hibernate.type.NClobType@5dcd8c7a
[DEBUG] 2018-11-21 11:49:12 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@5dcd8c7a
[DEBUG] 2018-11-21 11:49:12 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@253d9f73
[DEBUG] 2018-11-21 11:49:12 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@41d426b5
[DEBUG] 2018-11-21 11:49:12 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration serializable -> org.hibernate.type.SerializableType@2e2ff723
[DEBUG] 2018-11-21 11:49:12 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration object -> org.hibernate.type.ObjectType@32f232a5
[DEBUG] 2018-11-21 11:49:12 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@32f232a5
[DEBUG] 2018-11-21 11:49:12 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@e8df99a
[DEBUG] 2018-11-21 11:49:12 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@2dc995f4
[DEBUG] 2018-11-21 11:49:12 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@2f40e5db
[DEBUG] 2018-11-21 11:49:12 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@517566b
[DEBUG] 2018-11-21 11:49:12 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@64b73e7a
[DEBUG] 2018-11-21 11:49:12 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@530712d
[DEBUG] 2018-11-21 11:49:12 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@2df6226d
[DEBUG] 2018-11-21 11:49:12 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@12ed9db6
[INFO] 2018-11-21 11:49:12 INFO com.mchange.v2.c3p0.impl.AbstractPoolBackedDataSource.getPoolManager() (AbstractPoolBackedDataSource.java:527): Initializing c3p0 pool... com.mchange.v2.c3p0.ComboPooledDataSource [ acquireIncrement -> 3, acquireRetryAttempts -> 30, acquireRetryDelay -> 1000, autoCommitOnClose -> false, automaticTestTable -> null, breakAfterAcquireFailure -> false, checkoutTimeout -> 0, connectionCustomizerClassName -> null, connectionTesterClassName -> com.mchange.v2.c3p0.impl.DefaultConnectionTester, contextClassLoaderSource -> caller, dataSourceName -> 2rxcez9zej9ps11oy5yzf|5e82df6a, debugUnreturnedConnectionStackTraces -> false, description -> null, driverClass -> com.mysql.jdbc.Driver, extensions -> {}, factoryClassLocation -> null, forceIgnoreUnresolvedTransactions -> false, forceSynchronousCheckins -> false, forceUseNamedDriverClass -> false, identityToken -> 2rxcez9zej9ps11oy5yzf|5e82df6a, idleConnectionTestPeriod -> 0, initialPoolSize -> 5, jdbcUrl -> jdbc:mysql://10.10.10.141/test1, maxAdministrativeTaskTime -> 0, maxConnectionAge -> 0, maxIdleTime -> 0, maxIdleTimeExcessConnections -> 0, maxPoolSize -> 10, maxStatements -> 0, maxStatementsPerConnection -> 0, minPoolSize -> 3, numHelperThreads -> 3, preferredTestQuery -> null, privilegeSpawnedThreads -> false, properties -> {user=******, password=******}, propertyCycle -> 0, statementCacheNumDeferredCloseThreads -> 0, testConnectionOnCheckin -> false, testConnectionOnCheckout -> false, unreturnedConnectionTimeout -> 0, userOverrides -> {}, usesTraditionalReflectiveProxies -> false ]
[INFO] 2018-11-21 11:49:12 INFO org.hibernate.dialect.Dialect.<init>() (Dialect.java:157): HHH000400: Using dialect: org.hibernate.dialect.MySQL55Dialect
[DEBUG] 2018-11-21 11:49:12 DEBUG org.hibernate.type.spi.TypeConfiguration.scope() (TypeConfiguration.java:142): Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@36f48b4] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@5c00384f]
[DEBUG] 2018-11-21 11:49:12 DEBUG org.hibernate.type.spi.TypeConfiguration.scope() (TypeConfiguration.java:147): Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@36f48b4] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@389adf1d]
[INFO] 2018-11-21 11:49:12 INFO org.hibernate.tool.schema.internal.SchemaCreatorImpl.applyImportSources() (SchemaCreatorImpl.java:489): HHH000476: Executing import script 'org.hibernate.tool.schema.internal.exec.ScriptSourceInputNonExistentImpl@6db66836'
[TRACE] 2018-11-21 11:49:12 TRACE org.hibernate.type.spi.TypeConfiguration.sessionFactoryCreated() (TypeConfiguration.java:195): Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@389adf1d] for TypeConfiguration
[INFO] 2018-11-21 11:49:13 INFO org.springframework.context.support.AbstractApplicationContext.doClose() (AbstractApplicationContext.java:984): Closing org.springframework.context.support.GenericApplicationContext@6adede5: startup date [Wed Nov 21 11:49:06 CST 2018]; root of context hierarchy
[TRACE] 2018-11-21 11:49:13 TRACE org.hibernate.type.spi.TypeConfiguration.sessionFactoryClosed() (TypeConfiguration.java:201): Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@389adf1d] for TypeConfiguration
[DEBUG] 2018-11-21 11:49:13 DEBUG org.hibernate.type.spi.TypeConfiguration$Scope.unsetSessionFactory() (TypeConfiguration.java:312): Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@5d1fb697] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@389adf1d]
[INFO] 2018-11-21 11:51:03 INFO org.springframework.test.context.support.AbstractTestContextBootstrapper.getDefaultTestExecutionListenerClassNames() (AbstractTestContextBootstrapper.java:248): Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
[INFO] 2018-11-21 11:51:03 INFO org.springframework.test.context.support.AbstractTestContextBootstrapper.getTestExecutionListeners() (AbstractTestContextBootstrapper.java:174): Using TestExecutionListeners: [org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@8bd1b6a, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@18be83e4, org.springframework.test.context.support.DirtiesContextTestExecutionListener@cb5822, org.springframework.test.context.transaction.TransactionalTestExecutionListener@4b9e13df, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@2b98378d]
[INFO] 2018-11-21 11:51:03 INFO org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions() (XmlBeanDefinitionReader.java:317): Loading XML bean definitions from class path resource [applicationContext.xml]
[INFO] 2018-11-21 11:51:03 INFO org.springframework.context.support.AbstractApplicationContext.prepareRefresh() (AbstractApplicationContext.java:583): Refreshing org.springframework.context.support.GenericApplicationContext@6adede5: startup date [Wed Nov 21 11:51:03 CST 2018]; root of context hierarchy
[INFO] 2018-11-21 11:51:04 INFO com.mchange.v2.log.MLog$1.run() (MLog.java:124): MLog clients using log4j logging.
[INFO] 2018-11-21 11:51:09 INFO com.mchange.v2.c3p0.C3P0Registry.banner() (C3P0Registry.java:248): Initializing c3p0-0.9.5.2 [built 08-December-2015 22:06:04 -0800; debug? true; trace: 10]
[INFO] 2018-11-21 11:51:09 INFO org.hibernate.Version.logVersion() (Version.java:46): HHH000412: Hibernate Core {5.3.7.Final}
[INFO] 2018-11-21 11:51:09 INFO org.hibernate.cfg.Environment.<clinit>() (Environment.java:213): HHH000206: hibernate.properties not found
[INFO] 2018-11-21 11:51:09 INFO org.hibernate.annotations.common.reflection.java.JavaReflectionManager.<clinit>() (JavaReflectionManager.java:49): HCANN000001: Hibernate Commons Annotations {5.0.4.Final}
[DEBUG] 2018-11-21 11:51:09 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration boolean -> org.hibernate.type.BooleanType@63fbfaeb
[DEBUG] 2018-11-21 11:51:09 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration boolean -> org.hibernate.type.BooleanType@63fbfaeb
[DEBUG] 2018-11-21 11:51:09 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@63fbfaeb
[DEBUG] 2018-11-21 11:51:09 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@e57b96d
[DEBUG] 2018-11-21 11:51:09 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration true_false -> org.hibernate.type.TrueFalseType@34c01041
[DEBUG] 2018-11-21 11:51:09 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration yes_no -> org.hibernate.type.YesNoType@36328d33
[DEBUG] 2018-11-21 11:51:09 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration byte -> org.hibernate.type.ByteType@524f3b3a
[DEBUG] 2018-11-21 11:51:09 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration byte -> org.hibernate.type.ByteType@524f3b3a
[DEBUG] 2018-11-21 11:51:09 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@524f3b3a
[DEBUG] 2018-11-21 11:51:09 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration character -> org.hibernate.type.CharacterType@7331196b
[DEBUG] 2018-11-21 11:51:09 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration char -> org.hibernate.type.CharacterType@7331196b
[DEBUG] 2018-11-21 11:51:09 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@7331196b
[DEBUG] 2018-11-21 11:51:09 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration short -> org.hibernate.type.ShortType@e70f13a
[DEBUG] 2018-11-21 11:51:09 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration short -> org.hibernate.type.ShortType@e70f13a
[DEBUG] 2018-11-21 11:51:09 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.lang.Short -> org.hibernate.type.ShortType@e70f13a
[DEBUG] 2018-11-21 11:51:09 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration integer -> org.hibernate.type.IntegerType@d62fe5b
[DEBUG] 2018-11-21 11:51:09 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration int -> org.hibernate.type.IntegerType@d62fe5b
[DEBUG] 2018-11-21 11:51:09 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@d62fe5b
[DEBUG] 2018-11-21 11:51:09 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration long -> org.hibernate.type.LongType@27eedb64
[DEBUG] 2018-11-21 11:51:09 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration long -> org.hibernate.type.LongType@27eedb64
[DEBUG] 2018-11-21 11:51:09 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.lang.Long -> org.hibernate.type.LongType@27eedb64
[DEBUG] 2018-11-21 11:51:09 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration float -> org.hibernate.type.FloatType@2f62ea70
[DEBUG] 2018-11-21 11:51:09 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration float -> org.hibernate.type.FloatType@2f62ea70
[DEBUG] 2018-11-21 11:51:09 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.lang.Float -> org.hibernate.type.FloatType@2f62ea70
[DEBUG] 2018-11-21 11:51:09 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration double -> org.hibernate.type.DoubleType@1b84f475
[DEBUG] 2018-11-21 11:51:09 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration double -> org.hibernate.type.DoubleType@1b84f475
[DEBUG] 2018-11-21 11:51:09 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@1b84f475
[DEBUG] 2018-11-21 11:51:09 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@3ad2e17
[DEBUG] 2018-11-21 11:51:09 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@3ad2e17
[DEBUG] 2018-11-21 11:51:09 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration big_integer -> org.hibernate.type.BigIntegerType@1608bcbd
[DEBUG] 2018-11-21 11:51:09 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@1608bcbd
[DEBUG] 2018-11-21 11:51:09 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration string -> org.hibernate.type.StringType@4426bff1
[DEBUG] 2018-11-21 11:51:09 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.lang.String -> org.hibernate.type.StringType@4426bff1
[DEBUG] 2018-11-21 11:51:09 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration nstring -> org.hibernate.type.StringNVarcharType@1a20270e
[DEBUG] 2018-11-21 11:51:09 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@2f16c6b3
[DEBUG] 2018-11-21 11:51:09 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration url -> org.hibernate.type.UrlType@53941c2f
[DEBUG] 2018-11-21 11:51:09 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.net.URL -> org.hibernate.type.UrlType@53941c2f
[DEBUG] 2018-11-21 11:51:09 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration Duration -> org.hibernate.type.DurationType@65a15628
[DEBUG] 2018-11-21 11:51:09 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.time.Duration -> org.hibernate.type.DurationType@65a15628
[DEBUG] 2018-11-21 11:51:09 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration Instant -> org.hibernate.type.InstantType@1921ad94
[DEBUG] 2018-11-21 11:51:09 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.time.Instant -> org.hibernate.type.InstantType@1921ad94
[DEBUG] 2018-11-21 11:51:09 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@2631f68c
[DEBUG] 2018-11-21 11:51:09 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@2631f68c
[DEBUG] 2018-11-21 11:51:09 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration LocalDate -> org.hibernate.type.LocalDateType@68b32e3e
[DEBUG] 2018-11-21 11:51:09 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@68b32e3e
[DEBUG] 2018-11-21 11:51:09 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@4f9a2c08
[DEBUG] 2018-11-21 11:51:09 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@4f9a2c08
[DEBUG] 2018-11-21 11:51:09 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@48e92c5c
[DEBUG] 2018-11-21 11:51:09 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@48e92c5c
[DEBUG] 2018-11-21 11:51:09 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@34f22f9d
[DEBUG] 2018-11-21 11:51:09 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@34f22f9d
[DEBUG] 2018-11-21 11:51:09 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@5dcb4f5f
[DEBUG] 2018-11-21 11:51:09 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@5dcb4f5f
[DEBUG] 2018-11-21 11:51:09 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration date -> org.hibernate.type.DateType@3a5ecce3
[DEBUG] 2018-11-21 11:51:09 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.sql.Date -> org.hibernate.type.DateType@3a5ecce3
[DEBUG] 2018-11-21 11:51:09 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration time -> org.hibernate.type.TimeType@388526fb
[DEBUG] 2018-11-21 11:51:09 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.sql.Time -> org.hibernate.type.TimeType@388526fb
[DEBUG] 2018-11-21 11:51:09 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration timestamp -> org.hibernate.type.TimestampType@62ef27a8
[DEBUG] 2018-11-21 11:51:09 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@62ef27a8
[DEBUG] 2018-11-21 11:51:09 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.util.Date -> org.hibernate.type.TimestampType@62ef27a8
[DEBUG] 2018-11-21 11:51:09 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@6f3c660a
[DEBUG] 2018-11-21 11:51:09 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration calendar -> org.hibernate.type.CalendarType@40238dd0
[DEBUG] 2018-11-21 11:51:09 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@40238dd0
[DEBUG] 2018-11-21 11:51:09 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@40238dd0
[DEBUG] 2018-11-21 11:51:09 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@dbd8e44
[DEBUG] 2018-11-21 11:51:09 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration locale -> org.hibernate.type.LocaleType@79517588
[DEBUG] 2018-11-21 11:51:09 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@79517588
[DEBUG] 2018-11-21 11:51:09 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration currency -> org.hibernate.type.CurrencyType@3da30852
[DEBUG] 2018-11-21 11:51:09 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@3da30852
[DEBUG] 2018-11-21 11:51:09 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration timezone -> org.hibernate.type.TimeZoneType@5143c662
[DEBUG] 2018-11-21 11:51:09 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@5143c662
[DEBUG] 2018-11-21 11:51:09 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration class -> org.hibernate.type.ClassType@5b1ebf56
[DEBUG] 2018-11-21 11:51:09 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.lang.Class -> org.hibernate.type.ClassType@5b1ebf56
[DEBUG] 2018-11-21 11:51:09 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@4f25b795
[DEBUG] 2018-11-21 11:51:09 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@4f25b795
[DEBUG] 2018-11-21 11:51:09 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@16414e40
[DEBUG] 2018-11-21 11:51:09 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration binary -> org.hibernate.type.BinaryType@78383390
[DEBUG] 2018-11-21 11:51:09 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration byte[] -> org.hibernate.type.BinaryType@78383390
[DEBUG] 2018-11-21 11:51:09 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration [B -> org.hibernate.type.BinaryType@78383390
[DEBUG] 2018-11-21 11:51:09 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@4748a0f9
[DEBUG] 2018-11-21 11:51:09 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@4748a0f9
[DEBUG] 2018-11-21 11:51:09 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@4748a0f9
[DEBUG] 2018-11-21 11:51:09 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration row_version -> org.hibernate.type.RowVersionType@77d67cf3
[DEBUG] 2018-11-21 11:51:09 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration image -> org.hibernate.type.ImageType@6ee6f53
[DEBUG] 2018-11-21 11:51:09 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration characters -> org.hibernate.type.CharArrayType@797cf65c
[DEBUG] 2018-11-21 11:51:09 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration char[] -> org.hibernate.type.CharArrayType@797cf65c
[DEBUG] 2018-11-21 11:51:09 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration [C -> org.hibernate.type.CharArrayType@797cf65c
[DEBUG] 2018-11-21 11:51:09 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@7862f56
[DEBUG] 2018-11-21 11:51:09 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@7862f56
[DEBUG] 2018-11-21 11:51:09 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@7862f56
[DEBUG] 2018-11-21 11:51:09 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration text -> org.hibernate.type.TextType@22d7b4f8
[DEBUG] 2018-11-21 11:51:09 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration ntext -> org.hibernate.type.NTextType@2c1156a7
[DEBUG] 2018-11-21 11:51:09 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration blob -> org.hibernate.type.BlobType@71529963
[DEBUG] 2018-11-21 11:51:09 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@71529963
[DEBUG] 2018-11-21 11:51:09 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@5adb0db3
[DEBUG] 2018-11-21 11:51:09 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration clob -> org.hibernate.type.ClobType@2250b9f2
[DEBUG] 2018-11-21 11:51:09 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@2250b9f2
[DEBUG] 2018-11-21 11:51:09 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration nclob -> org.hibernate.type.NClobType@f316aeb
[DEBUG] 2018-11-21 11:51:09 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@f316aeb
[DEBUG] 2018-11-21 11:51:09 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@5dd1c9f2
[DEBUG] 2018-11-21 11:51:09 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@324a0017
[DEBUG] 2018-11-21 11:51:09 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration serializable -> org.hibernate.type.SerializableType@22bac7bc
[DEBUG] 2018-11-21 11:51:09 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration object -> org.hibernate.type.ObjectType@530712d
[DEBUG] 2018-11-21 11:51:09 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@530712d
[DEBUG] 2018-11-21 11:51:09 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@4ff4357f
[DEBUG] 2018-11-21 11:51:09 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@49cb9cb5
[DEBUG] 2018-11-21 11:51:09 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@55322aab
[DEBUG] 2018-11-21 11:51:09 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@2b4c1d96
[DEBUG] 2018-11-21 11:51:09 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@45fd9a4d
[DEBUG] 2018-11-21 11:51:09 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@50468873
[DEBUG] 2018-11-21 11:51:09 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@146587a2
[DEBUG] 2018-11-21 11:51:09 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@5f0e9815
[INFO] 2018-11-21 11:51:09 INFO com.mchange.v2.c3p0.impl.AbstractPoolBackedDataSource.getPoolManager() (AbstractPoolBackedDataSource.java:527): Initializing c3p0 pool... com.mchange.v2.c3p0.ComboPooledDataSource [ acquireIncrement -> 3, acquireRetryAttempts -> 30, acquireRetryDelay -> 1000, autoCommitOnClose -> false, automaticTestTable -> null, breakAfterAcquireFailure -> false, checkoutTimeout -> 0, connectionCustomizerClassName -> null, connectionTesterClassName -> com.mchange.v2.c3p0.impl.DefaultConnectionTester, contextClassLoaderSource -> caller, dataSourceName -> 2rxcez9zejc8dyy9hdyc|5e82df6a, debugUnreturnedConnectionStackTraces -> false, description -> null, driverClass -> com.mysql.jdbc.Driver, extensions -> {}, factoryClassLocation -> null, forceIgnoreUnresolvedTransactions -> false, forceSynchronousCheckins -> false, forceUseNamedDriverClass -> false, identityToken -> 2rxcez9zejc8dyy9hdyc|5e82df6a, idleConnectionTestPeriod -> 0, initialPoolSize -> 5, jdbcUrl -> jdbc:mysql://10.10.10.141/test1, maxAdministrativeTaskTime -> 0, maxConnectionAge -> 0, maxIdleTime -> 0, maxIdleTimeExcessConnections -> 0, maxPoolSize -> 10, maxStatements -> 0, maxStatementsPerConnection -> 0, minPoolSize -> 3, numHelperThreads -> 3, preferredTestQuery -> null, privilegeSpawnedThreads -> false, properties -> {user=******, password=******}, propertyCycle -> 0, statementCacheNumDeferredCloseThreads -> 0, testConnectionOnCheckin -> false, testConnectionOnCheckout -> false, unreturnedConnectionTimeout -> 0, userOverrides -> {}, usesTraditionalReflectiveProxies -> false ]
[INFO] 2018-11-21 11:51:10 INFO org.hibernate.dialect.Dialect.<init>() (Dialect.java:157): HHH000400: Using dialect: org.hibernate.dialect.MySQL55Dialect
[DEBUG] 2018-11-21 11:51:10 DEBUG org.hibernate.type.spi.TypeConfiguration.scope() (TypeConfiguration.java:142): Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@1cbf6e72] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@6aecbb8d]
[DEBUG] 2018-11-21 11:51:10 DEBUG org.hibernate.type.spi.TypeConfiguration.scope() (TypeConfiguration.java:147): Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@1cbf6e72] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@72e34f77]
[INFO] 2018-11-21 11:51:10 INFO org.hibernate.tool.schema.internal.SchemaCreatorImpl.applyImportSources() (SchemaCreatorImpl.java:489): HHH000476: Executing import script 'org.hibernate.tool.schema.internal.exec.ScriptSourceInputNonExistentImpl@e24ddd0'
[TRACE] 2018-11-21 11:51:10 TRACE org.hibernate.type.spi.TypeConfiguration.sessionFactoryCreated() (TypeConfiguration.java:195): Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@72e34f77] for TypeConfiguration
[INFO] 2018-11-21 11:51:10 INFO org.springframework.context.support.AbstractApplicationContext.doClose() (AbstractApplicationContext.java:984): Closing org.springframework.context.support.GenericApplicationContext@6adede5: startup date [Wed Nov 21 11:51:03 CST 2018]; root of context hierarchy
[TRACE] 2018-11-21 11:51:10 TRACE org.hibernate.type.spi.TypeConfiguration.sessionFactoryClosed() (TypeConfiguration.java:201): Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@72e34f77] for TypeConfiguration
[DEBUG] 2018-11-21 11:51:10 DEBUG org.hibernate.type.spi.TypeConfiguration$Scope.unsetSessionFactory() (TypeConfiguration.java:312): Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@230e0cc5] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@72e34f77]
[INFO] 2018-11-21 11:54:47 INFO org.springframework.test.context.support.AbstractTestContextBootstrapper.getDefaultTestExecutionListenerClassNames() (AbstractTestContextBootstrapper.java:248): Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
[INFO] 2018-11-21 11:54:48 INFO org.springframework.test.context.support.AbstractTestContextBootstrapper.getTestExecutionListeners() (AbstractTestContextBootstrapper.java:174): Using TestExecutionListeners: [org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@8bd1b6a, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@18be83e4, org.springframework.test.context.support.DirtiesContextTestExecutionListener@cb5822, org.springframework.test.context.transaction.TransactionalTestExecutionListener@4b9e13df, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@2b98378d]
[INFO] 2018-11-21 11:54:48 INFO org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions() (XmlBeanDefinitionReader.java:317): Loading XML bean definitions from class path resource [applicationContext.xml]
[INFO] 2018-11-21 11:54:48 INFO org.springframework.context.support.AbstractApplicationContext.prepareRefresh() (AbstractApplicationContext.java:583): Refreshing org.springframework.context.support.GenericApplicationContext@6adede5: startup date [Wed Nov 21 11:54:48 CST 2018]; root of context hierarchy
[INFO] 2018-11-21 11:54:48 INFO com.mchange.v2.log.MLog$1.run() (MLog.java:124): MLog clients using log4j logging.
[INFO] 2018-11-21 11:54:53 INFO com.mchange.v2.c3p0.C3P0Registry.banner() (C3P0Registry.java:248): Initializing c3p0-0.9.5.2 [built 08-December-2015 22:06:04 -0800; debug? true; trace: 10]
[INFO] 2018-11-21 11:54:53 INFO org.hibernate.Version.logVersion() (Version.java:46): HHH000412: Hibernate Core {5.3.7.Final}
[INFO] 2018-11-21 11:54:53 INFO org.hibernate.cfg.Environment.<clinit>() (Environment.java:213): HHH000206: hibernate.properties not found
[WARN] 2018-11-21 11:54:54 WARN org.springframework.context.support.AbstractApplicationContext.refresh() (AbstractApplicationContext.java:551): Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sessionFactory' defined in class path resource [applicationContext.xml]: Invocation of init method failed; nested exception is java.io.FileNotFoundException: class path resource [zzc/spring/hibernate/entities/Account.hbm.xml] cannot be opened because it does not exist
[ERROR] 2018-11-21 11:54:54 ERROR org.springframework.test.context.TestContextManager.prepareTestInstance() (TestContextManager.java:234): Caught exception while allowing TestExecutionListener [org.springframework.test.context.support.DependencyInjectionTestExecutionListener@18be83e4] to prepare test instance [zzc.spring.hibernate.SpringHibernateTests@6d7fc27]
java.lang.IllegalStateException: Failed to load ApplicationContext
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:124)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:83)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.injectDependencies(DependencyInjectionTestExecutionListener.java:117)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:83)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:230)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:228)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:287)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:289)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:247)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:94)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:191)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137)
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68)
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47)
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242)
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70)
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sessionFactory' defined in class path resource [applicationContext.xml]: Invocation of init method failed; nested exception is java.io.FileNotFoundException: class path resource [zzc/spring/hibernate/entities/Account.hbm.xml] cannot be opened because it does not exist
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1631)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:553)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:481)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:312)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:308)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:742)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:867)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:543)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:128)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:60)
	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.delegateLoading(AbstractDelegatingSmartContextLoader.java:281)
	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.loadContext(AbstractDelegatingSmartContextLoader.java:249)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:98)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:116)
	... 24 more
Caused by: java.io.FileNotFoundException: class path resource [zzc/spring/hibernate/entities/Account.hbm.xml] cannot be opened because it does not exist
	at org.springframework.core.io.ClassPathResource.getInputStream(ClassPathResource.java:172)
	at org.springframework.orm.hibernate5.LocalSessionFactoryBean.afterPropertiesSet(LocalSessionFactoryBean.java:412)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1689)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1627)
	... 39 more
[INFO] 2018-11-21 11:56:42 INFO org.springframework.test.context.support.AbstractTestContextBootstrapper.getDefaultTestExecutionListenerClassNames() (AbstractTestContextBootstrapper.java:248): Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
[INFO] 2018-11-21 11:56:42 INFO org.springframework.test.context.support.AbstractTestContextBootstrapper.getTestExecutionListeners() (AbstractTestContextBootstrapper.java:174): Using TestExecutionListeners: [org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@8bd1b6a, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@18be83e4, org.springframework.test.context.support.DirtiesContextTestExecutionListener@cb5822, org.springframework.test.context.transaction.TransactionalTestExecutionListener@4b9e13df, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@2b98378d]
[INFO] 2018-11-21 11:56:42 INFO org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions() (XmlBeanDefinitionReader.java:317): Loading XML bean definitions from class path resource [applicationContext.xml]
[INFO] 2018-11-21 11:56:42 INFO org.springframework.context.support.AbstractApplicationContext.prepareRefresh() (AbstractApplicationContext.java:583): Refreshing org.springframework.context.support.GenericApplicationContext@6adede5: startup date [Wed Nov 21 11:56:42 CST 2018]; root of context hierarchy
[INFO] 2018-11-21 11:56:42 INFO com.mchange.v2.log.MLog$1.run() (MLog.java:124): MLog clients using log4j logging.
[INFO] 2018-11-21 11:56:48 INFO com.mchange.v2.c3p0.C3P0Registry.banner() (C3P0Registry.java:248): Initializing c3p0-0.9.5.2 [built 08-December-2015 22:06:04 -0800; debug? true; trace: 10]
[INFO] 2018-11-21 11:56:48 INFO org.hibernate.Version.logVersion() (Version.java:46): HHH000412: Hibernate Core {5.3.7.Final}
[INFO] 2018-11-21 11:56:48 INFO org.hibernate.cfg.Environment.<clinit>() (Environment.java:213): HHH000206: hibernate.properties not found
[INFO] 2018-11-21 11:56:48 INFO org.hibernate.annotations.common.reflection.java.JavaReflectionManager.<clinit>() (JavaReflectionManager.java:49): HCANN000001: Hibernate Commons Annotations {5.0.4.Final}
[DEBUG] 2018-11-21 11:56:48 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration boolean -> org.hibernate.type.BooleanType@63fbfaeb
[DEBUG] 2018-11-21 11:56:48 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration boolean -> org.hibernate.type.BooleanType@63fbfaeb
[DEBUG] 2018-11-21 11:56:48 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@63fbfaeb
[DEBUG] 2018-11-21 11:56:48 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@e57b96d
[DEBUG] 2018-11-21 11:56:48 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration true_false -> org.hibernate.type.TrueFalseType@34c01041
[DEBUG] 2018-11-21 11:56:48 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration yes_no -> org.hibernate.type.YesNoType@36328d33
[DEBUG] 2018-11-21 11:56:48 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration byte -> org.hibernate.type.ByteType@524f3b3a
[DEBUG] 2018-11-21 11:56:48 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration byte -> org.hibernate.type.ByteType@524f3b3a
[DEBUG] 2018-11-21 11:56:48 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@524f3b3a
[DEBUG] 2018-11-21 11:56:48 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration character -> org.hibernate.type.CharacterType@7331196b
[DEBUG] 2018-11-21 11:56:48 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration char -> org.hibernate.type.CharacterType@7331196b
[DEBUG] 2018-11-21 11:56:48 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@7331196b
[DEBUG] 2018-11-21 11:56:48 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration short -> org.hibernate.type.ShortType@e70f13a
[DEBUG] 2018-11-21 11:56:48 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration short -> org.hibernate.type.ShortType@e70f13a
[DEBUG] 2018-11-21 11:56:48 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.lang.Short -> org.hibernate.type.ShortType@e70f13a
[DEBUG] 2018-11-21 11:56:48 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration integer -> org.hibernate.type.IntegerType@d62fe5b
[DEBUG] 2018-11-21 11:56:48 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration int -> org.hibernate.type.IntegerType@d62fe5b
[DEBUG] 2018-11-21 11:56:48 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@d62fe5b
[DEBUG] 2018-11-21 11:56:48 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration long -> org.hibernate.type.LongType@27eedb64
[DEBUG] 2018-11-21 11:56:48 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration long -> org.hibernate.type.LongType@27eedb64
[DEBUG] 2018-11-21 11:56:48 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.lang.Long -> org.hibernate.type.LongType@27eedb64
[DEBUG] 2018-11-21 11:56:48 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration float -> org.hibernate.type.FloatType@2f62ea70
[DEBUG] 2018-11-21 11:56:48 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration float -> org.hibernate.type.FloatType@2f62ea70
[DEBUG] 2018-11-21 11:56:48 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.lang.Float -> org.hibernate.type.FloatType@2f62ea70
[DEBUG] 2018-11-21 11:56:48 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration double -> org.hibernate.type.DoubleType@1b84f475
[DEBUG] 2018-11-21 11:56:48 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration double -> org.hibernate.type.DoubleType@1b84f475
[DEBUG] 2018-11-21 11:56:48 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@1b84f475
[DEBUG] 2018-11-21 11:56:48 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@3ad2e17
[DEBUG] 2018-11-21 11:56:48 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@3ad2e17
[DEBUG] 2018-11-21 11:56:48 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration big_integer -> org.hibernate.type.BigIntegerType@1608bcbd
[DEBUG] 2018-11-21 11:56:48 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@1608bcbd
[DEBUG] 2018-11-21 11:56:48 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration string -> org.hibernate.type.StringType@4426bff1
[DEBUG] 2018-11-21 11:56:48 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.lang.String -> org.hibernate.type.StringType@4426bff1
[DEBUG] 2018-11-21 11:56:48 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration nstring -> org.hibernate.type.StringNVarcharType@1a20270e
[DEBUG] 2018-11-21 11:56:48 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@2f16c6b3
[DEBUG] 2018-11-21 11:56:48 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration url -> org.hibernate.type.UrlType@53941c2f
[DEBUG] 2018-11-21 11:56:48 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.net.URL -> org.hibernate.type.UrlType@53941c2f
[DEBUG] 2018-11-21 11:56:48 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration Duration -> org.hibernate.type.DurationType@65a15628
[DEBUG] 2018-11-21 11:56:48 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.time.Duration -> org.hibernate.type.DurationType@65a15628
[DEBUG] 2018-11-21 11:56:48 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration Instant -> org.hibernate.type.InstantType@1921ad94
[DEBUG] 2018-11-21 11:56:48 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.time.Instant -> org.hibernate.type.InstantType@1921ad94
[DEBUG] 2018-11-21 11:56:48 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@2631f68c
[DEBUG] 2018-11-21 11:56:48 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@2631f68c
[DEBUG] 2018-11-21 11:56:48 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration LocalDate -> org.hibernate.type.LocalDateType@68b32e3e
[DEBUG] 2018-11-21 11:56:48 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@68b32e3e
[DEBUG] 2018-11-21 11:56:48 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@4f9a2c08
[DEBUG] 2018-11-21 11:56:48 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@4f9a2c08
[DEBUG] 2018-11-21 11:56:48 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@48e92c5c
[DEBUG] 2018-11-21 11:56:48 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@48e92c5c
[DEBUG] 2018-11-21 11:56:48 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@34f22f9d
[DEBUG] 2018-11-21 11:56:48 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@34f22f9d
[DEBUG] 2018-11-21 11:56:48 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@5dcb4f5f
[DEBUG] 2018-11-21 11:56:48 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@5dcb4f5f
[DEBUG] 2018-11-21 11:56:48 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration date -> org.hibernate.type.DateType@3a5ecce3
[DEBUG] 2018-11-21 11:56:48 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.sql.Date -> org.hibernate.type.DateType@3a5ecce3
[DEBUG] 2018-11-21 11:56:48 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration time -> org.hibernate.type.TimeType@388526fb
[DEBUG] 2018-11-21 11:56:48 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.sql.Time -> org.hibernate.type.TimeType@388526fb
[DEBUG] 2018-11-21 11:56:48 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration timestamp -> org.hibernate.type.TimestampType@62ef27a8
[DEBUG] 2018-11-21 11:56:48 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@62ef27a8
[DEBUG] 2018-11-21 11:56:48 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.util.Date -> org.hibernate.type.TimestampType@62ef27a8
[DEBUG] 2018-11-21 11:56:48 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@6f3c660a
[DEBUG] 2018-11-21 11:56:48 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration calendar -> org.hibernate.type.CalendarType@40238dd0
[DEBUG] 2018-11-21 11:56:48 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@40238dd0
[DEBUG] 2018-11-21 11:56:48 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@40238dd0
[DEBUG] 2018-11-21 11:56:48 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@dbd8e44
[DEBUG] 2018-11-21 11:56:48 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration locale -> org.hibernate.type.LocaleType@79517588
[DEBUG] 2018-11-21 11:56:48 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@79517588
[DEBUG] 2018-11-21 11:56:48 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration currency -> org.hibernate.type.CurrencyType@3da30852
[DEBUG] 2018-11-21 11:56:48 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@3da30852
[DEBUG] 2018-11-21 11:56:48 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration timezone -> org.hibernate.type.TimeZoneType@5143c662
[DEBUG] 2018-11-21 11:56:48 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@5143c662
[DEBUG] 2018-11-21 11:56:48 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration class -> org.hibernate.type.ClassType@5b1ebf56
[DEBUG] 2018-11-21 11:56:48 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.lang.Class -> org.hibernate.type.ClassType@5b1ebf56
[DEBUG] 2018-11-21 11:56:48 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@4f25b795
[DEBUG] 2018-11-21 11:56:48 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@4f25b795
[DEBUG] 2018-11-21 11:56:48 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@16414e40
[DEBUG] 2018-11-21 11:56:48 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration binary -> org.hibernate.type.BinaryType@78383390
[DEBUG] 2018-11-21 11:56:48 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration byte[] -> org.hibernate.type.BinaryType@78383390
[DEBUG] 2018-11-21 11:56:48 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration [B -> org.hibernate.type.BinaryType@78383390
[DEBUG] 2018-11-21 11:56:48 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@4748a0f9
[DEBUG] 2018-11-21 11:56:48 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@4748a0f9
[DEBUG] 2018-11-21 11:56:48 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@4748a0f9
[DEBUG] 2018-11-21 11:56:48 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration row_version -> org.hibernate.type.RowVersionType@77d67cf3
[DEBUG] 2018-11-21 11:56:48 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration image -> org.hibernate.type.ImageType@6ee6f53
[DEBUG] 2018-11-21 11:56:48 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration characters -> org.hibernate.type.CharArrayType@797cf65c
[DEBUG] 2018-11-21 11:56:48 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration char[] -> org.hibernate.type.CharArrayType@797cf65c
[DEBUG] 2018-11-21 11:56:48 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration [C -> org.hibernate.type.CharArrayType@797cf65c
[DEBUG] 2018-11-21 11:56:48 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@7862f56
[DEBUG] 2018-11-21 11:56:48 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@7862f56
[DEBUG] 2018-11-21 11:56:48 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@7862f56
[DEBUG] 2018-11-21 11:56:48 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration text -> org.hibernate.type.TextType@22d7b4f8
[DEBUG] 2018-11-21 11:56:48 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration ntext -> org.hibernate.type.NTextType@2c1156a7
[DEBUG] 2018-11-21 11:56:48 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration blob -> org.hibernate.type.BlobType@71529963
[DEBUG] 2018-11-21 11:56:48 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@71529963
[DEBUG] 2018-11-21 11:56:48 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@5adb0db3
[DEBUG] 2018-11-21 11:56:48 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration clob -> org.hibernate.type.ClobType@2250b9f2
[DEBUG] 2018-11-21 11:56:48 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@2250b9f2
[DEBUG] 2018-11-21 11:56:48 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration nclob -> org.hibernate.type.NClobType@f316aeb
[DEBUG] 2018-11-21 11:56:48 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@f316aeb
[DEBUG] 2018-11-21 11:56:48 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@5dd1c9f2
[DEBUG] 2018-11-21 11:56:48 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@324a0017
[DEBUG] 2018-11-21 11:56:48 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration serializable -> org.hibernate.type.SerializableType@22bac7bc
[DEBUG] 2018-11-21 11:56:48 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration object -> org.hibernate.type.ObjectType@530712d
[DEBUG] 2018-11-21 11:56:48 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@530712d
[DEBUG] 2018-11-21 11:56:48 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@4ff4357f
[DEBUG] 2018-11-21 11:56:48 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@49cb9cb5
[DEBUG] 2018-11-21 11:56:48 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@55322aab
[DEBUG] 2018-11-21 11:56:48 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@2b4c1d96
[DEBUG] 2018-11-21 11:56:48 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@45fd9a4d
[DEBUG] 2018-11-21 11:56:48 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@50468873
[DEBUG] 2018-11-21 11:56:48 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@146587a2
[DEBUG] 2018-11-21 11:56:48 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@5f0e9815
[INFO] 2018-11-21 11:56:48 INFO com.mchange.v2.c3p0.impl.AbstractPoolBackedDataSource.getPoolManager() (AbstractPoolBackedDataSource.java:527): Initializing c3p0 pool... com.mchange.v2.c3p0.ComboPooledDataSource [ acquireIncrement -> 3, acquireRetryAttempts -> 30, acquireRetryDelay -> 1000, autoCommitOnClose -> false, automaticTestTable -> null, breakAfterAcquireFailure -> false, checkoutTimeout -> 0, connectionCustomizerClassName -> null, connectionTesterClassName -> com.mchange.v2.c3p0.impl.DefaultConnectionTester, contextClassLoaderSource -> caller, dataSourceName -> 2rxcez9zejjhuevj5kt8|5e82df6a, debugUnreturnedConnectionStackTraces -> false, description -> null, driverClass -> com.mysql.jdbc.Driver, extensions -> {}, factoryClassLocation -> null, forceIgnoreUnresolvedTransactions -> false, forceSynchronousCheckins -> false, forceUseNamedDriverClass -> false, identityToken -> 2rxcez9zejjhuevj5kt8|5e82df6a, idleConnectionTestPeriod -> 0, initialPoolSize -> 5, jdbcUrl -> jdbc:mysql://10.10.10.141/test1, maxAdministrativeTaskTime -> 0, maxConnectionAge -> 0, maxIdleTime -> 0, maxIdleTimeExcessConnections -> 0, maxPoolSize -> 10, maxStatements -> 0, maxStatementsPerConnection -> 0, minPoolSize -> 3, numHelperThreads -> 3, preferredTestQuery -> null, privilegeSpawnedThreads -> false, properties -> {user=******, password=******}, propertyCycle -> 0, statementCacheNumDeferredCloseThreads -> 0, testConnectionOnCheckin -> false, testConnectionOnCheckout -> false, unreturnedConnectionTimeout -> 0, userOverrides -> {}, usesTraditionalReflectiveProxies -> false ]
[INFO] 2018-11-21 11:56:49 INFO org.hibernate.dialect.Dialect.<init>() (Dialect.java:157): HHH000400: Using dialect: org.hibernate.dialect.MySQL55Dialect
[DEBUG] 2018-11-21 11:56:49 DEBUG org.hibernate.type.spi.TypeConfiguration.scope() (TypeConfiguration.java:142): Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@1cbf6e72] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@6aecbb8d]
[DEBUG] 2018-11-21 11:56:49 DEBUG org.hibernate.type.spi.TypeConfiguration.scope() (TypeConfiguration.java:147): Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@1cbf6e72] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@72e34f77]
[INFO] 2018-11-21 11:56:49 INFO org.hibernate.tool.schema.internal.SchemaCreatorImpl.applyImportSources() (SchemaCreatorImpl.java:489): HHH000476: Executing import script 'org.hibernate.tool.schema.internal.exec.ScriptSourceInputNonExistentImpl@e24ddd0'
[TRACE] 2018-11-21 11:56:49 TRACE org.hibernate.type.spi.TypeConfiguration.sessionFactoryCreated() (TypeConfiguration.java:195): Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@72e34f77] for TypeConfiguration
[INFO] 2018-11-21 11:56:49 INFO org.springframework.context.support.AbstractApplicationContext.doClose() (AbstractApplicationContext.java:984): Closing org.springframework.context.support.GenericApplicationContext@6adede5: startup date [Wed Nov 21 11:56:42 CST 2018]; root of context hierarchy
[TRACE] 2018-11-21 11:56:49 TRACE org.hibernate.type.spi.TypeConfiguration.sessionFactoryClosed() (TypeConfiguration.java:201): Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@72e34f77] for TypeConfiguration
[DEBUG] 2018-11-21 11:56:49 DEBUG org.hibernate.type.spi.TypeConfiguration$Scope.unsetSessionFactory() (TypeConfiguration.java:312): Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@230e0cc5] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@72e34f77]
[INFO] 2018-11-21 12:25:32 INFO org.hibernate.Version.logVersion() (Version.java:46): HHH000412: Hibernate Core {5.3.7.Final}
[INFO] 2018-11-21 12:25:32 INFO org.hibernate.cfg.Environment.<clinit>() (Environment.java:213): HHH000206: hibernate.properties not found
[INFO] 2018-11-21 12:25:33 INFO org.hibernate.annotations.common.reflection.java.JavaReflectionManager.<clinit>() (JavaReflectionManager.java:49): HCANN000001: Hibernate Commons Annotations {5.0.4.Final}
[DEBUG] 2018-11-21 12:25:33 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration boolean -> org.hibernate.type.BooleanType@662ac478
[DEBUG] 2018-11-21 12:25:33 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration boolean -> org.hibernate.type.BooleanType@662ac478
[DEBUG] 2018-11-21 12:25:33 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@662ac478
[DEBUG] 2018-11-21 12:25:33 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@477b4cdf
[DEBUG] 2018-11-21 12:25:33 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration true_false -> org.hibernate.type.TrueFalseType@233795b6
[DEBUG] 2018-11-21 12:25:33 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration yes_no -> org.hibernate.type.YesNoType@1e800aaa
[DEBUG] 2018-11-21 12:25:33 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration byte -> org.hibernate.type.ByteType@3b0090a4
[DEBUG] 2018-11-21 12:25:33 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration byte -> org.hibernate.type.ByteType@3b0090a4
[DEBUG] 2018-11-21 12:25:33 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@3b0090a4
[DEBUG] 2018-11-21 12:25:33 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration character -> org.hibernate.type.CharacterType@62ddbd7e
[DEBUG] 2018-11-21 12:25:33 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration char -> org.hibernate.type.CharacterType@62ddbd7e
[DEBUG] 2018-11-21 12:25:33 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@62ddbd7e
[DEBUG] 2018-11-21 12:25:33 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration short -> org.hibernate.type.ShortType@489115ef
[DEBUG] 2018-11-21 12:25:33 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration short -> org.hibernate.type.ShortType@489115ef
[DEBUG] 2018-11-21 12:25:33 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.lang.Short -> org.hibernate.type.ShortType@489115ef
[DEBUG] 2018-11-21 12:25:33 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration integer -> org.hibernate.type.IntegerType@4e08711f
[DEBUG] 2018-11-21 12:25:33 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration int -> org.hibernate.type.IntegerType@4e08711f
[DEBUG] 2018-11-21 12:25:33 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@4e08711f
[DEBUG] 2018-11-21 12:25:33 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration long -> org.hibernate.type.LongType@40005471
[DEBUG] 2018-11-21 12:25:33 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration long -> org.hibernate.type.LongType@40005471
[DEBUG] 2018-11-21 12:25:33 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.lang.Long -> org.hibernate.type.LongType@40005471
[DEBUG] 2018-11-21 12:25:33 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration float -> org.hibernate.type.FloatType@1c1bbc4e
[DEBUG] 2018-11-21 12:25:33 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration float -> org.hibernate.type.FloatType@1c1bbc4e
[DEBUG] 2018-11-21 12:25:33 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.lang.Float -> org.hibernate.type.FloatType@1c1bbc4e
[DEBUG] 2018-11-21 12:25:33 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration double -> org.hibernate.type.DoubleType@7a8c8dcf
[DEBUG] 2018-11-21 12:25:33 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration double -> org.hibernate.type.DoubleType@7a8c8dcf
[DEBUG] 2018-11-21 12:25:33 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@7a8c8dcf
[DEBUG] 2018-11-21 12:25:33 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@2a5c8d3f
[DEBUG] 2018-11-21 12:25:33 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@2a5c8d3f
[DEBUG] 2018-11-21 12:25:33 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration big_integer -> org.hibernate.type.BigIntegerType@2925bf5b
[DEBUG] 2018-11-21 12:25:33 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@2925bf5b
[DEBUG] 2018-11-21 12:25:33 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration string -> org.hibernate.type.StringType@6ad82709
[DEBUG] 2018-11-21 12:25:33 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.lang.String -> org.hibernate.type.StringType@6ad82709
[DEBUG] 2018-11-21 12:25:33 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration nstring -> org.hibernate.type.StringNVarcharType@8297b3a
[DEBUG] 2018-11-21 12:25:33 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@4c178a76
[DEBUG] 2018-11-21 12:25:33 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration url -> org.hibernate.type.UrlType@d35dea7
[DEBUG] 2018-11-21 12:25:33 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.net.URL -> org.hibernate.type.UrlType@d35dea7
[DEBUG] 2018-11-21 12:25:33 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration Duration -> org.hibernate.type.DurationType@77f1baf5
[DEBUG] 2018-11-21 12:25:33 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.time.Duration -> org.hibernate.type.DurationType@77f1baf5
[DEBUG] 2018-11-21 12:25:33 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration Instant -> org.hibernate.type.InstantType@6913c1fb
[DEBUG] 2018-11-21 12:25:33 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.time.Instant -> org.hibernate.type.InstantType@6913c1fb
[DEBUG] 2018-11-21 12:25:33 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@7d8704ef
[DEBUG] 2018-11-21 12:25:33 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@7d8704ef
[DEBUG] 2018-11-21 12:25:33 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration LocalDate -> org.hibernate.type.LocalDateType@5fbe4146
[DEBUG] 2018-11-21 12:25:33 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@5fbe4146
[DEBUG] 2018-11-21 12:25:33 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@71e9ddb4
[DEBUG] 2018-11-21 12:25:33 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@71e9ddb4
[DEBUG] 2018-11-21 12:25:33 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@33c911a1
[DEBUG] 2018-11-21 12:25:33 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@33c911a1
[DEBUG] 2018-11-21 12:25:33 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@45b4c3a9
[DEBUG] 2018-11-21 12:25:33 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@45b4c3a9
[DEBUG] 2018-11-21 12:25:33 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@49e5f737
[DEBUG] 2018-11-21 12:25:33 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@49e5f737
[DEBUG] 2018-11-21 12:25:33 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration date -> org.hibernate.type.DateType@10aa41f2
[DEBUG] 2018-11-21 12:25:33 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.sql.Date -> org.hibernate.type.DateType@10aa41f2
[DEBUG] 2018-11-21 12:25:33 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration time -> org.hibernate.type.TimeType@38102d01
[DEBUG] 2018-11-21 12:25:33 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.sql.Time -> org.hibernate.type.TimeType@38102d01
[DEBUG] 2018-11-21 12:25:33 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration timestamp -> org.hibernate.type.TimestampType@1dac5ef
[DEBUG] 2018-11-21 12:25:33 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@1dac5ef
[DEBUG] 2018-11-21 12:25:33 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.util.Date -> org.hibernate.type.TimestampType@1dac5ef
[DEBUG] 2018-11-21 12:25:33 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@6f45df59
[DEBUG] 2018-11-21 12:25:33 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration calendar -> org.hibernate.type.CalendarType@2d2ffcb7
[DEBUG] 2018-11-21 12:25:33 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@2d2ffcb7
[DEBUG] 2018-11-21 12:25:33 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@2d2ffcb7
[DEBUG] 2018-11-21 12:25:33 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@424e1977
[DEBUG] 2018-11-21 12:25:33 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration locale -> org.hibernate.type.LocaleType@7b02881e
[DEBUG] 2018-11-21 12:25:33 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@7b02881e
[DEBUG] 2018-11-21 12:25:33 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration currency -> org.hibernate.type.CurrencyType@d21a74c
[DEBUG] 2018-11-21 12:25:33 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@d21a74c
[DEBUG] 2018-11-21 12:25:33 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration timezone -> org.hibernate.type.TimeZoneType@2638011
[DEBUG] 2018-11-21 12:25:33 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@2638011
[DEBUG] 2018-11-21 12:25:33 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration class -> org.hibernate.type.ClassType@548e6d58
[DEBUG] 2018-11-21 12:25:33 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.lang.Class -> org.hibernate.type.ClassType@548e6d58
[DEBUG] 2018-11-21 12:25:33 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@610f7aa
[DEBUG] 2018-11-21 12:25:33 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@610f7aa
[DEBUG] 2018-11-21 12:25:33 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@57250572
[DEBUG] 2018-11-21 12:25:33 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration binary -> org.hibernate.type.BinaryType@76ed1b7c
[DEBUG] 2018-11-21 12:25:33 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration byte[] -> org.hibernate.type.BinaryType@76ed1b7c
[DEBUG] 2018-11-21 12:25:33 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration [B -> org.hibernate.type.BinaryType@76ed1b7c
[DEBUG] 2018-11-21 12:25:33 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@fa36558
[DEBUG] 2018-11-21 12:25:33 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@fa36558
[DEBUG] 2018-11-21 12:25:33 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@fa36558
[DEBUG] 2018-11-21 12:25:33 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration row_version -> org.hibernate.type.RowVersionType@fd07cbb
[DEBUG] 2018-11-21 12:25:33 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration image -> org.hibernate.type.ImageType@484970b0
[DEBUG] 2018-11-21 12:25:33 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration characters -> org.hibernate.type.CharArrayType@37f1104d
[DEBUG] 2018-11-21 12:25:33 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration char[] -> org.hibernate.type.CharArrayType@37f1104d
[DEBUG] 2018-11-21 12:25:33 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration [C -> org.hibernate.type.CharArrayType@37f1104d
[DEBUG] 2018-11-21 12:25:33 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@65b3f4a4
[DEBUG] 2018-11-21 12:25:33 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@65b3f4a4
[DEBUG] 2018-11-21 12:25:33 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@65b3f4a4
[DEBUG] 2018-11-21 12:25:33 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration text -> org.hibernate.type.TextType@50caa560
[DEBUG] 2018-11-21 12:25:33 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration ntext -> org.hibernate.type.NTextType@186f8716
[DEBUG] 2018-11-21 12:25:33 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration blob -> org.hibernate.type.BlobType@ba54932
[DEBUG] 2018-11-21 12:25:33 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@ba54932
[DEBUG] 2018-11-21 12:25:33 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@343570b7
[DEBUG] 2018-11-21 12:25:33 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration clob -> org.hibernate.type.ClobType@5f16132a
[DEBUG] 2018-11-21 12:25:33 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@5f16132a
[DEBUG] 2018-11-21 12:25:33 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration nclob -> org.hibernate.type.NClobType@609db43b
[DEBUG] 2018-11-21 12:25:33 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@609db43b
[DEBUG] 2018-11-21 12:25:33 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@c03cf28
[DEBUG] 2018-11-21 12:25:33 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@41c2284a
[DEBUG] 2018-11-21 12:25:33 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration serializable -> org.hibernate.type.SerializableType@78ffe6dc
[DEBUG] 2018-11-21 12:25:33 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration object -> org.hibernate.type.ObjectType@4ef37659
[DEBUG] 2018-11-21 12:25:33 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@4ef37659
[DEBUG] 2018-11-21 12:25:33 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@4e268090
[DEBUG] 2018-11-21 12:25:33 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@1bb266b3
[DEBUG] 2018-11-21 12:25:33 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@306cf3ea
[DEBUG] 2018-11-21 12:25:33 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@2beee7ff
[DEBUG] 2018-11-21 12:25:33 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@5136d012
[DEBUG] 2018-11-21 12:25:33 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@5939a379
[DEBUG] 2018-11-21 12:25:33 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@e1de817
[DEBUG] 2018-11-21 12:25:33 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@52102734
[INFO] 2018-11-21 12:26:59 INFO org.hibernate.Version.logVersion() (Version.java:46): HHH000412: Hibernate Core {5.3.7.Final}
[INFO] 2018-11-21 12:26:59 INFO org.hibernate.cfg.Environment.<clinit>() (Environment.java:213): HHH000206: hibernate.properties not found
[INFO] 2018-11-21 12:26:59 INFO org.hibernate.annotations.common.reflection.java.JavaReflectionManager.<clinit>() (JavaReflectionManager.java:49): HCANN000001: Hibernate Commons Annotations {5.0.4.Final}
[DEBUG] 2018-11-21 12:26:59 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration boolean -> org.hibernate.type.BooleanType@662ac478
[DEBUG] 2018-11-21 12:26:59 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration boolean -> org.hibernate.type.BooleanType@662ac478
[DEBUG] 2018-11-21 12:26:59 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@662ac478
[DEBUG] 2018-11-21 12:26:59 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@477b4cdf
[DEBUG] 2018-11-21 12:26:59 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration true_false -> org.hibernate.type.TrueFalseType@233795b6
[DEBUG] 2018-11-21 12:26:59 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration yes_no -> org.hibernate.type.YesNoType@1e800aaa
[DEBUG] 2018-11-21 12:26:59 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration byte -> org.hibernate.type.ByteType@3b0090a4
[DEBUG] 2018-11-21 12:26:59 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration byte -> org.hibernate.type.ByteType@3b0090a4
[DEBUG] 2018-11-21 12:26:59 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@3b0090a4
[DEBUG] 2018-11-21 12:26:59 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration character -> org.hibernate.type.CharacterType@62ddbd7e
[DEBUG] 2018-11-21 12:26:59 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration char -> org.hibernate.type.CharacterType@62ddbd7e
[DEBUG] 2018-11-21 12:26:59 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@62ddbd7e
[DEBUG] 2018-11-21 12:26:59 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration short -> org.hibernate.type.ShortType@489115ef
[DEBUG] 2018-11-21 12:26:59 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration short -> org.hibernate.type.ShortType@489115ef
[DEBUG] 2018-11-21 12:26:59 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.lang.Short -> org.hibernate.type.ShortType@489115ef
[DEBUG] 2018-11-21 12:26:59 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration integer -> org.hibernate.type.IntegerType@4e08711f
[DEBUG] 2018-11-21 12:26:59 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration int -> org.hibernate.type.IntegerType@4e08711f
[DEBUG] 2018-11-21 12:26:59 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@4e08711f
[DEBUG] 2018-11-21 12:26:59 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration long -> org.hibernate.type.LongType@40005471
[DEBUG] 2018-11-21 12:26:59 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration long -> org.hibernate.type.LongType@40005471
[DEBUG] 2018-11-21 12:26:59 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.lang.Long -> org.hibernate.type.LongType@40005471
[DEBUG] 2018-11-21 12:26:59 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration float -> org.hibernate.type.FloatType@1c1bbc4e
[DEBUG] 2018-11-21 12:26:59 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration float -> org.hibernate.type.FloatType@1c1bbc4e
[DEBUG] 2018-11-21 12:26:59 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.lang.Float -> org.hibernate.type.FloatType@1c1bbc4e
[DEBUG] 2018-11-21 12:26:59 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration double -> org.hibernate.type.DoubleType@7a8c8dcf
[DEBUG] 2018-11-21 12:26:59 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration double -> org.hibernate.type.DoubleType@7a8c8dcf
[DEBUG] 2018-11-21 12:26:59 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@7a8c8dcf
[DEBUG] 2018-11-21 12:26:59 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@2a5c8d3f
[DEBUG] 2018-11-21 12:26:59 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@2a5c8d3f
[DEBUG] 2018-11-21 12:26:59 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration big_integer -> org.hibernate.type.BigIntegerType@2925bf5b
[DEBUG] 2018-11-21 12:26:59 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@2925bf5b
[DEBUG] 2018-11-21 12:26:59 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration string -> org.hibernate.type.StringType@6ad82709
[DEBUG] 2018-11-21 12:26:59 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.lang.String -> org.hibernate.type.StringType@6ad82709
[DEBUG] 2018-11-21 12:26:59 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration nstring -> org.hibernate.type.StringNVarcharType@8297b3a
[DEBUG] 2018-11-21 12:26:59 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@4c178a76
[DEBUG] 2018-11-21 12:26:59 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration url -> org.hibernate.type.UrlType@d35dea7
[DEBUG] 2018-11-21 12:26:59 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.net.URL -> org.hibernate.type.UrlType@d35dea7
[DEBUG] 2018-11-21 12:26:59 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration Duration -> org.hibernate.type.DurationType@77f1baf5
[DEBUG] 2018-11-21 12:26:59 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.time.Duration -> org.hibernate.type.DurationType@77f1baf5
[DEBUG] 2018-11-21 12:26:59 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration Instant -> org.hibernate.type.InstantType@6913c1fb
[DEBUG] 2018-11-21 12:26:59 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.time.Instant -> org.hibernate.type.InstantType@6913c1fb
[DEBUG] 2018-11-21 12:26:59 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@7d8704ef
[DEBUG] 2018-11-21 12:26:59 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@7d8704ef
[DEBUG] 2018-11-21 12:26:59 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration LocalDate -> org.hibernate.type.LocalDateType@5fbe4146
[DEBUG] 2018-11-21 12:26:59 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@5fbe4146
[DEBUG] 2018-11-21 12:26:59 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@71e9ddb4
[DEBUG] 2018-11-21 12:26:59 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@71e9ddb4
[DEBUG] 2018-11-21 12:26:59 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@33c911a1
[DEBUG] 2018-11-21 12:26:59 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@33c911a1
[DEBUG] 2018-11-21 12:26:59 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@45b4c3a9
[DEBUG] 2018-11-21 12:26:59 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@45b4c3a9
[DEBUG] 2018-11-21 12:26:59 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@49e5f737
[DEBUG] 2018-11-21 12:26:59 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@49e5f737
[DEBUG] 2018-11-21 12:26:59 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration date -> org.hibernate.type.DateType@10aa41f2
[DEBUG] 2018-11-21 12:26:59 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.sql.Date -> org.hibernate.type.DateType@10aa41f2
[DEBUG] 2018-11-21 12:26:59 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration time -> org.hibernate.type.TimeType@38102d01
[DEBUG] 2018-11-21 12:26:59 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.sql.Time -> org.hibernate.type.TimeType@38102d01
[DEBUG] 2018-11-21 12:26:59 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration timestamp -> org.hibernate.type.TimestampType@1dac5ef
[DEBUG] 2018-11-21 12:26:59 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@1dac5ef
[DEBUG] 2018-11-21 12:26:59 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.util.Date -> org.hibernate.type.TimestampType@1dac5ef
[DEBUG] 2018-11-21 12:26:59 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@6f45df59
[DEBUG] 2018-11-21 12:26:59 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration calendar -> org.hibernate.type.CalendarType@2d2ffcb7
[DEBUG] 2018-11-21 12:26:59 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@2d2ffcb7
[DEBUG] 2018-11-21 12:26:59 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@2d2ffcb7
[DEBUG] 2018-11-21 12:26:59 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@424e1977
[DEBUG] 2018-11-21 12:26:59 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration locale -> org.hibernate.type.LocaleType@7b02881e
[DEBUG] 2018-11-21 12:26:59 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@7b02881e
[DEBUG] 2018-11-21 12:26:59 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration currency -> org.hibernate.type.CurrencyType@d21a74c
[DEBUG] 2018-11-21 12:26:59 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@d21a74c
[DEBUG] 2018-11-21 12:26:59 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration timezone -> org.hibernate.type.TimeZoneType@2638011
[DEBUG] 2018-11-21 12:26:59 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@2638011
[DEBUG] 2018-11-21 12:26:59 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration class -> org.hibernate.type.ClassType@548e6d58
[DEBUG] 2018-11-21 12:26:59 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.lang.Class -> org.hibernate.type.ClassType@548e6d58
[DEBUG] 2018-11-21 12:26:59 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@610f7aa
[DEBUG] 2018-11-21 12:26:59 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@610f7aa
[DEBUG] 2018-11-21 12:26:59 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@57250572
[DEBUG] 2018-11-21 12:26:59 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration binary -> org.hibernate.type.BinaryType@76ed1b7c
[DEBUG] 2018-11-21 12:26:59 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration byte[] -> org.hibernate.type.BinaryType@76ed1b7c
[DEBUG] 2018-11-21 12:26:59 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration [B -> org.hibernate.type.BinaryType@76ed1b7c
[DEBUG] 2018-11-21 12:26:59 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@fa36558
[DEBUG] 2018-11-21 12:26:59 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@fa36558
[DEBUG] 2018-11-21 12:26:59 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@fa36558
[DEBUG] 2018-11-21 12:26:59 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration row_version -> org.hibernate.type.RowVersionType@fd07cbb
[DEBUG] 2018-11-21 12:26:59 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration image -> org.hibernate.type.ImageType@484970b0
[DEBUG] 2018-11-21 12:26:59 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration characters -> org.hibernate.type.CharArrayType@37f1104d
[DEBUG] 2018-11-21 12:26:59 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration char[] -> org.hibernate.type.CharArrayType@37f1104d
[DEBUG] 2018-11-21 12:26:59 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration [C -> org.hibernate.type.CharArrayType@37f1104d
[DEBUG] 2018-11-21 12:26:59 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@65b3f4a4
[DEBUG] 2018-11-21 12:26:59 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@65b3f4a4
[DEBUG] 2018-11-21 12:26:59 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@65b3f4a4
[DEBUG] 2018-11-21 12:26:59 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration text -> org.hibernate.type.TextType@50caa560
[DEBUG] 2018-11-21 12:26:59 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration ntext -> org.hibernate.type.NTextType@186f8716
[DEBUG] 2018-11-21 12:26:59 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration blob -> org.hibernate.type.BlobType@ba54932
[DEBUG] 2018-11-21 12:26:59 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@ba54932
[DEBUG] 2018-11-21 12:26:59 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@343570b7
[DEBUG] 2018-11-21 12:26:59 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration clob -> org.hibernate.type.ClobType@5f16132a
[DEBUG] 2018-11-21 12:26:59 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@5f16132a
[DEBUG] 2018-11-21 12:26:59 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration nclob -> org.hibernate.type.NClobType@609db43b
[DEBUG] 2018-11-21 12:26:59 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@609db43b
[DEBUG] 2018-11-21 12:26:59 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@c03cf28
[DEBUG] 2018-11-21 12:26:59 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@41c2284a
[DEBUG] 2018-11-21 12:26:59 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration serializable -> org.hibernate.type.SerializableType@78ffe6dc
[DEBUG] 2018-11-21 12:26:59 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration object -> org.hibernate.type.ObjectType@4ef37659
[DEBUG] 2018-11-21 12:26:59 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@4ef37659
[DEBUG] 2018-11-21 12:26:59 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@4e268090
[DEBUG] 2018-11-21 12:26:59 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@1bb266b3
[DEBUG] 2018-11-21 12:26:59 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@306cf3ea
[DEBUG] 2018-11-21 12:26:59 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@2beee7ff
[DEBUG] 2018-11-21 12:26:59 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@5136d012
[DEBUG] 2018-11-21 12:26:59 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@5939a379
[DEBUG] 2018-11-21 12:26:59 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@e1de817
[DEBUG] 2018-11-21 12:26:59 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@52102734
[INFO] 2018-11-21 12:35:28 INFO org.hibernate.Version.logVersion() (Version.java:46): HHH000412: Hibernate Core {5.3.7.Final}
[INFO] 2018-11-21 12:35:28 INFO org.hibernate.cfg.Environment.<clinit>() (Environment.java:213): HHH000206: hibernate.properties not found
[INFO] 2018-11-21 12:35:29 INFO org.hibernate.annotations.common.reflection.java.JavaReflectionManager.<clinit>() (JavaReflectionManager.java:49): HCANN000001: Hibernate Commons Annotations {5.0.4.Final}
[DEBUG] 2018-11-21 12:35:29 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration boolean -> org.hibernate.type.BooleanType@662ac478
[DEBUG] 2018-11-21 12:35:29 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration boolean -> org.hibernate.type.BooleanType@662ac478
[DEBUG] 2018-11-21 12:35:29 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@662ac478
[DEBUG] 2018-11-21 12:35:29 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@477b4cdf
[DEBUG] 2018-11-21 12:35:29 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration true_false -> org.hibernate.type.TrueFalseType@233795b6
[DEBUG] 2018-11-21 12:35:29 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration yes_no -> org.hibernate.type.YesNoType@1e800aaa
[DEBUG] 2018-11-21 12:35:29 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration byte -> org.hibernate.type.ByteType@3b0090a4
[DEBUG] 2018-11-21 12:35:29 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration byte -> org.hibernate.type.ByteType@3b0090a4
[DEBUG] 2018-11-21 12:35:29 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@3b0090a4
[DEBUG] 2018-11-21 12:35:29 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration character -> org.hibernate.type.CharacterType@62ddbd7e
[DEBUG] 2018-11-21 12:35:29 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration char -> org.hibernate.type.CharacterType@62ddbd7e
[DEBUG] 2018-11-21 12:35:29 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@62ddbd7e
[DEBUG] 2018-11-21 12:35:29 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration short -> org.hibernate.type.ShortType@489115ef
[DEBUG] 2018-11-21 12:35:29 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration short -> org.hibernate.type.ShortType@489115ef
[DEBUG] 2018-11-21 12:35:29 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.lang.Short -> org.hibernate.type.ShortType@489115ef
[DEBUG] 2018-11-21 12:35:29 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration integer -> org.hibernate.type.IntegerType@4e08711f
[DEBUG] 2018-11-21 12:35:29 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration int -> org.hibernate.type.IntegerType@4e08711f
[DEBUG] 2018-11-21 12:35:29 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@4e08711f
[DEBUG] 2018-11-21 12:35:29 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration long -> org.hibernate.type.LongType@40005471
[DEBUG] 2018-11-21 12:35:29 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration long -> org.hibernate.type.LongType@40005471
[DEBUG] 2018-11-21 12:35:29 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.lang.Long -> org.hibernate.type.LongType@40005471
[DEBUG] 2018-11-21 12:35:29 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration float -> org.hibernate.type.FloatType@1c1bbc4e
[DEBUG] 2018-11-21 12:35:29 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration float -> org.hibernate.type.FloatType@1c1bbc4e
[DEBUG] 2018-11-21 12:35:29 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.lang.Float -> org.hibernate.type.FloatType@1c1bbc4e
[DEBUG] 2018-11-21 12:35:29 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration double -> org.hibernate.type.DoubleType@7a8c8dcf
[DEBUG] 2018-11-21 12:35:29 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration double -> org.hibernate.type.DoubleType@7a8c8dcf
[DEBUG] 2018-11-21 12:35:29 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@7a8c8dcf
[DEBUG] 2018-11-21 12:35:29 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@2a5c8d3f
[DEBUG] 2018-11-21 12:35:29 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@2a5c8d3f
[DEBUG] 2018-11-21 12:35:29 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration big_integer -> org.hibernate.type.BigIntegerType@2925bf5b
[DEBUG] 2018-11-21 12:35:29 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@2925bf5b
[DEBUG] 2018-11-21 12:35:29 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration string -> org.hibernate.type.StringType@6ad82709
[DEBUG] 2018-11-21 12:35:29 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.lang.String -> org.hibernate.type.StringType@6ad82709
[DEBUG] 2018-11-21 12:35:29 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration nstring -> org.hibernate.type.StringNVarcharType@8297b3a
[DEBUG] 2018-11-21 12:35:29 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@4c178a76
[DEBUG] 2018-11-21 12:35:29 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration url -> org.hibernate.type.UrlType@d35dea7
[DEBUG] 2018-11-21 12:35:29 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.net.URL -> org.hibernate.type.UrlType@d35dea7
[DEBUG] 2018-11-21 12:35:29 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration Duration -> org.hibernate.type.DurationType@77f1baf5
[DEBUG] 2018-11-21 12:35:29 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.time.Duration -> org.hibernate.type.DurationType@77f1baf5
[DEBUG] 2018-11-21 12:35:29 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration Instant -> org.hibernate.type.InstantType@6913c1fb
[DEBUG] 2018-11-21 12:35:29 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.time.Instant -> org.hibernate.type.InstantType@6913c1fb
[DEBUG] 2018-11-21 12:35:29 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@7d8704ef
[DEBUG] 2018-11-21 12:35:29 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@7d8704ef
[DEBUG] 2018-11-21 12:35:29 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration LocalDate -> org.hibernate.type.LocalDateType@5fbe4146
[DEBUG] 2018-11-21 12:35:29 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@5fbe4146
[DEBUG] 2018-11-21 12:35:29 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@71e9ddb4
[DEBUG] 2018-11-21 12:35:29 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@71e9ddb4
[DEBUG] 2018-11-21 12:35:29 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@33c911a1
[DEBUG] 2018-11-21 12:35:29 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@33c911a1
[DEBUG] 2018-11-21 12:35:29 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@45b4c3a9
[DEBUG] 2018-11-21 12:35:29 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@45b4c3a9
[DEBUG] 2018-11-21 12:35:29 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@49e5f737
[DEBUG] 2018-11-21 12:35:29 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@49e5f737
[DEBUG] 2018-11-21 12:35:29 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration date -> org.hibernate.type.DateType@10aa41f2
[DEBUG] 2018-11-21 12:35:29 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.sql.Date -> org.hibernate.type.DateType@10aa41f2
[DEBUG] 2018-11-21 12:35:29 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration time -> org.hibernate.type.TimeType@38102d01
[DEBUG] 2018-11-21 12:35:29 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.sql.Time -> org.hibernate.type.TimeType@38102d01
[DEBUG] 2018-11-21 12:35:29 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration timestamp -> org.hibernate.type.TimestampType@1dac5ef
[DEBUG] 2018-11-21 12:35:29 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@1dac5ef
[DEBUG] 2018-11-21 12:35:29 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.util.Date -> org.hibernate.type.TimestampType@1dac5ef
[DEBUG] 2018-11-21 12:35:29 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@6f45df59
[DEBUG] 2018-11-21 12:35:29 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration calendar -> org.hibernate.type.CalendarType@2d2ffcb7
[DEBUG] 2018-11-21 12:35:29 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@2d2ffcb7
[DEBUG] 2018-11-21 12:35:29 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@2d2ffcb7
[DEBUG] 2018-11-21 12:35:29 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@424e1977
[DEBUG] 2018-11-21 12:35:29 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration locale -> org.hibernate.type.LocaleType@7b02881e
[DEBUG] 2018-11-21 12:35:29 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@7b02881e
[DEBUG] 2018-11-21 12:35:29 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration currency -> org.hibernate.type.CurrencyType@d21a74c
[DEBUG] 2018-11-21 12:35:29 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@d21a74c
[DEBUG] 2018-11-21 12:35:29 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration timezone -> org.hibernate.type.TimeZoneType@2638011
[DEBUG] 2018-11-21 12:35:29 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@2638011
[DEBUG] 2018-11-21 12:35:29 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration class -> org.hibernate.type.ClassType@548e6d58
[DEBUG] 2018-11-21 12:35:29 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.lang.Class -> org.hibernate.type.ClassType@548e6d58
[DEBUG] 2018-11-21 12:35:29 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@610f7aa
[DEBUG] 2018-11-21 12:35:29 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@610f7aa
[DEBUG] 2018-11-21 12:35:29 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@57250572
[DEBUG] 2018-11-21 12:35:29 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration binary -> org.hibernate.type.BinaryType@76ed1b7c
[DEBUG] 2018-11-21 12:35:29 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration byte[] -> org.hibernate.type.BinaryType@76ed1b7c
[DEBUG] 2018-11-21 12:35:29 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration [B -> org.hibernate.type.BinaryType@76ed1b7c
[DEBUG] 2018-11-21 12:35:29 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@fa36558
[DEBUG] 2018-11-21 12:35:29 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@fa36558
[DEBUG] 2018-11-21 12:35:29 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@fa36558
[DEBUG] 2018-11-21 12:35:29 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration row_version -> org.hibernate.type.RowVersionType@fd07cbb
[DEBUG] 2018-11-21 12:35:29 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration image -> org.hibernate.type.ImageType@484970b0
[DEBUG] 2018-11-21 12:35:29 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration characters -> org.hibernate.type.CharArrayType@37f1104d
[DEBUG] 2018-11-21 12:35:29 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration char[] -> org.hibernate.type.CharArrayType@37f1104d
[DEBUG] 2018-11-21 12:35:29 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration [C -> org.hibernate.type.CharArrayType@37f1104d
[DEBUG] 2018-11-21 12:35:29 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@65b3f4a4
[DEBUG] 2018-11-21 12:35:29 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@65b3f4a4
[DEBUG] 2018-11-21 12:35:29 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@65b3f4a4
[DEBUG] 2018-11-21 12:35:29 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration text -> org.hibernate.type.TextType@50caa560
[DEBUG] 2018-11-21 12:35:29 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration ntext -> org.hibernate.type.NTextType@186f8716
[DEBUG] 2018-11-21 12:35:29 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration blob -> org.hibernate.type.BlobType@ba54932
[DEBUG] 2018-11-21 12:35:29 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@ba54932
[DEBUG] 2018-11-21 12:35:29 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@343570b7
[DEBUG] 2018-11-21 12:35:29 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration clob -> org.hibernate.type.ClobType@5f16132a
[DEBUG] 2018-11-21 12:35:29 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@5f16132a
[DEBUG] 2018-11-21 12:35:29 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration nclob -> org.hibernate.type.NClobType@609db43b
[DEBUG] 2018-11-21 12:35:29 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@609db43b
[DEBUG] 2018-11-21 12:35:29 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@c03cf28
[DEBUG] 2018-11-21 12:35:29 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@41c2284a
[DEBUG] 2018-11-21 12:35:29 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration serializable -> org.hibernate.type.SerializableType@78ffe6dc
[DEBUG] 2018-11-21 12:35:29 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration object -> org.hibernate.type.ObjectType@4ef37659
[DEBUG] 2018-11-21 12:35:29 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@4ef37659
[DEBUG] 2018-11-21 12:35:29 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@4e268090
[DEBUG] 2018-11-21 12:35:29 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@1bb266b3
[DEBUG] 2018-11-21 12:35:29 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@306cf3ea
[DEBUG] 2018-11-21 12:35:29 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@2beee7ff
[DEBUG] 2018-11-21 12:35:29 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@5136d012
[DEBUG] 2018-11-21 12:35:29 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@5939a379
[DEBUG] 2018-11-21 12:35:29 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@e1de817
[DEBUG] 2018-11-21 12:35:29 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@52102734
[WARN] 2018-11-21 12:35:29 WARN org.hibernate.boot.jaxb.internal.stax.LocalXmlResourceResolver.resolveEntity() (LocalXmlResourceResolver.java:75): HHH90000012: Recognized obsolete hibernate namespace http://hibernate.sourceforge.net/hibernate-mapping. Use namespace http://www.hibernate.org/dtd/hibernate-mapping instead.  Support for obsolete DTD/XSD namespaces may be removed at any time.
[WARN] 2018-11-21 12:35:30 WARN org.hibernate.engine.jdbc.connections.internal.ConnectionProviderInitiator.instantiateC3p0Provider() (ConnectionProviderInitiator.java:272): HHH000022: c3p0 properties were encountered, but the c3p0 provider class was not found on the classpath; these properties are going to be ignored.
[WARN] 2018-11-21 12:35:30 WARN org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.configure() (DriverManagerConnectionProviderImpl.java:73): HHH10001002: Using Hibernate built-in connection pool (not for production use!)
[INFO] 2018-11-21 12:35:30 INFO org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator() (DriverManagerConnectionProviderImpl.java:129): HHH10001005: using driver [com.mysql.jdbc.Driver] at URL [jdbc:mysql://10.10.10.141/test1]
[INFO] 2018-11-21 12:35:30 INFO org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator() (DriverManagerConnectionProviderImpl.java:138): HHH10001001: Connection properties: {user=admin, password=****}
[INFO] 2018-11-21 12:35:30 INFO org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator() (DriverManagerConnectionProviderImpl.java:143): HHH10001003: Autocommit mode: false
[INFO] 2018-11-21 12:35:30 INFO org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator() (DriverManagerConnectionProviderImpl.java:148): HHH10001007: JDBC isolation level: READ_COMMITTED
[INFO] 2018-11-21 12:35:30 INFO org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl$PooledConnections.<init>() (DriverManagerConnectionProviderImpl.java:281): HHH000115: Hibernate connection pool size: 20 (min=1)
[INFO] 2018-11-21 12:35:30 INFO org.hibernate.dialect.Dialect.<init>() (Dialect.java:157): HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
[DEBUG] 2018-11-21 12:35:31 DEBUG org.hibernate.type.spi.TypeConfiguration.scope() (TypeConfiguration.java:142): Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@4b3a45f1] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@17a87e37]
[DEBUG] 2018-11-21 12:35:31 DEBUG org.hibernate.type.spi.TypeConfiguration.scope() (TypeConfiguration.java:147): Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@4b3a45f1] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@3ec11999]
[INFO] 2018-11-21 12:35:31 INFO org.hibernate.resource.transaction.backend.jdbc.internal.DdlTransactionIsolatorNonJtaImpl.getIsolatedConnection() (DdlTransactionIsolatorNonJtaImpl.java:47): HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@21ab988f] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
[DEBUG] 2018-11-21 12:35:31 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement() (SqlStatementLogger.java:94): 
    
    create table account (
       id integer not null auto_increment,
        username varchar(255),
        balance integer,
        primary key (id)
    ) engine=MyISAM
[TRACE] 2018-11-21 12:35:31 TRACE org.hibernate.type.spi.TypeConfiguration.sessionFactoryCreated() (TypeConfiguration.java:195): Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@3ec11999] for TypeConfiguration
[DEBUG] 2018-11-21 12:35:31 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement() (SqlStatementLogger.java:94): 
    insert 
    into
        account
        (username, balance) 
    values
        (?, ?)
[TRACE] 2018-11-21 12:35:31 TRACE org.hibernate.type.descriptor.sql.BasicBinder.bind() (BasicBinder.java:65): binding parameter [1] as [VARCHAR] - [zczhao]
[TRACE] 2018-11-21 12:35:31 TRACE org.hibernate.type.descriptor.sql.BasicBinder.bind() (BasicBinder.java:65): binding parameter [2] as [INTEGER] - [200]
[TRACE] 2018-11-21 12:35:31 TRACE org.hibernate.type.spi.TypeConfiguration.sessionFactoryClosed() (TypeConfiguration.java:201): Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@3ec11999] for TypeConfiguration
[DEBUG] 2018-11-21 12:35:31 DEBUG org.hibernate.type.spi.TypeConfiguration$Scope.unsetSessionFactory() (TypeConfiguration.java:312): Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@70242f38] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@3ec11999]
[INFO] 2018-11-21 12:35:31 INFO org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.stop() (DriverManagerConnectionProviderImpl.java:233): HHH10001008: Cleaning up connection pool [jdbc:mysql://10.10.10.141/test1]
[INFO] 2018-11-21 12:36:30 INFO org.springframework.test.context.support.AbstractTestContextBootstrapper.getDefaultTestExecutionListenerClassNames() (AbstractTestContextBootstrapper.java:248): Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
[INFO] 2018-11-21 12:36:30 INFO org.springframework.test.context.support.AbstractTestContextBootstrapper.getTestExecutionListeners() (AbstractTestContextBootstrapper.java:174): Using TestExecutionListeners: [org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@1b604f19, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@7823a2f9, org.springframework.test.context.support.DirtiesContextTestExecutionListener@4cc0edeb, org.springframework.test.context.transaction.TransactionalTestExecutionListener@457e2f02, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@5c7fa833]
[INFO] 2018-11-21 12:36:30 INFO org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions() (XmlBeanDefinitionReader.java:317): Loading XML bean definitions from class path resource [applicationContext.xml]
[INFO] 2018-11-21 12:36:30 INFO org.springframework.context.support.AbstractApplicationContext.prepareRefresh() (AbstractApplicationContext.java:583): Refreshing org.springframework.context.support.GenericApplicationContext@56ef9176: startup date [Wed Nov 21 12:36:30 CST 2018]; root of context hierarchy
[INFO] 2018-11-21 12:36:31 INFO com.mchange.v2.log.MLog$1.run() (MLog.java:124): MLog clients using log4j logging.
[INFO] 2018-11-21 12:36:36 INFO com.mchange.v2.c3p0.C3P0Registry.banner() (C3P0Registry.java:248): Initializing c3p0-0.9.5.2 [built 08-December-2015 22:06:04 -0800; debug? true; trace: 10]
[INFO] 2018-11-21 12:36:36 INFO org.hibernate.Version.logVersion() (Version.java:46): HHH000412: Hibernate Core {5.3.7.Final}
[INFO] 2018-11-21 12:36:36 INFO org.hibernate.cfg.Environment.<clinit>() (Environment.java:213): HHH000206: hibernate.properties not found
[WARN] 2018-11-21 12:36:36 WARN org.hibernate.boot.jaxb.internal.stax.LocalXmlResourceResolver.resolveEntity() (LocalXmlResourceResolver.java:75): HHH90000012: Recognized obsolete hibernate namespace http://hibernate.sourceforge.net/hibernate-mapping. Use namespace http://www.hibernate.org/dtd/hibernate-mapping instead.  Support for obsolete DTD/XSD namespaces may be removed at any time.
[WARN] 2018-11-21 12:36:37 WARN org.hibernate.boot.jaxb.internal.stax.LocalXmlResourceResolver.resolveEntity() (LocalXmlResourceResolver.java:75): HHH90000012: Recognized obsolete hibernate namespace http://hibernate.sourceforge.net/hibernate-mapping. Use namespace http://www.hibernate.org/dtd/hibernate-mapping instead.  Support for obsolete DTD/XSD namespaces may be removed at any time.
[INFO] 2018-11-21 12:36:37 INFO org.hibernate.annotations.common.reflection.java.JavaReflectionManager.<clinit>() (JavaReflectionManager.java:49): HCANN000001: Hibernate Commons Annotations {5.0.4.Final}
[DEBUG] 2018-11-21 12:36:37 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration boolean -> org.hibernate.type.BooleanType@192f2f27
[DEBUG] 2018-11-21 12:36:37 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration boolean -> org.hibernate.type.BooleanType@192f2f27
[DEBUG] 2018-11-21 12:36:37 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@192f2f27
[DEBUG] 2018-11-21 12:36:37 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@6b5176f2
[DEBUG] 2018-11-21 12:36:37 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration true_false -> org.hibernate.type.TrueFalseType@ec0c838
[DEBUG] 2018-11-21 12:36:37 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration yes_no -> org.hibernate.type.YesNoType@460f76a6
[DEBUG] 2018-11-21 12:36:37 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration byte -> org.hibernate.type.ByteType@1922e6d
[DEBUG] 2018-11-21 12:36:37 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration byte -> org.hibernate.type.ByteType@1922e6d
[DEBUG] 2018-11-21 12:36:37 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@1922e6d
[DEBUG] 2018-11-21 12:36:37 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration character -> org.hibernate.type.CharacterType@532a02d9
[DEBUG] 2018-11-21 12:36:37 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration char -> org.hibernate.type.CharacterType@532a02d9
[DEBUG] 2018-11-21 12:36:37 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@532a02d9
[DEBUG] 2018-11-21 12:36:37 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration short -> org.hibernate.type.ShortType@62923ee6
[DEBUG] 2018-11-21 12:36:37 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration short -> org.hibernate.type.ShortType@62923ee6
[DEBUG] 2018-11-21 12:36:37 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.lang.Short -> org.hibernate.type.ShortType@62923ee6
[DEBUG] 2018-11-21 12:36:37 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration integer -> org.hibernate.type.IntegerType@4b6166aa
[DEBUG] 2018-11-21 12:36:37 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration int -> org.hibernate.type.IntegerType@4b6166aa
[DEBUG] 2018-11-21 12:36:37 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@4b6166aa
[DEBUG] 2018-11-21 12:36:37 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration long -> org.hibernate.type.LongType@3bde62ff
[DEBUG] 2018-11-21 12:36:37 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration long -> org.hibernate.type.LongType@3bde62ff
[DEBUG] 2018-11-21 12:36:37 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.lang.Long -> org.hibernate.type.LongType@3bde62ff
[DEBUG] 2018-11-21 12:36:37 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration float -> org.hibernate.type.FloatType@a7e2d9d
[DEBUG] 2018-11-21 12:36:37 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration float -> org.hibernate.type.FloatType@a7e2d9d
[DEBUG] 2018-11-21 12:36:37 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.lang.Float -> org.hibernate.type.FloatType@a7e2d9d
[DEBUG] 2018-11-21 12:36:37 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration double -> org.hibernate.type.DoubleType@2f08c4b
[DEBUG] 2018-11-21 12:36:37 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration double -> org.hibernate.type.DoubleType@2f08c4b
[DEBUG] 2018-11-21 12:36:37 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@2f08c4b
[DEBUG] 2018-11-21 12:36:37 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@7ef2d7a6
[DEBUG] 2018-11-21 12:36:37 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@7ef2d7a6
[DEBUG] 2018-11-21 12:36:37 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration big_integer -> org.hibernate.type.BigIntegerType@299266e2
[DEBUG] 2018-11-21 12:36:37 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@299266e2
[DEBUG] 2018-11-21 12:36:37 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration string -> org.hibernate.type.StringType@66971f6b
[DEBUG] 2018-11-21 12:36:37 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.lang.String -> org.hibernate.type.StringType@66971f6b
[DEBUG] 2018-11-21 12:36:37 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration nstring -> org.hibernate.type.StringNVarcharType@142eef62
[DEBUG] 2018-11-21 12:36:37 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@56e07a08
[DEBUG] 2018-11-21 12:36:37 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration url -> org.hibernate.type.UrlType@114a85c2
[DEBUG] 2018-11-21 12:36:37 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.net.URL -> org.hibernate.type.UrlType@114a85c2
[DEBUG] 2018-11-21 12:36:37 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration Duration -> org.hibernate.type.DurationType@32fe9d0a
[DEBUG] 2018-11-21 12:36:37 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.time.Duration -> org.hibernate.type.DurationType@32fe9d0a
[DEBUG] 2018-11-21 12:36:37 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration Instant -> org.hibernate.type.InstantType@6063d80a
[DEBUG] 2018-11-21 12:36:37 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.time.Instant -> org.hibernate.type.InstantType@6063d80a
[DEBUG] 2018-11-21 12:36:37 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@24f360b2
[DEBUG] 2018-11-21 12:36:37 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@24f360b2
[DEBUG] 2018-11-21 12:36:37 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration LocalDate -> org.hibernate.type.LocalDateType@54107f42
[DEBUG] 2018-11-21 12:36:37 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@54107f42
[DEBUG] 2018-11-21 12:36:37 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@2f2bf0e2
[DEBUG] 2018-11-21 12:36:37 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@2f2bf0e2
[DEBUG] 2018-11-21 12:36:37 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@1a69561c
[DEBUG] 2018-11-21 12:36:37 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@1a69561c
[DEBUG] 2018-11-21 12:36:37 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@138fe6ec
[DEBUG] 2018-11-21 12:36:37 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@138fe6ec
[DEBUG] 2018-11-21 12:36:37 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@44a2b17b
[DEBUG] 2018-11-21 12:36:37 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@44a2b17b
[DEBUG] 2018-11-21 12:36:37 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration date -> org.hibernate.type.DateType@e6516e
[DEBUG] 2018-11-21 12:36:37 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.sql.Date -> org.hibernate.type.DateType@e6516e
[DEBUG] 2018-11-21 12:36:37 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration time -> org.hibernate.type.TimeType@4da855dd
[DEBUG] 2018-11-21 12:36:37 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.sql.Time -> org.hibernate.type.TimeType@4da855dd
[DEBUG] 2018-11-21 12:36:37 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration timestamp -> org.hibernate.type.TimestampType@4de025bf
[DEBUG] 2018-11-21 12:36:37 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@4de025bf
[DEBUG] 2018-11-21 12:36:37 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.util.Date -> org.hibernate.type.TimestampType@4de025bf
[DEBUG] 2018-11-21 12:36:37 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@11389053
[DEBUG] 2018-11-21 12:36:37 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration calendar -> org.hibernate.type.CalendarType@18cc679e
[DEBUG] 2018-11-21 12:36:37 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@18cc679e
[DEBUG] 2018-11-21 12:36:37 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@18cc679e
[DEBUG] 2018-11-21 12:36:37 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@67ef029
[DEBUG] 2018-11-21 12:36:37 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration locale -> org.hibernate.type.LocaleType@740abb5
[DEBUG] 2018-11-21 12:36:37 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@740abb5
[DEBUG] 2018-11-21 12:36:37 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration currency -> org.hibernate.type.CurrencyType@64c2b546
[DEBUG] 2018-11-21 12:36:37 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@64c2b546
[DEBUG] 2018-11-21 12:36:37 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration timezone -> org.hibernate.type.TimeZoneType@4152d38d
[DEBUG] 2018-11-21 12:36:37 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@4152d38d
[DEBUG] 2018-11-21 12:36:37 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration class -> org.hibernate.type.ClassType@61edc883
[DEBUG] 2018-11-21 12:36:37 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.lang.Class -> org.hibernate.type.ClassType@61edc883
[DEBUG] 2018-11-21 12:36:37 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@69f63d95
[DEBUG] 2018-11-21 12:36:37 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@69f63d95
[DEBUG] 2018-11-21 12:36:37 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@3574e198
[DEBUG] 2018-11-21 12:36:37 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration binary -> org.hibernate.type.BinaryType@61a002b1
[DEBUG] 2018-11-21 12:36:37 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration byte[] -> org.hibernate.type.BinaryType@61a002b1
[DEBUG] 2018-11-21 12:36:37 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration [B -> org.hibernate.type.BinaryType@61a002b1
[DEBUG] 2018-11-21 12:36:37 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@548e76f1
[DEBUG] 2018-11-21 12:36:37 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@548e76f1
[DEBUG] 2018-11-21 12:36:37 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@548e76f1
[DEBUG] 2018-11-21 12:36:37 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration row_version -> org.hibernate.type.RowVersionType@3aa3193a
[DEBUG] 2018-11-21 12:36:37 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration image -> org.hibernate.type.ImageType@5003041b
[DEBUG] 2018-11-21 12:36:37 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration characters -> org.hibernate.type.CharArrayType@ca27722
[DEBUG] 2018-11-21 12:36:37 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration char[] -> org.hibernate.type.CharArrayType@ca27722
[DEBUG] 2018-11-21 12:36:37 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration [C -> org.hibernate.type.CharArrayType@ca27722
[DEBUG] 2018-11-21 12:36:37 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@544630b7
[DEBUG] 2018-11-21 12:36:37 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@544630b7
[DEBUG] 2018-11-21 12:36:37 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@544630b7
[DEBUG] 2018-11-21 12:36:37 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration text -> org.hibernate.type.TextType@58c540cf
[DEBUG] 2018-11-21 12:36:37 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration ntext -> org.hibernate.type.NTextType@24a1c17f
[DEBUG] 2018-11-21 12:36:37 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration blob -> org.hibernate.type.BlobType@3b366632
[DEBUG] 2018-11-21 12:36:37 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@3b366632
[DEBUG] 2018-11-21 12:36:37 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@617fe9e1
[DEBUG] 2018-11-21 12:36:37 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration clob -> org.hibernate.type.ClobType@5b800468
[DEBUG] 2018-11-21 12:36:37 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@5b800468
[DEBUG] 2018-11-21 12:36:37 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration nclob -> org.hibernate.type.NClobType@60094a13
[DEBUG] 2018-11-21 12:36:37 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@60094a13
[DEBUG] 2018-11-21 12:36:37 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@3a4b0e5d
[DEBUG] 2018-11-21 12:36:37 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@3546d80f
[DEBUG] 2018-11-21 12:36:37 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration serializable -> org.hibernate.type.SerializableType@7689ddef
[DEBUG] 2018-11-21 12:36:37 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration object -> org.hibernate.type.ObjectType@62d363ab
[DEBUG] 2018-11-21 12:36:37 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@62d363ab
[DEBUG] 2018-11-21 12:36:37 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@5ef8df1e
[DEBUG] 2018-11-21 12:36:37 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@27cf3151
[DEBUG] 2018-11-21 12:36:37 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@127e70c5
[DEBUG] 2018-11-21 12:36:37 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@5910de75
[DEBUG] 2018-11-21 12:36:37 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@4108fa66
[DEBUG] 2018-11-21 12:36:37 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@1f130eaf
[DEBUG] 2018-11-21 12:36:37 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@7e0aadd0
[DEBUG] 2018-11-21 12:36:37 DEBUG org.hibernate.type.BasicTypeRegistry.register() (BasicTypeRegistry.java:156): Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@21362712
[INFO] 2018-11-21 12:36:37 INFO com.mchange.v2.c3p0.impl.AbstractPoolBackedDataSource.getPoolManager() (AbstractPoolBackedDataSource.java:527): Initializing c3p0 pool... com.mchange.v2.c3p0.ComboPooledDataSource [ acquireIncrement -> 3, acquireRetryAttempts -> 30, acquireRetryDelay -> 1000, autoCommitOnClose -> false, automaticTestTable -> null, breakAfterAcquireFailure -> false, checkoutTimeout -> 0, connectionCustomizerClassName -> null, connectionTesterClassName -> com.mchange.v2.c3p0.impl.DefaultConnectionTester, contextClassLoaderSource -> caller, dataSourceName -> 2rxcez9zekyoic1pfa09z|c267ef4, debugUnreturnedConnectionStackTraces -> false, description -> null, driverClass -> com.mysql.jdbc.Driver, extensions -> {}, factoryClassLocation -> null, forceIgnoreUnresolvedTransactions -> false, forceSynchronousCheckins -> false, forceUseNamedDriverClass -> false, identityToken -> 2rxcez9zekyoic1pfa09z|c267ef4, idleConnectionTestPeriod -> 0, initialPoolSize -> 5, jdbcUrl -> jdbc:mysql://10.10.10.141/test1, maxAdministrativeTaskTime -> 0, maxConnectionAge -> 0, maxIdleTime -> 0, maxIdleTimeExcessConnections -> 0, maxPoolSize -> 10, maxStatements -> 0, maxStatementsPerConnection -> 0, minPoolSize -> 3, numHelperThreads -> 3, preferredTestQuery -> null, privilegeSpawnedThreads -> false, properties -> {user=******, password=******}, propertyCycle -> 0, statementCacheNumDeferredCloseThreads -> 0, testConnectionOnCheckin -> false, testConnectionOnCheckout -> false, unreturnedConnectionTimeout -> 0, userOverrides -> {}, usesTraditionalReflectiveProxies -> false ]
[INFO] 2018-11-21 12:36:37 INFO org.hibernate.dialect.Dialect.<init>() (Dialect.java:157): HHH000400: Using dialect: org.hibernate.dialect.MySQL55Dialect
[DEBUG] 2018-11-21 12:36:37 DEBUG org.hibernate.type.spi.TypeConfiguration.scope() (TypeConfiguration.java:142): Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@71ea1fda] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@62b3df3a]
[DEBUG] 2018-11-21 12:36:38 DEBUG org.hibernate.type.spi.TypeConfiguration.scope() (TypeConfiguration.java:147): Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@71ea1fda] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@5d1e09bc]
[DEBUG] 2018-11-21 12:36:38 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement() (SqlStatementLogger.java:94): 
    
    create table account (
       id integer not null auto_increment,
        username varchar(255),
        balance integer,
        primary key (id)
    ) engine=InnoDB
[DEBUG] 2018-11-21 12:36:38 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement() (SqlStatementLogger.java:94): 
    
    create table book (
       id integer not null auto_increment,
        book_name varchar(255),
        is_bn varchar(255),
        price integer,
        stock integer,
        primary key (id)
    ) engine=InnoDB
[TRACE] 2018-11-21 12:36:38 TRACE org.hibernate.type.spi.TypeConfiguration.sessionFactoryCreated() (TypeConfiguration.java:195): Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@5d1e09bc] for TypeConfiguration
[INFO] 2018-11-21 12:36:38 INFO org.springframework.context.support.AbstractApplicationContext.doClose() (AbstractApplicationContext.java:984): Closing org.springframework.context.support.GenericApplicationContext@56ef9176: startup date [Wed Nov 21 12:36:30 CST 2018]; root of context hierarchy
[TRACE] 2018-11-21 12:36:38 TRACE org.hibernate.type.spi.TypeConfiguration.sessionFactoryClosed() (TypeConfiguration.java:201): Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@5d1e09bc] for TypeConfiguration
[DEBUG] 2018-11-21 12:36:38 DEBUG org.hibernate.type.spi.TypeConfiguration$Scope.unsetSessionFactory() (TypeConfiguration.java:312): Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@47c4b77b] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@5d1e09bc]
